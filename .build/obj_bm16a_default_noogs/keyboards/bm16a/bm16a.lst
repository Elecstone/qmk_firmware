   1               		.file	"bm16a.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_init_kb,"ax",@progbits
  11               	.global	matrix_init_kb
  13               	matrix_init_kb:
  14               	.LFB112:
  15               		.file 1 "keyboards/bm16a/bm16a.c"
   1:keyboards/bm16a/bm16a.c **** /* Copyright 2019
   2:keyboards/bm16a/bm16a.c ****  *
   3:keyboards/bm16a/bm16a.c ****  * This program is free software: you can redistribute it and/or modify
   4:keyboards/bm16a/bm16a.c ****  * it under the terms of the GNU General Public License as published by
   5:keyboards/bm16a/bm16a.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:keyboards/bm16a/bm16a.c ****  * (at your option) any later version.
   7:keyboards/bm16a/bm16a.c ****  *
   8:keyboards/bm16a/bm16a.c ****  * This program is distributed in the hope that it will be useful,
   9:keyboards/bm16a/bm16a.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:keyboards/bm16a/bm16a.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:keyboards/bm16a/bm16a.c ****  * GNU General Public License for more details.
  12:keyboards/bm16a/bm16a.c ****  *
  13:keyboards/bm16a/bm16a.c ****  * You should have received a copy of the GNU General Public License
  14:keyboards/bm16a/bm16a.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:keyboards/bm16a/bm16a.c ****  */
  16:keyboards/bm16a/bm16a.c **** #include "bm16a.h"
  17:keyboards/bm16a/bm16a.c **** 
  18:keyboards/bm16a/bm16a.c **** void matrix_init_kb(void) {
  16               		.loc 1 18 27 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  19:keyboards/bm16a/bm16a.c **** 	// put your keyboard start-up code here
  20:keyboards/bm16a/bm16a.c **** 	// runs once when the firmware starts up
  21:keyboards/bm16a/bm16a.c **** 
  22:keyboards/bm16a/bm16a.c **** 	matrix_init_user();
  22               		.loc 1 22 2 view .LVU1
  23 0000 0C94 0000 		jmp matrix_init_user
  24               	.LVL0:
  25               		.cfi_endproc
  26               	.LFE112:
  28               		.section	.text.matrix_scan_kb,"ax",@progbits
  29               	.global	matrix_scan_kb
  31               	matrix_scan_kb:
  32               	.LFB113:
  23:keyboards/bm16a/bm16a.c **** }
  24:keyboards/bm16a/bm16a.c **** 
  25:keyboards/bm16a/bm16a.c **** void matrix_scan_kb(void) {
  33               		.loc 1 25 27 view -0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  26:keyboards/bm16a/bm16a.c **** 	// put your looping keyboard code here
  27:keyboards/bm16a/bm16a.c **** 	// runs every cycle (a lot)
  28:keyboards/bm16a/bm16a.c **** 
  29:keyboards/bm16a/bm16a.c **** 	matrix_scan_user();
  39               		.loc 1 29 2 view .LVU3
  40 0000 0C94 0000 		jmp matrix_scan_user
  41               	.LVL1:
  42               		.cfi_endproc
  43               	.LFE113:
  45               		.section	.text.process_record_kb,"ax",@progbits
  46               	.global	process_record_kb
  48               	process_record_kb:
  49               	.LVL2:
  50               	.LFB114:
  30:keyboards/bm16a/bm16a.c **** }
  31:keyboards/bm16a/bm16a.c **** 
  32:keyboards/bm16a/bm16a.c **** bool process_record_kb(uint16_t keycode, keyrecord_t *record) {
  51               		.loc 1 32 63 view -0
  52               		.cfi_startproc
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 0 */
  56               	.L__stack_usage = 0
  33:keyboards/bm16a/bm16a.c **** 	// put your per-action keyboard code here
  34:keyboards/bm16a/bm16a.c **** 	// runs for every action, just before processing by the firmware
  35:keyboards/bm16a/bm16a.c **** 
  36:keyboards/bm16a/bm16a.c **** 	return process_record_user(keycode, record);
  57               		.loc 1 36 2 view .LVU5
  58               		.loc 1 36 9 is_stmt 0 view .LVU6
  59 0000 0C94 0000 		jmp process_record_user
  60               	.LVL3:
  61               		.loc 1 36 9 view .LVU7
  62               		.cfi_endproc
  63               	.LFE114:
  65               		.section	.text.led_set_kb,"ax",@progbits
  66               	.global	led_set_kb
  68               	led_set_kb:
  69               	.LVL4:
  70               	.LFB115:
  37:keyboards/bm16a/bm16a.c **** }
  38:keyboards/bm16a/bm16a.c **** 
  39:keyboards/bm16a/bm16a.c **** void led_set_kb(uint8_t usb_led) {
  71               		.loc 1 39 34 is_stmt 1 view -0
  72               		.cfi_startproc
  73               	/* prologue: function */
  74               	/* frame size = 0 */
  75               	/* stack size = 0 */
  76               	.L__stack_usage = 0
  40:keyboards/bm16a/bm16a.c **** 	// put your keyboard LED indicator (ex: Caps Lock LED) toggling code here
  41:keyboards/bm16a/bm16a.c **** 
  42:keyboards/bm16a/bm16a.c **** 	led_set_user(usb_led);
  77               		.loc 1 42 2 view .LVU9
  78 0000 0C94 0000 		jmp led_set_user
  79               	.LVL5:
  80               		.loc 1 42 2 is_stmt 0 view .LVU10
  81               		.cfi_endproc
  82               	.LFE115:
  84               		.text
  85               	.Letext0:
  86               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdint.h"
  87               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/lib/avr-gcc/8/gcc/avr/8.3.0/include/stddef.h"
  88               		.file 4 "tmk_core/common/keyboard.h"
  89               		.file 5 "tmk_core/common/action.h"
  90               		.file 6 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
  91               		.file 7 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
  92               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
  93               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
  94               		.file 10 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdio.h"
  95               		.file 11 "tmk_core/common/report.h"
  96               		.file 12 "tmk_core/common/host.h"
  97               		.file 13 "tmk_core/common/debug.h"
  98               		.file 14 "quantum/keycode_config.h"
  99               		.file 15 "quantum/keymap.h"
 100               		.file 16 "./quantum/color.h"
 101               		.file 17 "quantum/rgblight.h"
 102               		.file 18 "tmk_core/common/action_layer.h"
 103               		.file 19 "tmk_core/common/timer.h"
 104               		.file 20 "tmk_core/common/action_util.h"
 105               		.file 21 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdlib.h"
 106               		.file 22 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 bm16a.c
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccjged87.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccjged87.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccjged87.s:4      *ABS*:000000000000003f __SREG__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccjged87.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccjged87.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccjged87.s:13     .text.matrix_init_kb:0000000000000000 matrix_init_kb
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccjged87.s:31     .text.matrix_scan_kb:0000000000000000 matrix_scan_kb
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccjged87.s:48     .text.process_record_kb:0000000000000000 process_record_kb
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccjged87.s:68     .text.led_set_kb:0000000000000000 led_set_kb

UNDEFINED SYMBOLS
matrix_init_user
matrix_scan_user
process_record_user
led_set_user
