   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.disable_jtag,"ax",@progbits
  11               	.global	disable_jtag
  13               	disable_jtag:
  14               	.LFB105:
  15               		.file 1 "tmk_core/common/keyboard.c"
   1:tmk_core/common/keyboard.c **** /*
   2:tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/keyboard.c **** 
   4:tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/keyboard.c **** (at your option) any later version.
   8:tmk_core/common/keyboard.c **** 
   9:tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:tmk_core/common/keyboard.c **** 
  14:tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/keyboard.c **** */
  17:tmk_core/common/keyboard.c **** 
  18:tmk_core/common/keyboard.c **** #include <stdint.h>
  19:tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:tmk_core/common/keyboard.c **** #include "matrix.h"
  21:tmk_core/common/keyboard.c **** #include "keymap.h"
  22:tmk_core/common/keyboard.c **** #include "host.h"
  23:tmk_core/common/keyboard.c **** #include "led.h"
  24:tmk_core/common/keyboard.c **** #include "keycode.h"
  25:tmk_core/common/keyboard.c **** #include "timer.h"
  26:tmk_core/common/keyboard.c **** #include "print.h"
  27:tmk_core/common/keyboard.c **** #include "debug.h"
  28:tmk_core/common/keyboard.c **** #include "command.h"
  29:tmk_core/common/keyboard.c **** #include "util.h"
  30:tmk_core/common/keyboard.c **** #include "sendchar.h"
  31:tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  34:tmk_core/common/keyboard.c **** #    include "backlight.h"
  35:tmk_core/common/keyboard.c **** #endif
  36:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  37:tmk_core/common/keyboard.c **** #    include "bootmagic.h"
  38:tmk_core/common/keyboard.c **** #else
  39:tmk_core/common/keyboard.c **** #    include "magic.h"
  40:tmk_core/common/keyboard.c **** #endif
  41:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  42:tmk_core/common/keyboard.c **** #    include "mousekey.h"
  43:tmk_core/common/keyboard.c **** #endif
  44:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  45:tmk_core/common/keyboard.c **** #    include "ps2_mouse.h"
  46:tmk_core/common/keyboard.c **** #endif
  47:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  48:tmk_core/common/keyboard.c **** #    include "serial_mouse.h"
  49:tmk_core/common/keyboard.c **** #endif
  50:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  51:tmk_core/common/keyboard.c **** #    include "adb.h"
  52:tmk_core/common/keyboard.c **** #endif
  53:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  54:tmk_core/common/keyboard.c **** #    include "rgblight.h"
  55:tmk_core/common/keyboard.c **** #endif
  56:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  57:tmk_core/common/keyboard.c **** #    include "process_steno.h"
  58:tmk_core/common/keyboard.c **** #endif
  59:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
  60:tmk_core/common/keyboard.c **** #    include "fauxclicky.h"
  61:tmk_core/common/keyboard.c **** #endif
  62:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  63:tmk_core/common/keyboard.c **** #    include "serial_link/system/serial_link.h"
  64:tmk_core/common/keyboard.c **** #endif
  65:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  66:tmk_core/common/keyboard.c **** #    include "visualizer/visualizer.h"
  67:tmk_core/common/keyboard.c **** #endif
  68:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  69:tmk_core/common/keyboard.c **** #    include "pointing_device.h"
  70:tmk_core/common/keyboard.c **** #endif
  71:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  72:tmk_core/common/keyboard.c **** #    include "process_midi.h"
  73:tmk_core/common/keyboard.c **** #endif
  74:tmk_core/common/keyboard.c **** #ifdef HD44780_ENABLE
  75:tmk_core/common/keyboard.c **** #    include "hd44780.h"
  76:tmk_core/common/keyboard.c **** #endif
  77:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
  78:tmk_core/common/keyboard.c **** #    include "qwiic.h"
  79:tmk_core/common/keyboard.c **** #endif
  80:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
  81:tmk_core/common/keyboard.c **** #    include "oled_driver.h"
  82:tmk_core/common/keyboard.c **** #endif
  83:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
  84:tmk_core/common/keyboard.c **** #    include "velocikey.h"
  85:tmk_core/common/keyboard.c **** #endif
  86:tmk_core/common/keyboard.c **** #ifdef VIA_ENABLE
  87:tmk_core/common/keyboard.c **** #    include "via.h"
  88:tmk_core/common/keyboard.c **** #endif
  89:tmk_core/common/keyboard.c **** 
  90:tmk_core/common/keyboard.c **** // Only enable this if console is enabled to print to
  91:tmk_core/common/keyboard.c **** #if defined(DEBUG_MATRIX_SCAN_RATE) && defined(CONSOLE_ENABLE)
  92:tmk_core/common/keyboard.c **** static uint32_t matrix_timer      = 0;
  93:tmk_core/common/keyboard.c **** static uint32_t matrix_scan_count = 0;
  94:tmk_core/common/keyboard.c **** 
  95:tmk_core/common/keyboard.c **** void matrix_scan_perf_task(void) {
  96:tmk_core/common/keyboard.c ****     matrix_scan_count++;
  97:tmk_core/common/keyboard.c **** 
  98:tmk_core/common/keyboard.c ****     uint32_t timer_now = timer_read32();
  99:tmk_core/common/keyboard.c ****     if (TIMER_DIFF_32(timer_now, matrix_timer) > 1000) {
 100:tmk_core/common/keyboard.c ****         dprintf("matrix scan frequency: %d\n", matrix_scan_count);
 101:tmk_core/common/keyboard.c **** 
 102:tmk_core/common/keyboard.c ****         matrix_timer      = timer_now;
 103:tmk_core/common/keyboard.c ****         matrix_scan_count = 0;
 104:tmk_core/common/keyboard.c ****     }
 105:tmk_core/common/keyboard.c **** }
 106:tmk_core/common/keyboard.c **** #else
 107:tmk_core/common/keyboard.c **** #    define matrix_scan_perf_task()
 108:tmk_core/common/keyboard.c **** #endif
 109:tmk_core/common/keyboard.c **** 
 110:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 111:tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 112:tmk_core/common/keyboard.c **** static matrix_row_t   get_real_keys(uint8_t row, matrix_row_t rowdata) {
 113:tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
 114:tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
 115:tmk_core/common/keyboard.c ****         // read each key in the row data and check if the keymap defines it as a real key
 116:tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1 << col))) {
 117:tmk_core/common/keyboard.c ****             // this creates new row data, if a key is defined in the keymap, it will be set here
 118:tmk_core/common/keyboard.c ****             out |= 1 << col;
 119:tmk_core/common/keyboard.c ****         }
 120:tmk_core/common/keyboard.c ****     }
 121:tmk_core/common/keyboard.c ****     return out;
 122:tmk_core/common/keyboard.c **** }
 123:tmk_core/common/keyboard.c **** 
 124:tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata) {
 125:tmk_core/common/keyboard.c ****     rowdata &= rowdata - 1;  // if there are less than two bits (keys) set, rowdata will become zer
 126:tmk_core/common/keyboard.c ****     return rowdata;
 127:tmk_core/common/keyboard.c **** }
 128:tmk_core/common/keyboard.c **** 
 129:tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata) {
 130:tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
 131:tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
 132:tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
 133:tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
 134:tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 135:tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0) {
 136:tmk_core/common/keyboard.c ****         return false;
 137:tmk_core/common/keyboard.c ****     }
 138:tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 139:tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 140:tmk_core/common/keyboard.c ****     so they are filtered out.
 141:tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 142:tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 143:tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 144:tmk_core/common/keyboard.c ****     */
 145:tmk_core/common/keyboard.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 146:tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)) {
 147:tmk_core/common/keyboard.c ****             return true;
 148:tmk_core/common/keyboard.c ****         }
 149:tmk_core/common/keyboard.c ****     }
 150:tmk_core/common/keyboard.c ****     return false;
 151:tmk_core/common/keyboard.c **** }
 152:tmk_core/common/keyboard.c **** 
 153:tmk_core/common/keyboard.c **** #endif
 154:tmk_core/common/keyboard.c **** 
 155:tmk_core/common/keyboard.c **** void disable_jtag(void) {
  16               		.loc 1 155 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 156:tmk_core/common/keyboard.c **** // To use PF4-7 (PC2-5 on ATmega32A), disable JTAG by writing JTD bit twice within four cycles.
 157:tmk_core/common/keyboard.c **** #if (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__) || defined(__AVR_AT90USB1286__) || 
 158:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  22               		.loc 1 158 5 view .LVU1
  23               		.loc 1 158 11 is_stmt 0 view .LVU2
  24 0000 85B7      		in r24,0x35
  25 0002 8068      		ori r24,lo8(-128)
  26 0004 85BF      		out 0x35,r24
 159:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  27               		.loc 1 159 5 is_stmt 1 view .LVU3
  28               		.loc 1 159 11 is_stmt 0 view .LVU4
  29 0006 85B7      		in r24,0x35
  30 0008 8068      		ori r24,lo8(-128)
  31 000a 85BF      		out 0x35,r24
  32               	/* epilogue start */
 160:tmk_core/common/keyboard.c **** #elif defined(__AVR_ATmega32A__)
 161:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 162:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 163:tmk_core/common/keyboard.c **** #endif
 164:tmk_core/common/keyboard.c **** }
  33               		.loc 1 164 1 view .LVU5
  34 000c 0895      		ret
  35               		.cfi_endproc
  36               	.LFE105:
  38               		.section	.text.keyboard_pre_init_user,"ax",@progbits
  39               		.weak	keyboard_pre_init_user
  41               	keyboard_pre_init_user:
  42               	.LFB107:
 165:tmk_core/common/keyboard.c **** 
 166:tmk_core/common/keyboard.c **** /** \brief matrix_setup
 167:tmk_core/common/keyboard.c ****  *
 168:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 169:tmk_core/common/keyboard.c ****  */
 170:tmk_core/common/keyboard.c **** __attribute__((weak)) void matrix_setup(void) {}
 171:tmk_core/common/keyboard.c **** 
 172:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_user
 173:tmk_core/common/keyboard.c ****  *
 174:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 175:tmk_core/common/keyboard.c ****  */
 176:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_user(void) {}
  43               		.loc 1 176 57 is_stmt 1 view -0
  44               		.cfi_startproc
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
  49               		.loc 1 176 58 view .LVU7
  50               	/* epilogue start */
  51               		.loc 1 176 1 is_stmt 0 view .LVU8
  52 0000 0895      		ret
  53               		.cfi_endproc
  54               	.LFE107:
  56               		.set	keyboard_pre_init_user.localalias.0,keyboard_pre_init_user
  57               		.section	.text.matrix_setup,"ax",@progbits
  58               		.weak	matrix_setup
  60               	matrix_setup:
  61               	.LFB119:
  62               		.cfi_startproc
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
  67               	/* epilogue start */
  68 0000 0895      		ret
  69               		.cfi_endproc
  70               	.LFE119:
  72               		.section	.text.keyboard_pre_init_kb,"ax",@progbits
  73               		.weak	keyboard_pre_init_kb
  75               	keyboard_pre_init_kb:
  76               	.LFB108:
 177:tmk_core/common/keyboard.c **** 
 178:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_kb
 179:tmk_core/common/keyboard.c ****  *
 180:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 181:tmk_core/common/keyboard.c ****  */
 182:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_kb(void) { keyboard_pre_init_user(); }
  77               		.loc 1 182 55 is_stmt 1 view -0
  78               		.cfi_startproc
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 0 */
  82               	.L__stack_usage = 0
  83               		.loc 1 182 57 view .LVU10
  84 0000 0C94 0000 		jmp keyboard_pre_init_user
  85               	.LVL0:
  86               		.cfi_endproc
  87               	.LFE108:
  89               		.section	.text.keyboard_post_init_user,"ax",@progbits
  90               		.weak	keyboard_post_init_user
  92               	keyboard_post_init_user:
  93               	.LFB117:
  94               		.cfi_startproc
  95               	/* prologue: function */
  96               	/* frame size = 0 */
  97               	/* stack size = 0 */
  98               	.L__stack_usage = 0
  99               	/* epilogue start */
 100 0000 0895      		ret
 101               		.cfi_endproc
 102               	.LFE117:
 104               		.section	.text.keyboard_post_init_kb,"ax",@progbits
 105               		.weak	keyboard_post_init_kb
 107               	keyboard_post_init_kb:
 108               	.LFB110:
 183:tmk_core/common/keyboard.c **** 
 184:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_user
 185:tmk_core/common/keyboard.c ****  *
 186:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 187:tmk_core/common/keyboard.c ****  */
 188:tmk_core/common/keyboard.c **** 
 189:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_user() {}
 190:tmk_core/common/keyboard.c **** 
 191:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_kb
 192:tmk_core/common/keyboard.c ****  *
 193:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 194:tmk_core/common/keyboard.c ****  */
 195:tmk_core/common/keyboard.c **** 
 196:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_kb(void) { keyboard_post_init_user(); }
 109               		.loc 1 196 56 view -0
 110               		.cfi_startproc
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
 115               		.loc 1 196 58 view .LVU12
 116 0000 0C94 0000 		jmp keyboard_post_init_user
 117               	.LVL1:
 118               		.cfi_endproc
 119               	.LFE110:
 121               		.section	.text.keyboard_setup,"ax",@progbits
 122               	.global	keyboard_setup
 124               	keyboard_setup:
 125               	.LFB111:
 197:tmk_core/common/keyboard.c **** 
 198:tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 199:tmk_core/common/keyboard.c ****  *
 200:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 201:tmk_core/common/keyboard.c ****  */
 202:tmk_core/common/keyboard.c **** void keyboard_setup(void) {
 126               		.loc 1 202 27 view -0
 127               		.cfi_startproc
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
 203:tmk_core/common/keyboard.c **** #ifndef NO_JTAG_DISABLE
 204:tmk_core/common/keyboard.c ****     disable_jtag();
 132               		.loc 1 204 5 view .LVU14
 133 0000 0E94 0000 		call disable_jtag
 134               	.LVL2:
 205:tmk_core/common/keyboard.c **** #endif
 206:tmk_core/common/keyboard.c ****     matrix_setup();
 135               		.loc 1 206 5 view .LVU15
 136 0004 0E94 0000 		call matrix_setup
 137               	.LVL3:
 207:tmk_core/common/keyboard.c ****     keyboard_pre_init_kb();
 138               		.loc 1 207 5 view .LVU16
 139 0008 0C94 0000 		jmp keyboard_pre_init_kb
 140               	.LVL4:
 141               		.cfi_endproc
 142               	.LFE111:
 144               		.section	.text.is_keyboard_master,"ax",@progbits
 145               		.weak	is_keyboard_master
 147               	is_keyboard_master:
 148               	.LFB112:
 208:tmk_core/common/keyboard.c **** }
 209:tmk_core/common/keyboard.c **** 
 210:tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 211:tmk_core/common/keyboard.c ****  *
 212:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 213:tmk_core/common/keyboard.c ****  */
 214:tmk_core/common/keyboard.c **** __attribute__((weak)) bool is_keyboard_master(void) { return true; }
 149               		.loc 1 214 53 view -0
 150               		.cfi_startproc
 151               	/* prologue: function */
 152               	/* frame size = 0 */
 153               	/* stack size = 0 */
 154               	.L__stack_usage = 0
 155               		.loc 1 214 55 view .LVU18
 156               		.loc 1 214 1 is_stmt 0 view .LVU19
 157 0000 81E0      		ldi r24,lo8(1)
 158               	/* epilogue start */
 159 0002 0895      		ret
 160               		.cfi_endproc
 161               	.LFE112:
 163               		.section	.text.keyboard_init,"ax",@progbits
 164               	.global	keyboard_init
 166               	keyboard_init:
 167               	.LFB113:
 215:tmk_core/common/keyboard.c **** 
 216:tmk_core/common/keyboard.c **** /** \brief keyboard_init
 217:tmk_core/common/keyboard.c ****  *
 218:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 219:tmk_core/common/keyboard.c ****  */
 220:tmk_core/common/keyboard.c **** void keyboard_init(void) {
 168               		.loc 1 220 26 is_stmt 1 view -0
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 221:tmk_core/common/keyboard.c ****     timer_init();
 174               		.loc 1 221 5 view .LVU21
 175 0000 0E94 0000 		call timer_init
 176               	.LVL5:
 222:tmk_core/common/keyboard.c ****     matrix_init();
 177               		.loc 1 222 5 view .LVU22
 178 0004 0E94 0000 		call matrix_init
 179               	.LVL6:
 223:tmk_core/common/keyboard.c **** #ifdef VIA_ENABLE
 224:tmk_core/common/keyboard.c ****     via_init();
 225:tmk_core/common/keyboard.c **** #endif
 226:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 227:tmk_core/common/keyboard.c ****     qwiic_init();
 228:tmk_core/common/keyboard.c **** #endif
 229:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 230:tmk_core/common/keyboard.c ****     oled_init(OLED_ROTATION_0);
 231:tmk_core/common/keyboard.c **** #endif
 232:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 233:tmk_core/common/keyboard.c ****     ps2_mouse_init();
 234:tmk_core/common/keyboard.c **** #endif
 235:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 236:tmk_core/common/keyboard.c ****     serial_mouse_init();
 237:tmk_core/common/keyboard.c **** #endif
 238:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 239:tmk_core/common/keyboard.c ****     adb_mouse_init();
 240:tmk_core/common/keyboard.c **** #endif
 241:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 242:tmk_core/common/keyboard.c ****     bootmagic();
 243:tmk_core/common/keyboard.c **** #else
 244:tmk_core/common/keyboard.c ****     magic();
 180               		.loc 1 244 5 view .LVU23
 181 0008 0E94 0000 		call magic
 182               	.LVL7:
 245:tmk_core/common/keyboard.c **** #endif
 246:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 247:tmk_core/common/keyboard.c ****     backlight_init();
 183               		.loc 1 247 5 view .LVU24
 184 000c 0E94 0000 		call backlight_init
 185               	.LVL8:
 248:tmk_core/common/keyboard.c **** #endif
 249:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 250:tmk_core/common/keyboard.c ****     rgblight_init();
 186               		.loc 1 250 5 view .LVU25
 187 0010 0E94 0000 		call rgblight_init
 188               	.LVL9:
 251:tmk_core/common/keyboard.c **** #endif
 252:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 253:tmk_core/common/keyboard.c ****     steno_init();
 254:tmk_core/common/keyboard.c **** #endif
 255:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
 256:tmk_core/common/keyboard.c ****     fauxclicky_init();
 257:tmk_core/common/keyboard.c **** #endif
 258:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 259:tmk_core/common/keyboard.c ****     pointing_device_init();
 260:tmk_core/common/keyboard.c **** #endif
 261:tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 262:tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 263:tmk_core/common/keyboard.c ****     eeconfig_update_keymap(keymap_config.raw);
 264:tmk_core/common/keyboard.c **** #endif
 265:tmk_core/common/keyboard.c ****     keyboard_post_init_kb(); /* Always keep this last */
 189               		.loc 1 265 5 view .LVU26
 190 0014 0C94 0000 		jmp keyboard_post_init_kb
 191               	.LVL10:
 192               		.cfi_endproc
 193               	.LFE113:
 195               		.section	.text.keyboard_task,"ax",@progbits
 196               	.global	keyboard_task
 198               	keyboard_task:
 199               	.LFB114:
 266:tmk_core/common/keyboard.c **** }
 267:tmk_core/common/keyboard.c **** 
 268:tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 269:tmk_core/common/keyboard.c ****  *
 270:tmk_core/common/keyboard.c ****  * Do routine keyboard jobs:
 271:tmk_core/common/keyboard.c ****  *
 272:tmk_core/common/keyboard.c ****  * * scan matrix
 273:tmk_core/common/keyboard.c ****  * * handle mouse movements
 274:tmk_core/common/keyboard.c ****  * * run visualizer code
 275:tmk_core/common/keyboard.c ****  * * handle midi commands
 276:tmk_core/common/keyboard.c ****  * * light LEDs
 277:tmk_core/common/keyboard.c ****  *
 278:tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 279:tmk_core/common/keyboard.c ****  */
 280:tmk_core/common/keyboard.c **** void keyboard_task(void) {
 200               		.loc 1 280 26 view -0
 201               		.cfi_startproc
 202 0000 AF92      		push r10
 203               	.LCFI0:
 204               		.cfi_def_cfa_offset 3
 205               		.cfi_offset 10, -2
 206 0002 BF92      		push r11
 207               	.LCFI1:
 208               		.cfi_def_cfa_offset 4
 209               		.cfi_offset 11, -3
 210 0004 CF92      		push r12
 211               	.LCFI2:
 212               		.cfi_def_cfa_offset 5
 213               		.cfi_offset 12, -4
 214 0006 DF92      		push r13
 215               	.LCFI3:
 216               		.cfi_def_cfa_offset 6
 217               		.cfi_offset 13, -5
 218 0008 EF92      		push r14
 219               	.LCFI4:
 220               		.cfi_def_cfa_offset 7
 221               		.cfi_offset 14, -6
 222 000a FF92      		push r15
 223               	.LCFI5:
 224               		.cfi_def_cfa_offset 8
 225               		.cfi_offset 15, -7
 226 000c 0F93      		push r16
 227               	.LCFI6:
 228               		.cfi_def_cfa_offset 9
 229               		.cfi_offset 16, -8
 230 000e 1F93      		push r17
 231               	.LCFI7:
 232               		.cfi_def_cfa_offset 10
 233               		.cfi_offset 17, -9
 234 0010 CF93      		push r28
 235               	.LCFI8:
 236               		.cfi_def_cfa_offset 11
 237               		.cfi_offset 28, -10
 238 0012 DF93      		push r29
 239               	.LCFI9:
 240               		.cfi_def_cfa_offset 12
 241               		.cfi_offset 29, -11
 242 0014 CDB7      		in r28,__SP_L__
 243 0016 DEB7      		in r29,__SP_H__
 244               	.LCFI10:
 245               		.cfi_def_cfa_register 28
 246 0018 2A97      		sbiw r28,10
 247               	.LCFI11:
 248               		.cfi_def_cfa_offset 22
 249 001a 0FB6      		in __tmp_reg__,__SREG__
 250 001c F894      		cli
 251 001e DEBF      		out __SP_H__,r29
 252 0020 0FBE      		out __SREG__,__tmp_reg__
 253 0022 CDBF      		out __SP_L__,r28
 254               	/* prologue: function */
 255               	/* frame size = 10 */
 256               	/* stack size = 20 */
 257               	.L__stack_usage = 20
 281:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 258               		.loc 1 281 5 view .LVU28
 282:tmk_core/common/keyboard.c ****     static uint8_t      led_status    = 0;
 259               		.loc 1 282 5 view .LVU29
 283:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 260               		.loc 1 283 5 view .LVU30
 261               	.LVL11:
 284:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_change = 0;
 262               		.loc 1 284 5 view .LVU31
 285:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 286:tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 287:tmk_core/common/keyboard.c **** #endif
 288:tmk_core/common/keyboard.c **** 
 289:tmk_core/common/keyboard.c **** #if defined(OLED_DRIVER_ENABLE) && !defined(OLED_DISABLE_TIMEOUT)
 290:tmk_core/common/keyboard.c ****     uint8_t ret = matrix_scan();
 291:tmk_core/common/keyboard.c **** #else
 292:tmk_core/common/keyboard.c ****     matrix_scan();
 263               		.loc 1 292 5 view .LVU32
 264 0024 0E94 0000 		call matrix_scan
 265               	.LVL12:
 293:tmk_core/common/keyboard.c **** #endif
 294:tmk_core/common/keyboard.c **** 
 295:tmk_core/common/keyboard.c ****     if (is_keyboard_master()) {
 266               		.loc 1 295 5 view .LVU33
 267               		.loc 1 295 9 is_stmt 0 view .LVU34
 268 0028 0E94 0000 		call is_keyboard_master
 269               	.LVL13:
 270               		.loc 1 295 8 view .LVU35
 271 002c 8823      		tst r24
 272 002e 01F4      		brne .+2
 273 0030 00C0      		rjmp .L11
 274 0032 80E0      		ldi r24,lo8(matrix_prev.5888)
 275 0034 A82E      		mov r10,r24
 276 0036 80E0      		ldi r24,hi8(matrix_prev.5888)
 277 0038 B82E      		mov r11,r24
 278 003a 10E0      		ldi r17,0
 279 003c 00E0      		ldi r16,0
 280               	.LVL14:
 281               	.L18:
 282               		.loc 1 295 8 view .LVU36
 283 003e C02E      		mov r12,r16
 284               	.LVL15:
 285               	.LBB7:
 296:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 297:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 286               		.loc 1 297 13 is_stmt 1 view .LVU37
 287               		.loc 1 297 29 is_stmt 0 view .LVU38
 288 0040 802F      		mov r24,r16
 289 0042 0E94 0000 		call matrix_get_row
 290               	.LVL16:
 291 0046 E82E      		mov r14,r24
 292               	.LVL17:
 298:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 293               		.loc 1 298 13 is_stmt 1 view .LVU39
 294               		.loc 1 298 53 is_stmt 0 view .LVU40
 295 0048 F501      		movw r30,r10
 296 004a D190      		ld r13,Z+
 297 004c 5F01      		movw r10,r30
 298               	.LVL18:
 299:tmk_core/common/keyboard.c ****             if (matrix_change) {
 299               		.loc 1 299 13 is_stmt 1 view .LVU41
 300               		.loc 1 299 16 is_stmt 0 view .LVU42
 301 004e D816      		cp r13,r24
 302 0050 01F4      		brne .+2
 303 0052 00C0      		rjmp .L12
 304               	.LBB8:
 300:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 301:tmk_core/common/keyboard.c ****                 if (has_ghost_in_row(r, matrix_row)) {
 302:tmk_core/common/keyboard.c ****                     continue;
 303:tmk_core/common/keyboard.c ****                 }
 304:tmk_core/common/keyboard.c **** #endif
 305:tmk_core/common/keyboard.c ****                 if (debug_matrix) matrix_print();
 305               		.loc 1 305 17 is_stmt 1 view .LVU43
 306               		.loc 1 305 21 is_stmt 0 view .LVU44
 307 0054 8091 0000 		lds r24,debug_config
 308               		.loc 1 305 20 view .LVU45
 309 0058 81FD      		sbrc r24,1
 310               		.loc 1 305 35 is_stmt 1 discriminator 1 view .LVU46
 311 005a 0E94 0000 		call matrix_print
 312               	.LVL19:
 313               	.L13:
 306:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 314               		.loc 1 306 17 view .LVU47
 307:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 315               		.loc 1 307 17 view .LVU48
 316               	.LBB9:
 317               		.loc 1 307 22 view .LVU49
 318               		.loc 1 307 30 is_stmt 0 view .LVU50
 319 005e 80E0      		ldi r24,0
 320               	.LBE9:
 306:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 321               		.loc 1 306 30 view .LVU51
 322 0060 FF24      		clr r15
 323 0062 F394      		inc r15
 324               	.LBE8:
 298:tmk_core/common/keyboard.c ****             if (matrix_change) {
 325               		.loc 1 298 27 view .LVU52
 326 0064 DE24      		eor r13,r14
 327               	.LVL20:
 328               	.L17:
 329               	.LBB12:
 330               	.LBB10:
 308:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 331               		.loc 1 308 21 is_stmt 1 view .LVU53
 332               		.loc 1 308 25 is_stmt 0 view .LVU54
 333 0066 9D2D      		mov r25,r13
 334 0068 9F21      		and r25,r15
 335               		.loc 1 308 24 view .LVU55
 336 006a 01F0      		breq .L14
 309:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 337               		.loc 1 309 25 is_stmt 1 view .LVU56
 338               		.loc 1 309 49 is_stmt 0 view .LVU57
 339 006c 8E83      		std Y+6,r24
 340 006e CF82      		std Y+7,r12
 310:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 341               		.loc 1 310 91 view .LVU58
 342 0070 EF20      		and r14,r15
 343               	.LVL21:
 344               		.loc 1 310 91 view .LVU59
 345 0072 81E0      		ldi r24,lo8(1)
 346               	.LVL22:
 347               		.loc 1 310 91 view .LVU60
 348 0074 01F4      		brne .L15
 349 0076 80E0      		ldi r24,0
 350               	.L15:
 309:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 351               		.loc 1 309 49 view .LVU61
 352 0078 8887      		std Y+8,r24
 353               		.loc 1 310 113 view .LVU62
 354 007a 0E94 0000 		call timer_read
 355               	.LVL23:
 356               		.loc 1 310 126 view .LVU63
 357 007e 8160      		ori r24,1
 309:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 358               		.loc 1 309 49 view .LVU64
 359 0080 782F      		mov r23,r24
 360 0082 9A87      		std Y+10,r25
 361 0084 8987      		std Y+9,r24
 309:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 362               		.loc 1 309 25 view .LVU65
 363 0086 4E81      		ldd r20,Y+6
 364 0088 5F81      		ldd r21,Y+7
 365 008a 6885      		ldd r22,Y+8
 366 008c 8A85      		ldd r24,Y+10
 367 008e 0E94 0000 		call action_exec
 368               	.LVL24:
 311:tmk_core/common/keyboard.c ****                         });
 312:tmk_core/common/keyboard.c ****                         // record a processed key
 313:tmk_core/common/keyboard.c ****                         matrix_prev[r] ^= col_mask;
 369               		.loc 1 313 25 is_stmt 1 view .LVU66
 370               		.loc 1 313 40 is_stmt 0 view .LVU67
 371 0092 F801      		movw r30,r16
 372 0094 E050      		subi r30,lo8(-(matrix_prev.5888))
 373 0096 F040      		sbci r31,hi8(-(matrix_prev.5888))
 374 0098 8081      		ld r24,Z
 375 009a F826      		eor r15,r24
 376               	.LVL25:
 377               		.loc 1 313 40 view .LVU68
 378 009c F082      		st Z,r15
 314:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 315:tmk_core/common/keyboard.c ****                         // only jump out if we have processed "enough" keys.
 316:tmk_core/common/keyboard.c ****                         if (++keys_processed >= QMK_KEYS_PER_SCAN)
 317:tmk_core/common/keyboard.c **** #endif
 318:tmk_core/common/keyboard.c ****                             // process a key per task call
 319:tmk_core/common/keyboard.c ****                             goto MATRIX_LOOP_END;
 379               		.loc 1 319 29 is_stmt 1 view .LVU69
 380               	.LVL26:
 381               	.L16:
 382               		.loc 1 319 29 is_stmt 0 view .LVU70
 383               	.LBE10:
 384               	.LBE12:
 385               	.LBE7:
 320:tmk_core/common/keyboard.c ****                     }
 321:tmk_core/common/keyboard.c ****                 }
 322:tmk_core/common/keyboard.c ****             }
 323:tmk_core/common/keyboard.c ****         }
 324:tmk_core/common/keyboard.c ****     }
 325:tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 326:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 327:tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 328:tmk_core/common/keyboard.c ****     if (!keys_processed)
 329:tmk_core/common/keyboard.c **** #endif
 330:tmk_core/common/keyboard.c ****         action_exec(TICK);
 331:tmk_core/common/keyboard.c **** 
 332:tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 333:tmk_core/common/keyboard.c **** 
 334:tmk_core/common/keyboard.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
 335:tmk_core/common/keyboard.c ****     matrix_scan_perf_task();
 336:tmk_core/common/keyboard.c **** #endif
 337:tmk_core/common/keyboard.c **** 
 338:tmk_core/common/keyboard.c **** #if defined(RGBLIGHT_ANIMATIONS) && defined(RGBLIGHT_ENABLE)
 339:tmk_core/common/keyboard.c ****     rgblight_task();
 386               		.loc 1 339 5 is_stmt 1 view .LVU71
 387 009e 0E94 0000 		call rgblight_task
 388               	.LVL27:
 340:tmk_core/common/keyboard.c **** #endif
 341:tmk_core/common/keyboard.c **** 
 342:tmk_core/common/keyboard.c **** #if defined(BACKLIGHT_ENABLE)
 343:tmk_core/common/keyboard.c **** #    if defined(BACKLIGHT_PIN) || defined(BACKLIGHT_PINS)
 344:tmk_core/common/keyboard.c ****     backlight_task();
 389               		.loc 1 344 5 view .LVU72
 390 00a2 0E94 0000 		call backlight_task
 391               	.LVL28:
 345:tmk_core/common/keyboard.c **** #    endif
 346:tmk_core/common/keyboard.c **** #endif
 347:tmk_core/common/keyboard.c **** 
 348:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 349:tmk_core/common/keyboard.c ****     qwiic_task();
 350:tmk_core/common/keyboard.c **** #endif
 351:tmk_core/common/keyboard.c **** 
 352:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 353:tmk_core/common/keyboard.c ****     oled_task();
 354:tmk_core/common/keyboard.c **** #    ifndef OLED_DISABLE_TIMEOUT
 355:tmk_core/common/keyboard.c ****     // Wake up oled if user is using those fabulous keys!
 356:tmk_core/common/keyboard.c ****     if (ret) oled_on();
 357:tmk_core/common/keyboard.c **** #    endif
 358:tmk_core/common/keyboard.c **** #endif
 359:tmk_core/common/keyboard.c **** 
 360:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 361:tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 362:tmk_core/common/keyboard.c ****     mousekey_task();
 392               		.loc 1 362 5 view .LVU73
 393 00a6 0E94 0000 		call mousekey_task
 394               	.LVL29:
 363:tmk_core/common/keyboard.c **** #endif
 364:tmk_core/common/keyboard.c **** 
 365:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 366:tmk_core/common/keyboard.c ****     ps2_mouse_task();
 367:tmk_core/common/keyboard.c **** #endif
 368:tmk_core/common/keyboard.c **** 
 369:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 370:tmk_core/common/keyboard.c ****     serial_mouse_task();
 371:tmk_core/common/keyboard.c **** #endif
 372:tmk_core/common/keyboard.c **** 
 373:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 374:tmk_core/common/keyboard.c ****     adb_mouse_task();
 375:tmk_core/common/keyboard.c **** #endif
 376:tmk_core/common/keyboard.c **** 
 377:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 378:tmk_core/common/keyboard.c ****     serial_link_update();
 379:tmk_core/common/keyboard.c **** #endif
 380:tmk_core/common/keyboard.c **** 
 381:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 382:tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 383:tmk_core/common/keyboard.c **** #endif
 384:tmk_core/common/keyboard.c **** 
 385:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 386:tmk_core/common/keyboard.c ****     pointing_device_task();
 387:tmk_core/common/keyboard.c **** #endif
 388:tmk_core/common/keyboard.c **** 
 389:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 390:tmk_core/common/keyboard.c ****     midi_task();
 391:tmk_core/common/keyboard.c **** #endif
 392:tmk_core/common/keyboard.c **** 
 393:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
 394:tmk_core/common/keyboard.c ****     if (velocikey_enabled()) {
 395:tmk_core/common/keyboard.c ****         velocikey_decelerate();
 396:tmk_core/common/keyboard.c ****     }
 397:tmk_core/common/keyboard.c **** #endif
 398:tmk_core/common/keyboard.c **** 
 399:tmk_core/common/keyboard.c ****     // update LED
 400:tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 395               		.loc 1 400 5 view .LVU74
 396               		.loc 1 400 23 is_stmt 0 view .LVU75
 397 00aa 0E94 0000 		call host_keyboard_leds
 398               	.LVL30:
 399               		.loc 1 400 8 view .LVU76
 400 00ae 9091 0000 		lds r25,led_status.5889
 401 00b2 8917      		cp r24,r25
 402 00b4 01F0      		breq .L10
 401:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 403               		.loc 1 401 9 is_stmt 1 view .LVU77
 404               		.loc 1 401 22 is_stmt 0 view .LVU78
 405 00b6 0E94 0000 		call host_keyboard_leds
 406               	.LVL31:
 407               		.loc 1 401 20 view .LVU79
 408 00ba 8093 0000 		sts led_status.5889,r24
 402:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 409               		.loc 1 402 9 is_stmt 1 view .LVU80
 410               	.LVL32:
 411               	.LBB14:
 412               	.LBI14:
 403:tmk_core/common/keyboard.c ****     }
 404:tmk_core/common/keyboard.c **** }
 405:tmk_core/common/keyboard.c **** 
 406:tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 407:tmk_core/common/keyboard.c ****  *
 408:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 409:tmk_core/common/keyboard.c ****  */
 410:tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds) {
 413               		.loc 1 410 6 view .LVU81
 414               	.LBB15:
 411:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 415               		.loc 1 411 5 view .LVU82
 412:tmk_core/common/keyboard.c ****         debug("keyboard_set_led: ");
 416               		.loc 1 412 36 view .LVU83
 413:tmk_core/common/keyboard.c ****         debug_hex8(leds);
 417               		.loc 1 413 25 view .LVU84
 414:tmk_core/common/keyboard.c ****         debug("\n");
 418               		.loc 1 414 20 view .LVU85
 415:tmk_core/common/keyboard.c ****     }
 416:tmk_core/common/keyboard.c ****     led_set(leds);
 419               		.loc 1 416 5 view .LVU86
 420               	/* epilogue start */
 421               	.LBE15:
 422               	.LBE14:
 404:tmk_core/common/keyboard.c **** 
 423               		.loc 1 404 1 is_stmt 0 view .LVU87
 424 00be 2A96      		adiw r28,10
 425 00c0 0FB6      		in __tmp_reg__,__SREG__
 426 00c2 F894      		cli
 427 00c4 DEBF      		out __SP_H__,r29
 428 00c6 0FBE      		out __SREG__,__tmp_reg__
 429 00c8 CDBF      		out __SP_L__,r28
 430 00ca DF91      		pop r29
 431 00cc CF91      		pop r28
 432 00ce 1F91      		pop r17
 433 00d0 0F91      		pop r16
 434 00d2 FF90      		pop r15
 435 00d4 EF90      		pop r14
 436 00d6 DF90      		pop r13
 437 00d8 CF90      		pop r12
 438 00da BF90      		pop r11
 439 00dc AF90      		pop r10
 440               	.LBB17:
 441               	.LBB16:
 442               		.loc 1 416 5 view .LVU88
 443 00de 0C94 0000 		jmp led_set
 444               	.LVL33:
 445               	.L14:
 446               		.loc 1 416 5 view .LVU89
 447               	.LBE16:
 448               	.LBE17:
 449               	.LBB18:
 450               	.LBB13:
 451               	.LBB11:
 307:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 452               		.loc 1 307 55 discriminator 2 view .LVU90
 453 00e2 8F5F      		subi r24,lo8(-(1))
 454               	.LVL34:
 307:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 455               		.loc 1 307 68 discriminator 2 view .LVU91
 456 00e4 FF0C      		lsl r15
 457               	.LVL35:
 307:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 458               		.loc 1 307 17 discriminator 2 view .LVU92
 459 00e6 8430      		cpi r24,lo8(4)
 460 00e8 01F0      		breq .+2
 461 00ea 00C0      		rjmp .L17
 462               	.LVL36:
 463               	.L12:
 307:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 464               		.loc 1 307 17 discriminator 2 view .LVU93
 465 00ec 0F5F      		subi r16,-1
 466 00ee 1F4F      		sbci r17,-1
 467               	.LVL37:
 307:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 468               		.loc 1 307 17 discriminator 2 view .LVU94
 469               	.LBE11:
 470               	.LBE13:
 296:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 471               		.loc 1 296 9 view .LVU95
 472 00f0 0430      		cpi r16,4
 473 00f2 1105      		cpc r17,__zero_reg__
 474 00f4 01F0      		breq .+2
 475 00f6 00C0      		rjmp .L18
 476               	.LVL38:
 477               	.L11:
 296:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 478               		.loc 1 296 9 view .LVU96
 479               	.LBE18:
 330:tmk_core/common/keyboard.c **** 
 480               		.loc 1 330 9 is_stmt 1 view .LVU97
 330:tmk_core/common/keyboard.c **** 
 481               		.loc 1 330 21 is_stmt 0 view .LVU98
 482 00f8 8FEF      		ldi r24,lo8(-1)
 483 00fa 8983      		std Y+1,r24
 484 00fc 8A83      		std Y+2,r24
 485 00fe 1B82      		std Y+3,__zero_reg__
 486 0100 0E94 0000 		call timer_read
 487               	.LVL39:
 488 0104 8160      		ori r24,1
 489 0106 782F      		mov r23,r24
 490 0108 9D83      		std Y+5,r25
 491 010a 8C83      		std Y+4,r24
 330:tmk_core/common/keyboard.c **** 
 492               		.loc 1 330 9 view .LVU99
 493 010c 4981      		ldd r20,Y+1
 494 010e 5A81      		ldd r21,Y+2
 495 0110 6B81      		ldd r22,Y+3
 496 0112 8D81      		ldd r24,Y+5
 497 0114 0E94 0000 		call action_exec
 498               	.LVL40:
 499 0118 00C0      		rjmp .L16
 500               	.L10:
 501               	/* epilogue start */
 404:tmk_core/common/keyboard.c **** 
 502               		.loc 1 404 1 view .LVU100
 503 011a 2A96      		adiw r28,10
 504 011c 0FB6      		in __tmp_reg__,__SREG__
 505 011e F894      		cli
 506 0120 DEBF      		out __SP_H__,r29
 507 0122 0FBE      		out __SREG__,__tmp_reg__
 508 0124 CDBF      		out __SP_L__,r28
 509 0126 DF91      		pop r29
 510 0128 CF91      		pop r28
 511 012a 1F91      		pop r17
 512 012c 0F91      		pop r16
 513 012e FF90      		pop r15
 514 0130 EF90      		pop r14
 515 0132 DF90      		pop r13
 516 0134 CF90      		pop r12
 517 0136 BF90      		pop r11
 518 0138 AF90      		pop r10
 519 013a 0895      		ret
 520               		.cfi_endproc
 521               	.LFE114:
 523               		.section	.text.keyboard_set_leds,"ax",@progbits
 524               	.global	keyboard_set_leds
 526               	keyboard_set_leds:
 527               	.LVL41:
 528               	.LFB115:
 410:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 529               		.loc 1 410 38 is_stmt 1 view -0
 530               		.cfi_startproc
 531               	/* prologue: function */
 532               	/* frame size = 0 */
 533               	/* stack size = 0 */
 534               	.L__stack_usage = 0
 411:tmk_core/common/keyboard.c ****         debug("keyboard_set_led: ");
 535               		.loc 1 411 5 view .LVU102
 412:tmk_core/common/keyboard.c ****         debug_hex8(leds);
 536               		.loc 1 412 36 view .LVU103
 413:tmk_core/common/keyboard.c ****         debug("\n");
 537               		.loc 1 413 25 view .LVU104
 414:tmk_core/common/keyboard.c ****     }
 538               		.loc 1 414 20 view .LVU105
 539               		.loc 1 416 5 view .LVU106
 540 0000 0C94 0000 		jmp led_set
 541               	.LVL42:
 542               		.loc 1 416 5 is_stmt 0 view .LVU107
 543               		.cfi_endproc
 544               	.LFE115:
 546               		.section	.bss.led_status.5889,"aw",@nobits
 549               	led_status.5889:
 550 0000 00        		.zero	1
 551               		.section	.bss.matrix_prev.5888,"aw",@nobits
 554               	matrix_prev.5888:
 555 0000 0000 0000 		.zero	4
 556               		.text
 557               	.Letext0:
 558               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdint.h"
 559               		.file 3 "tmk_core/common/keyboard.h"
 560               		.file 4 "tmk_core/common/matrix.h"
 561               		.file 5 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 562               		.file 6 "tmk_core/common/action.h"
 563               		.file 7 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 564               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 565               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 566               		.file 10 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdio.h"
 567               		.file 11 "tmk_core/common/host.h"
 568               		.file 12 "tmk_core/common/debug.h"
 569               		.file 13 "quantum/keycode_config.h"
 570               		.file 14 "quantum/keymap.h"
 571               		.file 15 "tmk_core/common/timer.h"
 572               		.file 16 "tmk_core/common/command.h"
 573               		.file 17 "tmk_core/common/action_layer.h"
 574               		.file 18 "tmk_core/common/mousekey.h"
 575               		.file 19 "./quantum/color.h"
 576               		.file 20 "quantum/rgblight.h"
 577               		.file 21 "tmk_core/common/led.h"
 578               		.file 22 "quantum/backlight/backlight.h"
 579               		.file 23 "tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:4      *ABS*:000000000000003f __SREG__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:13     .text.disable_jtag:0000000000000000 disable_jtag
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:41     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:41     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user.localalias.0
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:60     .text.matrix_setup:0000000000000000 matrix_setup
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:75     .text.keyboard_pre_init_kb:0000000000000000 keyboard_pre_init_kb
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:92     .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:107    .text.keyboard_post_init_kb:0000000000000000 keyboard_post_init_kb
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:124    .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:147    .text.is_keyboard_master:0000000000000000 is_keyboard_master
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:166    .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:198    .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:554    .bss.matrix_prev.5888:0000000000000000 matrix_prev.5888
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:549    .bss.led_status.5889:0000000000000000 led_status.5889
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//ccda6gNL.s:526    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
magic
backlight_init
rgblight_init
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
rgblight_task
backlight_task
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
