   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_effect_dummy,"ax",@progbits
  12               	rgblight_effect_dummy:
  13               	.LVL0:
  14               	.LFB161:
  15               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <string.h>
  18:quantum/rgblight.c **** #ifdef __AVR__
  19:quantum/rgblight.c **** #    include <avr/eeprom.h>
  20:quantum/rgblight.c **** #    include <avr/interrupt.h>
  21:quantum/rgblight.c **** #endif
  22:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
  23:quantum/rgblight.c **** #    include "eeprom.h"
  24:quantum/rgblight.c **** #endif
  25:quantum/rgblight.c **** #ifdef STM32_EEPROM_ENABLE
  26:quantum/rgblight.c **** #    include "hal.h"
  27:quantum/rgblight.c **** #    include "eeprom_stm32.h"
  28:quantum/rgblight.c **** #endif
  29:quantum/rgblight.c **** #include "wait.h"
  30:quantum/rgblight.c **** #include "progmem.h"
  31:quantum/rgblight.c **** #include "timer.h"
  32:quantum/rgblight.c **** #include "rgblight.h"
  33:quantum/rgblight.c **** #include "color.h"
  34:quantum/rgblight.c **** #include "debug.h"
  35:quantum/rgblight.c **** #include "led_tables.h"
  36:quantum/rgblight.c **** #include "lib/lib8tion/lib8tion.h"
  37:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
  38:quantum/rgblight.c **** #    include "velocikey.h"
  39:quantum/rgblight.c **** #endif
  40:quantum/rgblight.c **** 
  41:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
  42:quantum/rgblight.c **** /* for split keyboard */
  43:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_M
  44:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_H
  45:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS rgblight_status.change_flags |= (RGBLIGHT_STATUS_CHA
  46:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE rgblight_status.change_flags |= RGBLIGHT_STATUS_
  47:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK rgblight_status.change_flags |= RGBLIGHT_STATUS_ANIMATION
  48:quantum/rgblight.c **** #else
  49:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE
  50:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS
  51:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS
  52:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE
  53:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK
  54:quantum/rgblight.c **** #endif
  55:quantum/rgblight.c **** 
  56:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  57:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)
  58:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  59:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)
  60:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##sym,
  61:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym)
  62:quantum/rgblight.c **** static uint8_t static_effect_table[] = {
  63:quantum/rgblight.c **** #include "rgblight_modes.h"
  64:quantum/rgblight.c **** };
  65:quantum/rgblight.c **** 
  66:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  67:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  68:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  69:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  70:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##msym,
  71:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym) RGBLIGHT_MODE_##msym,
  72:quantum/rgblight.c **** static uint8_t mode_base_table[] = {
  73:quantum/rgblight.c ****     0,  // RGBLIGHT_MODE_zero
  74:quantum/rgblight.c **** #include "rgblight_modes.h"
  75:quantum/rgblight.c **** };
  76:quantum/rgblight.c **** 
  77:quantum/rgblight.c **** static inline int is_static_effect(uint8_t mode) { return memchr(static_effect_table, mode, sizeof(
  78:quantum/rgblight.c **** 
  79:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
  80:quantum/rgblight.c **** const uint8_t led_map[] PROGMEM = RGBLIGHT_LED_MAP;
  81:quantum/rgblight.c **** #endif
  82:quantum/rgblight.c **** 
  83:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
  84:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_GRADIENT_RANGES[] PROGMEM = {255, 170, 127, 85, 64};
  85:quantum/rgblight.c **** #endif
  86:quantum/rgblight.c **** 
  87:quantum/rgblight.c **** rgblight_config_t rgblight_config;
  88:quantum/rgblight.c **** rgblight_status_t rgblight_status         = {.timer_enabled = false};
  89:quantum/rgblight.c **** bool              is_rgblight_initialized = false;
  90:quantum/rgblight.c **** 
  91:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
  92:quantum/rgblight.c **** animation_status_t animation_status = {};
  93:quantum/rgblight.c **** #endif
  94:quantum/rgblight.c **** 
  95:quantum/rgblight.c **** #ifndef LED_ARRAY
  96:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
  97:quantum/rgblight.c **** #    define LED_ARRAY led
  98:quantum/rgblight.c **** #endif
  99:quantum/rgblight.c **** 
 100:quantum/rgblight.c **** static uint8_t clipping_start_pos = 0;
 101:quantum/rgblight.c **** static uint8_t clipping_num_leds  = RGBLED_NUM;
 102:quantum/rgblight.c **** static uint8_t effect_start_pos   = 0;
 103:quantum/rgblight.c **** static uint8_t effect_end_pos     = RGBLED_NUM;
 104:quantum/rgblight.c **** static uint8_t effect_num_leds    = RGBLED_NUM;
 105:quantum/rgblight.c **** 
 106:quantum/rgblight.c **** void rgblight_set_clipping_range(uint8_t start_pos, uint8_t num_leds) {
 107:quantum/rgblight.c ****     clipping_start_pos = start_pos;
 108:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
 109:quantum/rgblight.c **** }
 110:quantum/rgblight.c **** 
 111:quantum/rgblight.c **** void rgblight_set_effect_range(uint8_t start_pos, uint8_t num_leds) {
 112:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
 113:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
 114:quantum/rgblight.c ****     effect_start_pos = start_pos;
 115:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
 116:quantum/rgblight.c ****     effect_num_leds  = num_leds;
 117:quantum/rgblight.c **** }
 118:quantum/rgblight.c **** 
 119:quantum/rgblight.c **** void sethsv_raw(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 120:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 121:quantum/rgblight.c ****     RGB rgb = hsv_to_rgb(hsv);
 122:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 123:quantum/rgblight.c **** }
 124:quantum/rgblight.c **** 
 125:quantum/rgblight.c **** void sethsv(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) { sethsv_raw(hue, sat, val > RGB
 126:quantum/rgblight.c **** 
 127:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 128:quantum/rgblight.c ****     (*led1).r = r;
 129:quantum/rgblight.c ****     (*led1).g = g;
 130:quantum/rgblight.c ****     (*led1).b = b;
 131:quantum/rgblight.c **** #ifdef RGBW
 132:quantum/rgblight.c ****     (*led1).w = 0;
 133:quantum/rgblight.c **** #endif
 134:quantum/rgblight.c **** }
 135:quantum/rgblight.c **** 
 136:quantum/rgblight.c **** void rgblight_check_config(void) {
 137:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 138:quantum/rgblight.c **** 
 139:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 140:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 141:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 142:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 143:quantum/rgblight.c ****     }
 144:quantum/rgblight.c **** 
 145:quantum/rgblight.c ****     if (rgblight_config.val > RGBLIGHT_LIMIT_VAL) {
 146:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 147:quantum/rgblight.c ****     }
 148:quantum/rgblight.c **** }
 149:quantum/rgblight.c **** 
 150:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 151:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 152:quantum/rgblight.c ****     return eeprom_read_dword(EECONFIG_RGBLIGHT);
 153:quantum/rgblight.c **** #else
 154:quantum/rgblight.c ****     return 0;
 155:quantum/rgblight.c **** #endif
 156:quantum/rgblight.c **** }
 157:quantum/rgblight.c **** 
 158:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 159:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 160:quantum/rgblight.c ****     rgblight_check_config();
 161:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 162:quantum/rgblight.c **** #endif
 163:quantum/rgblight.c **** }
 164:quantum/rgblight.c **** 
 165:quantum/rgblight.c **** void eeconfig_update_rgblight_current(void) { eeconfig_update_rgblight(rgblight_config.raw); }
 166:quantum/rgblight.c **** 
 167:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 168:quantum/rgblight.c ****     rgblight_config.enable = 1;
 169:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 170:quantum/rgblight.c ****     rgblight_config.hue    = 0;
 171:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 172:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 173:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 174:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 175:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 176:quantum/rgblight.c **** }
 177:quantum/rgblight.c **** 
 178:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 179:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 180:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 181:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 182:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 183:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 184:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 185:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 186:quantum/rgblight.c **** }
 187:quantum/rgblight.c **** 
 188:quantum/rgblight.c **** void rgblight_init(void) {
 189:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 190:quantum/rgblight.c ****        If you must do it again, extern this and set to false, first.
 191:quantum/rgblight.c ****        This is a dirty, dirty hack until proper hooks can be added for keyboard startup. */
 192:quantum/rgblight.c ****     if (is_rgblight_initialized) {
 193:quantum/rgblight.c ****         return;
 194:quantum/rgblight.c ****     }
 195:quantum/rgblight.c **** 
 196:quantum/rgblight.c ****     dprintf("rgblight_init called.\n");
 197:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 198:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 199:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 200:quantum/rgblight.c ****         eeconfig_init();
 201:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 202:quantum/rgblight.c ****     }
 203:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 204:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 205:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 206:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 207:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 208:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 209:quantum/rgblight.c ****     }
 210:quantum/rgblight.c ****     rgblight_check_config();
 211:quantum/rgblight.c **** 
 212:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 213:quantum/rgblight.c **** 
 214:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 215:quantum/rgblight.c ****     rgblight_timer_init();  // setup the timer
 216:quantum/rgblight.c **** #endif
 217:quantum/rgblight.c **** 
 218:quantum/rgblight.c ****     if (rgblight_config.enable) {
 219:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 220:quantum/rgblight.c ****     }
 221:quantum/rgblight.c **** 
 222:quantum/rgblight.c ****     is_rgblight_initialized = true;
 223:quantum/rgblight.c **** }
 224:quantum/rgblight.c **** 
 225:quantum/rgblight.c **** uint32_t rgblight_read_dword(void) { return rgblight_config.raw; }
 226:quantum/rgblight.c **** 
 227:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 228:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 229:quantum/rgblight.c ****     rgblight_config.raw = dword;
 230:quantum/rgblight.c ****     if (rgblight_config.enable)
 231:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 232:quantum/rgblight.c ****     else {
 233:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 234:quantum/rgblight.c ****         rgblight_timer_disable();
 235:quantum/rgblight.c **** #endif
 236:quantum/rgblight.c ****         rgblight_set();
 237:quantum/rgblight.c ****     }
 238:quantum/rgblight.c **** }
 239:quantum/rgblight.c **** 
 240:quantum/rgblight.c **** void rgblight_increase(void) {
 241:quantum/rgblight.c ****     uint8_t mode = 0;
 242:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 243:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 244:quantum/rgblight.c ****     }
 245:quantum/rgblight.c ****     rgblight_mode(mode);
 246:quantum/rgblight.c **** }
 247:quantum/rgblight.c **** void rgblight_decrease(void) {
 248:quantum/rgblight.c ****     uint8_t mode = 0;
 249:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 250:quantum/rgblight.c ****     if (rgblight_config.mode > RGBLIGHT_MODE_STATIC_LIGHT) {
 251:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 252:quantum/rgblight.c ****     }
 253:quantum/rgblight.c ****     rgblight_mode(mode);
 254:quantum/rgblight.c **** }
 255:quantum/rgblight.c **** void rgblight_step_helper(bool write_to_eeprom) {
 256:quantum/rgblight.c ****     uint8_t mode = 0;
 257:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 258:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 259:quantum/rgblight.c ****         mode = 1;
 260:quantum/rgblight.c ****     }
 261:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 262:quantum/rgblight.c **** }
 263:quantum/rgblight.c **** void rgblight_step_noeeprom(void) { rgblight_step_helper(false); }
 264:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 265:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 266:quantum/rgblight.c ****     uint8_t mode = 0;
 267:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 268:quantum/rgblight.c ****     if (mode < 1) {
 269:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 270:quantum/rgblight.c ****     }
 271:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 272:quantum/rgblight.c **** }
 273:quantum/rgblight.c **** void rgblight_step_reverse_noeeprom(void) { rgblight_step_reverse_helper(false); }
 274:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 275:quantum/rgblight.c **** 
 276:quantum/rgblight.c **** uint8_t rgblight_get_mode(void) {
 277:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 278:quantum/rgblight.c ****         return false;
 279:quantum/rgblight.c ****     }
 280:quantum/rgblight.c **** 
 281:quantum/rgblight.c ****     return rgblight_config.mode;
 282:quantum/rgblight.c **** }
 283:quantum/rgblight.c **** 
 284:quantum/rgblight.c **** void rgblight_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 285:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 286:quantum/rgblight.c ****         return;
 287:quantum/rgblight.c ****     }
 288:quantum/rgblight.c ****     if (mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 289:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 290:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 291:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 292:quantum/rgblight.c ****     } else {
 293:quantum/rgblight.c ****         rgblight_config.mode = mode;
 294:quantum/rgblight.c ****     }
 295:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 296:quantum/rgblight.c ****     if (write_to_eeprom) {
 297:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 298:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 299:quantum/rgblight.c ****     } else {
 300:quantum/rgblight.c ****         dprintf("rgblight mode [NOEEPROM]: %u\n", rgblight_config.mode);
 301:quantum/rgblight.c ****     }
 302:quantum/rgblight.c ****     if (is_static_effect(rgblight_config.mode)) {
 303:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 304:quantum/rgblight.c ****         rgblight_timer_disable();
 305:quantum/rgblight.c **** #endif
 306:quantum/rgblight.c ****     } else {
 307:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 308:quantum/rgblight.c ****         rgblight_timer_enable();
 309:quantum/rgblight.c **** #endif
 310:quantum/rgblight.c ****     }
 311:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 312:quantum/rgblight.c ****     animation_status.restart = true;
 313:quantum/rgblight.c **** #endif
 314:quantum/rgblight.c ****     rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 315:quantum/rgblight.c **** }
 316:quantum/rgblight.c **** 
 317:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) { rgblight_mode_eeprom_helper(mode, true); }
 318:quantum/rgblight.c **** 
 319:quantum/rgblight.c **** void rgblight_mode_noeeprom(uint8_t mode) { rgblight_mode_eeprom_helper(mode, false); }
 320:quantum/rgblight.c **** 
 321:quantum/rgblight.c **** void rgblight_toggle(void) {
 322:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 323:quantum/rgblight.c ****     if (rgblight_config.enable) {
 324:quantum/rgblight.c ****         rgblight_disable();
 325:quantum/rgblight.c ****     } else {
 326:quantum/rgblight.c ****         rgblight_enable();
 327:quantum/rgblight.c ****     }
 328:quantum/rgblight.c **** }
 329:quantum/rgblight.c **** 
 330:quantum/rgblight.c **** void rgblight_toggle_noeeprom(void) {
 331:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 332:quantum/rgblight.c ****     if (rgblight_config.enable) {
 333:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 334:quantum/rgblight.c ****     } else {
 335:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 336:quantum/rgblight.c ****     }
 337:quantum/rgblight.c **** }
 338:quantum/rgblight.c **** 
 339:quantum/rgblight.c **** void rgblight_enable(void) {
 340:quantum/rgblight.c ****     rgblight_config.enable = 1;
 341:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 342:quantum/rgblight.c ****     // eeconfig_update_rgblight(rgblight_config.raw);
 343:quantum/rgblight.c ****     dprintf("rgblight enable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 344:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 345:quantum/rgblight.c **** }
 346:quantum/rgblight.c **** 
 347:quantum/rgblight.c **** void rgblight_enable_noeeprom(void) {
 348:quantum/rgblight.c ****     rgblight_config.enable = 1;
 349:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 350:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 351:quantum/rgblight.c **** }
 352:quantum/rgblight.c **** 
 353:quantum/rgblight.c **** void rgblight_disable(void) {
 354:quantum/rgblight.c ****     rgblight_config.enable = 0;
 355:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 356:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 357:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 358:quantum/rgblight.c ****     rgblight_timer_disable();
 359:quantum/rgblight.c **** #endif
 360:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 361:quantum/rgblight.c ****     wait_ms(50);
 362:quantum/rgblight.c ****     rgblight_set();
 363:quantum/rgblight.c **** }
 364:quantum/rgblight.c **** 
 365:quantum/rgblight.c **** void rgblight_disable_noeeprom(void) {
 366:quantum/rgblight.c ****     rgblight_config.enable = 0;
 367:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 368:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 369:quantum/rgblight.c ****     rgblight_timer_disable();
 370:quantum/rgblight.c **** #endif
 371:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 372:quantum/rgblight.c ****     wait_ms(50);
 373:quantum/rgblight.c ****     rgblight_set();
 374:quantum/rgblight.c **** }
 375:quantum/rgblight.c **** 
 376:quantum/rgblight.c **** void rgblight_increase_hue_helper(bool write_to_eeprom) {
 377:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 378:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 379:quantum/rgblight.c **** }
 380:quantum/rgblight.c **** void rgblight_increase_hue_noeeprom(void) { rgblight_increase_hue_helper(false); }
 381:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 382:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 383:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 384:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 385:quantum/rgblight.c **** }
 386:quantum/rgblight.c **** void rgblight_decrease_hue_noeeprom(void) { rgblight_decrease_hue_helper(false); }
 387:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 388:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 389:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 390:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 391:quantum/rgblight.c **** }
 392:quantum/rgblight.c **** void rgblight_increase_sat_noeeprom(void) { rgblight_increase_sat_helper(false); }
 393:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 394:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 395:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 396:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 397:quantum/rgblight.c **** }
 398:quantum/rgblight.c **** void rgblight_decrease_sat_noeeprom(void) { rgblight_decrease_sat_helper(false); }
 399:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 400:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 401:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 402:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 403:quantum/rgblight.c **** }
 404:quantum/rgblight.c **** void rgblight_increase_val_noeeprom(void) { rgblight_increase_val_helper(false); }
 405:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 406:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 407:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 408:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 409:quantum/rgblight.c **** }
 410:quantum/rgblight.c **** void rgblight_decrease_val_noeeprom(void) { rgblight_decrease_val_helper(false); }
 411:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 412:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 413:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 414:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 415:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to support th
 416:quantum/rgblight.c **** }
 417:quantum/rgblight.c **** 
 418:quantum/rgblight.c **** void rgblight_decrease_speed(void) {
 419:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 420:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 421:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to support th
 422:quantum/rgblight.c **** }
 423:quantum/rgblight.c **** 
 424:quantum/rgblight.c **** void rgblight_sethsv_noeeprom_old(uint8_t hue, uint8_t sat, uint8_t val) {
 425:quantum/rgblight.c ****     if (rgblight_config.enable) {
 426:quantum/rgblight.c ****         LED_TYPE tmp_led;
 427:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 428:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 429:quantum/rgblight.c ****     }
 430:quantum/rgblight.c **** }
 431:quantum/rgblight.c **** 
 432:quantum/rgblight.c **** void rgblight_sethsv_eeprom_helper(uint8_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) {
 433:quantum/rgblight.c ****     if (rgblight_config.enable) {
 434:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 435:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 436:quantum/rgblight.c ****             // same static color
 437:quantum/rgblight.c ****             LED_TYPE tmp_led;
 438:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 439:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 440:quantum/rgblight.c ****         } else {
 441:quantum/rgblight.c ****             // all LEDs in same color
 442:quantum/rgblight.c ****             if (1 == 0) {  // dummy
 443:quantum/rgblight.c ****             }
 444:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 445:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 446:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 447:quantum/rgblight.c ****                 val = rgblight_config.val;
 448:quantum/rgblight.c ****             }
 449:quantum/rgblight.c **** #endif
 450:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 451:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 452:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 453:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 454:quantum/rgblight.c ****             }
 455:quantum/rgblight.c **** #endif
 456:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 457:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 458:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 459:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 460:quantum/rgblight.c ****             }
 461:quantum/rgblight.c **** #endif
 462:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 463:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_STATIC_GRADIENT) {
 464:quantum/rgblight.c ****                 // static gradient
 465:quantum/rgblight.c ****                 uint8_t delta     = rgblight_config.mode - rgblight_status.base_mode;
 466:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 467:quantum/rgblight.c **** #    ifdef __AVR__
 468:quantum/rgblight.c ****                 // probably due to how pgm_read_word is defined for ARM, but the ARM compiler reall
 469:quantum/rgblight.c ****                 uint8_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[delta / 2]);
 470:quantum/rgblight.c **** #    else
 471:quantum/rgblight.c ****                 uint8_t range = RGBLED_GRADIENT_RANGES[delta / 2];
 472:quantum/rgblight.c **** #    endif
 473:quantum/rgblight.c ****                 for (uint8_t i = 0; i < effect_num_leds; i++) {
 474:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 475:quantum/rgblight.c ****                     if (direction) {
 476:quantum/rgblight.c ****                         _hue = hue + _hue;
 477:quantum/rgblight.c ****                     } else {
 478:quantum/rgblight.c ****                         _hue = hue - _hue;
 479:quantum/rgblight.c ****                     }
 480:quantum/rgblight.c ****                     dprintf("rgblight rainbow set hsv: %d,%d,%d,%u\n", i, _hue, direction, range);
 481:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 482:quantum/rgblight.c ****                 }
 483:quantum/rgblight.c ****                 rgblight_set();
 484:quantum/rgblight.c ****             }
 485:quantum/rgblight.c **** #endif
 486:quantum/rgblight.c ****         }
 487:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 488:quantum/rgblight.c ****         if (rgblight_config.hue != hue || rgblight_config.sat != sat || rgblight_config.val != val)
 489:quantum/rgblight.c ****             RGBLIGHT_SPLIT_SET_CHANGE_HSVS;
 490:quantum/rgblight.c ****         }
 491:quantum/rgblight.c **** #endif
 492:quantum/rgblight.c ****         rgblight_config.hue = hue;
 493:quantum/rgblight.c ****         rgblight_config.sat = sat;
 494:quantum/rgblight.c ****         rgblight_config.val = val;
 495:quantum/rgblight.c ****         if (write_to_eeprom) {
 496:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 497:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 498:quantum/rgblight.c ****         } else {
 499:quantum/rgblight.c ****             dprintf("rgblight set hsv [NOEEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config
 500:quantum/rgblight.c ****         }
 501:quantum/rgblight.c ****     }
 502:quantum/rgblight.c **** }
 503:quantum/rgblight.c **** 
 504:quantum/rgblight.c **** void rgblight_sethsv(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helper(hue, sa
 505:quantum/rgblight.c **** 
 506:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helpe
 507:quantum/rgblight.c **** 
 508:quantum/rgblight.c **** uint8_t rgblight_get_speed(void) { return rgblight_config.speed; }
 509:quantum/rgblight.c **** 
 510:quantum/rgblight.c **** void rgblight_set_speed_eeprom_helper(uint8_t speed, bool write_to_eeprom) {
 511:quantum/rgblight.c ****     rgblight_config.speed = speed;
 512:quantum/rgblight.c ****     if (write_to_eeprom) {
 513:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 514:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 515:quantum/rgblight.c ****     } else {
 516:quantum/rgblight.c ****         dprintf("rgblight set speed [NOEEPROM]: %u\n", rgblight_config.speed);
 517:quantum/rgblight.c ****     }
 518:quantum/rgblight.c **** }
 519:quantum/rgblight.c **** 
 520:quantum/rgblight.c **** void rgblight_set_speed(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, true); }
 521:quantum/rgblight.c **** 
 522:quantum/rgblight.c **** void rgblight_set_speed_noeeprom(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, false); }
 523:quantum/rgblight.c **** 
 524:quantum/rgblight.c **** uint8_t rgblight_get_hue(void) { return rgblight_config.hue; }
 525:quantum/rgblight.c **** 
 526:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) { return rgblight_config.sat; }
 527:quantum/rgblight.c **** 
 528:quantum/rgblight.c **** uint8_t rgblight_get_val(void) { return rgblight_config.val; }
 529:quantum/rgblight.c **** 
 530:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 531:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 532:quantum/rgblight.c ****         return;
 533:quantum/rgblight.c ****     }
 534:quantum/rgblight.c **** 
 535:quantum/rgblight.c ****     for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 536:quantum/rgblight.c ****         led[i].r = r;
 537:quantum/rgblight.c ****         led[i].g = g;
 538:quantum/rgblight.c ****         led[i].b = b;
 539:quantum/rgblight.c **** #ifdef RGBW
 540:quantum/rgblight.c ****         led[i].w = 0;
 541:quantum/rgblight.c **** #endif
 542:quantum/rgblight.c ****     }
 543:quantum/rgblight.c ****     rgblight_set();
 544:quantum/rgblight.c **** }
 545:quantum/rgblight.c **** 
 546:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 547:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 548:quantum/rgblight.c ****         return;
 549:quantum/rgblight.c ****     }
 550:quantum/rgblight.c **** 
 551:quantum/rgblight.c ****     led[index].r = r;
 552:quantum/rgblight.c ****     led[index].g = g;
 553:quantum/rgblight.c ****     led[index].b = b;
 554:quantum/rgblight.c **** #ifdef RGBW
 555:quantum/rgblight.c ****     led[index].w = 0;
 556:quantum/rgblight.c **** #endif
 557:quantum/rgblight.c ****     rgblight_set();
 558:quantum/rgblight.c **** }
 559:quantum/rgblight.c **** 
 560:quantum/rgblight.c **** void rgblight_sethsv_at(uint8_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 561:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 562:quantum/rgblight.c ****         return;
 563:quantum/rgblight.c ****     }
 564:quantum/rgblight.c **** 
 565:quantum/rgblight.c ****     LED_TYPE tmp_led;
 566:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 567:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 568:quantum/rgblight.c **** }
 569:quantum/rgblight.c **** 
 570:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_RAINBOW_MOOD) || defined(RGBLIGHT
 571:quantum/rgblight.c **** 
 572:quantum/rgblight.c **** static uint8_t get_interval_time(const uint8_t *default_interval_address, uint8_t velocikey_min, ui
 573:quantum/rgblight.c ****     return
 574:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 575:quantum/rgblight.c ****         velocikey_enabled() ? velocikey_match_speed(velocikey_min, velocikey_max) :
 576:quantum/rgblight.c **** #    endif
 577:quantum/rgblight.c ****                             pgm_read_byte(default_interval_address);
 578:quantum/rgblight.c **** }
 579:quantum/rgblight.c **** 
 580:quantum/rgblight.c **** #endif
 581:quantum/rgblight.c **** 
 582:quantum/rgblight.c **** void rgblight_setrgb_range(uint8_t r, uint8_t g, uint8_t b, uint8_t start, uint8_t end) {
 583:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 584:quantum/rgblight.c ****         return;
 585:quantum/rgblight.c ****     }
 586:quantum/rgblight.c **** 
 587:quantum/rgblight.c ****     for (uint8_t i = start; i < end; i++) {
 588:quantum/rgblight.c ****         led[i].r = r;
 589:quantum/rgblight.c ****         led[i].g = g;
 590:quantum/rgblight.c ****         led[i].b = b;
 591:quantum/rgblight.c **** #ifdef RGBW
 592:quantum/rgblight.c ****         led[i].w = 0;
 593:quantum/rgblight.c **** #endif
 594:quantum/rgblight.c ****     }
 595:quantum/rgblight.c ****     rgblight_set();
 596:quantum/rgblight.c ****     wait_ms(1);
 597:quantum/rgblight.c **** }
 598:quantum/rgblight.c **** 
 599:quantum/rgblight.c **** void rgblight_sethsv_range(uint8_t hue, uint8_t sat, uint8_t val, uint8_t start, uint8_t end) {
 600:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 601:quantum/rgblight.c ****         return;
 602:quantum/rgblight.c ****     }
 603:quantum/rgblight.c **** 
 604:quantum/rgblight.c ****     LED_TYPE tmp_led;
 605:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 606:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 607:quantum/rgblight.c **** }
 608:quantum/rgblight.c **** 
 609:quantum/rgblight.c **** #ifndef RGBLIGHT_SPLIT
 610:quantum/rgblight.c **** void rgblight_setrgb_master(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, 0, (u
 611:quantum/rgblight.c **** 
 612:quantum/rgblight.c **** void rgblight_setrgb_slave(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, (uint8
 613:quantum/rgblight.c **** 
 614:quantum/rgblight.c **** void rgblight_sethsv_master(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat
 615:quantum/rgblight.c **** 
 616:quantum/rgblight.c **** void rgblight_sethsv_slave(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat,
 617:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 618:quantum/rgblight.c **** 
 619:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 620:quantum/rgblight.c **** void rgblight_set(void) {
 621:quantum/rgblight.c ****     LED_TYPE *start_led;
 622:quantum/rgblight.c ****     uint16_t  num_leds = clipping_num_leds;
 623:quantum/rgblight.c **** 
 624:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 625:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 626:quantum/rgblight.c ****             led[i].r = 0;
 627:quantum/rgblight.c ****             led[i].g = 0;
 628:quantum/rgblight.c ****             led[i].b = 0;
 629:quantum/rgblight.c **** #    ifdef RGBW
 630:quantum/rgblight.c ****             led[i].w = 0;
 631:quantum/rgblight.c **** #    endif
 632:quantum/rgblight.c ****         }
 633:quantum/rgblight.c ****     }
 634:quantum/rgblight.c **** 
 635:quantum/rgblight.c **** #    ifdef RGBLIGHT_LED_MAP
 636:quantum/rgblight.c ****     LED_TYPE led0[RGBLED_NUM];
 637:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 638:quantum/rgblight.c ****         led0[i] = led[pgm_read_byte(&led_map[i])];
 639:quantum/rgblight.c ****     }
 640:quantum/rgblight.c ****     start_led = led0 + clipping_start_pos;
 641:quantum/rgblight.c **** #    else
 642:quantum/rgblight.c ****     start_led = led + clipping_start_pos;
 643:quantum/rgblight.c **** #    endif
 644:quantum/rgblight.c **** 
 645:quantum/rgblight.c **** #    ifdef RGBW
 646:quantum/rgblight.c ****     for (uint8_t i = 0; i < num_leds; i++) {
 647:quantum/rgblight.c ****         convert_rgb_to_rgbw(&start_led[i]);
 648:quantum/rgblight.c ****     }
 649:quantum/rgblight.c **** #    endif
 650:quantum/rgblight.c ****     ws2812_setleds(start_led, num_leds);
 651:quantum/rgblight.c **** }
 652:quantum/rgblight.c **** #endif
 653:quantum/rgblight.c **** 
 654:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 655:quantum/rgblight.c **** /* for split keyboard master side */
 656:quantum/rgblight.c **** uint8_t rgblight_get_change_flags(void) { return rgblight_status.change_flags; }
 657:quantum/rgblight.c **** 
 658:quantum/rgblight.c **** void rgblight_clear_change_flags(void) { rgblight_status.change_flags = 0; }
 659:quantum/rgblight.c **** 
 660:quantum/rgblight.c **** void rgblight_get_syncinfo(rgblight_syncinfo_t *syncinfo) {
 661:quantum/rgblight.c ****     syncinfo->config = rgblight_config;
 662:quantum/rgblight.c ****     syncinfo->status = rgblight_status;
 663:quantum/rgblight.c **** }
 664:quantum/rgblight.c **** 
 665:quantum/rgblight.c **** /* for split keyboard slave side */
 666:quantum/rgblight.c **** void rgblight_update_sync(rgblight_syncinfo_t *syncinfo, bool write_to_eeprom) {
 667:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_MODE) {
 668:quantum/rgblight.c ****         if (syncinfo->config.enable) {
 669:quantum/rgblight.c ****             rgblight_config.enable = 1;  // == rgblight_enable_noeeprom();
 670:quantum/rgblight.c ****             rgblight_mode_eeprom_helper(syncinfo->config.mode, write_to_eeprom);
 671:quantum/rgblight.c ****         } else {
 672:quantum/rgblight.c ****             rgblight_disable_noeeprom();
 673:quantum/rgblight.c ****         }
 674:quantum/rgblight.c ****     }
 675:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_HSVS) {
 676:quantum/rgblight.c ****         rgblight_sethsv_eeprom_helper(syncinfo->config.hue, syncinfo->config.sat, syncinfo->config.
 677:quantum/rgblight.c ****         // rgblight_config.speed = config->speed; // NEED???
 678:quantum/rgblight.c ****     }
 679:quantum/rgblight.c **** #    ifdef RGBLIGHT_USE_TIMER
 680:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_TIMER) {
 681:quantum/rgblight.c ****         if (syncinfo->status.timer_enabled) {
 682:quantum/rgblight.c ****             rgblight_timer_enable();
 683:quantum/rgblight.c ****         } else {
 684:quantum/rgblight.c ****             rgblight_timer_disable();
 685:quantum/rgblight.c ****         }
 686:quantum/rgblight.c ****     }
 687:quantum/rgblight.c **** #        ifndef RGBLIGHT_SPLIT_NO_ANIMATION_SYNC
 688:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_ANIMATION_TICK) {
 689:quantum/rgblight.c ****         animation_status.restart = true;
 690:quantum/rgblight.c ****     }
 691:quantum/rgblight.c **** #        endif /* RGBLIGHT_SPLIT_NO_ANIMATION_SYNC */
 692:quantum/rgblight.c **** #    endif     /* RGBLIGHT_USE_TIMER */
 693:quantum/rgblight.c **** }
 694:quantum/rgblight.c **** #endif /* RGBLIGHT_SPLIT */
 695:quantum/rgblight.c **** 
 696:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 697:quantum/rgblight.c **** 
 698:quantum/rgblight.c **** typedef void (*effect_func_t)(animation_status_t *anim);
 699:quantum/rgblight.c **** 
 700:quantum/rgblight.c **** // Animation timer -- use system timer (AVR Timer0)
 701:quantum/rgblight.c **** void rgblight_timer_init(void) {
 702:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 703:quantum/rgblight.c ****     // static uint8_t rgblight_timer_is_init = 0;
 704:quantum/rgblight.c ****     // if (rgblight_timer_is_init) {
 705:quantum/rgblight.c ****     //   return;
 706:quantum/rgblight.c ****     // }
 707:quantum/rgblight.c ****     // rgblight_timer_is_init = 1;
 708:quantum/rgblight.c ****     // /* Timer 3 setup */
 709:quantum/rgblight.c ****     // TCCR3B = _BV(WGM32) // CTC mode OCR3A as TOP
 710:quantum/rgblight.c ****     //       | _BV(CS30); // Clock selelct: clk/1
 711:quantum/rgblight.c ****     // /* Set TOP value */
 712:quantum/rgblight.c ****     // uint8_t sreg = SREG;
 713:quantum/rgblight.c ****     // cli();
 714:quantum/rgblight.c ****     // OCR3AH = (RGBLED_TIMER_TOP >> 8) & 0xff;
 715:quantum/rgblight.c ****     // OCR3AL = RGBLED_TIMER_TOP & 0xff;
 716:quantum/rgblight.c ****     // SREG = sreg;
 717:quantum/rgblight.c **** 
 718:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 719:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 720:quantum/rgblight.c **** }
 721:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 722:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 723:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 724:quantum/rgblight.c ****     }
 725:quantum/rgblight.c ****     animation_status.last_timer = timer_read();
 726:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 727:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 728:quantum/rgblight.c **** }
 729:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 730:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 731:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 732:quantum/rgblight.c ****     dprintf("rgblight timer disable.\n");
 733:quantum/rgblight.c **** }
 734:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 735:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 736:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 737:quantum/rgblight.c ****         rgblight_timer_disable();
 738:quantum/rgblight.c ****     } else {
 739:quantum/rgblight.c ****         rgblight_timer_enable();
 740:quantum/rgblight.c ****     }
 741:quantum/rgblight.c **** }
 742:quantum/rgblight.c **** 
 743:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 744:quantum/rgblight.c ****     rgblight_enable();
 745:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 746:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 747:quantum/rgblight.c **** }
 748:quantum/rgblight.c **** 
 749:quantum/rgblight.c **** static void rgblight_effect_dummy(animation_status_t *anim) {
  16               		.loc 1 749 61 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 750:quantum/rgblight.c ****     // do nothing
 751:quantum/rgblight.c ****     /********
 752:quantum/rgblight.c ****     dprintf("rgblight_task() what happened?\n");
 753:quantum/rgblight.c ****     dprintf("is_static_effect %d\n", is_static_effect(rgblight_config.mode));
 754:quantum/rgblight.c ****     dprintf("mode = %d, base_mode = %d, timer_enabled %d, ",
 755:quantum/rgblight.c ****             rgblight_config.mode, rgblight_status.base_mode,
 756:quantum/rgblight.c ****             rgblight_status.timer_enabled);
 757:quantum/rgblight.c ****     dprintf("last_timer = %d\n",anim->last_timer);
 758:quantum/rgblight.c ****     **/
 759:quantum/rgblight.c **** }
  22               		.loc 1 759 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE161:
  28               		.section	.text.rgblight_set_clipping_range,"ax",@progbits
  29               	.global	rgblight_set_clipping_range
  31               	rgblight_set_clipping_range:
  32               	.LVL1:
  33               	.LFB82:
 106:quantum/rgblight.c ****     clipping_start_pos = start_pos;
  34               		.loc 1 106 71 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 107:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
  40               		.loc 1 107 5 view .LVU3
 107:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
  41               		.loc 1 107 24 is_stmt 0 view .LVU4
  42 0000 8093 0000 		sts clipping_start_pos,r24
 108:quantum/rgblight.c **** }
  43               		.loc 1 108 5 is_stmt 1 view .LVU5
 108:quantum/rgblight.c **** }
  44               		.loc 1 108 24 is_stmt 0 view .LVU6
  45 0004 6093 0000 		sts clipping_num_leds,r22
  46               	/* epilogue start */
 109:quantum/rgblight.c **** 
  47               		.loc 1 109 1 view .LVU7
  48 0008 0895      		ret
  49               		.cfi_endproc
  50               	.LFE82:
  52               		.section	.text.rgblight_set_effect_range,"ax",@progbits
  53               	.global	rgblight_set_effect_range
  55               	rgblight_set_effect_range:
  56               	.LVL2:
  57               	.LFB83:
 111:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
  58               		.loc 1 111 69 is_stmt 1 view -0
  59               		.cfi_startproc
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
 112:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  64               		.loc 1 112 5 view .LVU9
 112:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  65               		.loc 1 112 8 is_stmt 0 view .LVU10
  66 0000 8031      		cpi r24,lo8(16)
  67 0002 00F4      		brsh .L3
 113:quantum/rgblight.c ****     effect_start_pos = start_pos;
  68               		.loc 1 113 5 is_stmt 1 view .LVU11
 113:quantum/rgblight.c ****     effect_start_pos = start_pos;
  69               		.loc 1 113 19 is_stmt 0 view .LVU12
  70 0004 482F      		mov r20,r24
  71 0006 460F      		add r20,r22
  72 0008 5527      		clr r21
  73 000a 551F      		rol r21
 113:quantum/rgblight.c ****     effect_start_pos = start_pos;
  74               		.loc 1 113 8 view .LVU13
  75 000c 4131      		cpi r20,17
  76 000e 5105      		cpc r21,__zero_reg__
  77 0010 04F4      		brge .L3
 114:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
  78               		.loc 1 114 5 is_stmt 1 view .LVU14
 114:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
  79               		.loc 1 114 22 is_stmt 0 view .LVU15
  80 0012 8093 0000 		sts effect_start_pos,r24
 115:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  81               		.loc 1 115 5 is_stmt 1 view .LVU16
 115:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  82               		.loc 1 115 34 is_stmt 0 view .LVU17
  83 0016 860F      		add r24,r22
  84               	.LVL3:
 115:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  85               		.loc 1 115 22 view .LVU18
  86 0018 8093 0000 		sts effect_end_pos,r24
 116:quantum/rgblight.c **** }
  87               		.loc 1 116 5 is_stmt 1 view .LVU19
 116:quantum/rgblight.c **** }
  88               		.loc 1 116 22 is_stmt 0 view .LVU20
  89 001c 6093 0000 		sts effect_num_leds,r22
  90               	.LVL4:
  91               	.L3:
  92               	/* epilogue start */
 117:quantum/rgblight.c **** 
  93               		.loc 1 117 1 view .LVU21
  94 0020 0895      		ret
  95               		.cfi_endproc
  96               	.LFE83:
  98               		.section	.text.sethsv_raw,"ax",@progbits
  99               	.global	sethsv_raw
 101               	sethsv_raw:
 102               	.LVL5:
 103               	.LFB84:
 119:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 104               		.loc 1 119 72 is_stmt 1 view -0
 105               		.cfi_startproc
 119:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 106               		.loc 1 119 72 is_stmt 0 view .LVU23
 107 0000 CF93      		push r28
 108               	.LCFI0:
 109               		.cfi_def_cfa_offset 3
 110               		.cfi_offset 28, -2
 111 0002 DF93      		push r29
 112               	.LCFI1:
 113               		.cfi_def_cfa_offset 4
 114               		.cfi_offset 29, -3
 115               	/* prologue: function */
 116               	/* frame size = 0 */
 117               	/* stack size = 2 */
 118               	.L__stack_usage = 2
 119 0004 762F      		mov r23,r22
 120 0006 E901      		movw r28,r18
 120:quantum/rgblight.c ****     RGB rgb = hsv_to_rgb(hsv);
 121               		.loc 1 120 5 is_stmt 1 view .LVU24
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 122               		.loc 1 121 5 view .LVU25
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 123               		.loc 1 121 15 is_stmt 0 view .LVU26
 124 0008 682F      		mov r22,r24
 125               	.LVL6:
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 126               		.loc 1 121 15 view .LVU27
 127 000a 842F      		mov r24,r20
 128               	.LVL7:
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 129               		.loc 1 121 15 view .LVU28
 130 000c 0E94 0000 		call hsv_to_rgb
 131               	.LVL8:
 122:quantum/rgblight.c **** }
 132               		.loc 1 122 5 is_stmt 1 view .LVU29
 133               	.LBB20:
 134               	.LBI20:
 127:quantum/rgblight.c ****     (*led1).r = r;
 135               		.loc 1 127 6 view .LVU30
 136               	.LBB21:
 128:quantum/rgblight.c ****     (*led1).g = g;
 137               		.loc 1 128 5 view .LVU31
 128:quantum/rgblight.c ****     (*led1).g = g;
 138               		.loc 1 128 15 is_stmt 0 view .LVU32
 139 0010 7983      		std Y+1,r23
 129:quantum/rgblight.c ****     (*led1).b = b;
 140               		.loc 1 129 5 is_stmt 1 view .LVU33
 129:quantum/rgblight.c ****     (*led1).b = b;
 141               		.loc 1 129 15 is_stmt 0 view .LVU34
 142 0012 6883      		st Y,r22
 130:quantum/rgblight.c **** #ifdef RGBW
 143               		.loc 1 130 5 is_stmt 1 view .LVU35
 130:quantum/rgblight.c **** #ifdef RGBW
 144               		.loc 1 130 15 is_stmt 0 view .LVU36
 145 0014 8A83      		std Y+2,r24
 146               	.LVL9:
 147               	/* epilogue start */
 130:quantum/rgblight.c **** #ifdef RGBW
 148               		.loc 1 130 15 view .LVU37
 149               	.LBE21:
 150               	.LBE20:
 123:quantum/rgblight.c **** 
 151               		.loc 1 123 1 view .LVU38
 152 0016 DF91      		pop r29
 153 0018 CF91      		pop r28
 154               	.LVL10:
 123:quantum/rgblight.c **** 
 155               		.loc 1 123 1 view .LVU39
 156 001a 0895      		ret
 157               		.cfi_endproc
 158               	.LFE84:
 160               		.section	.text.sethsv,"ax",@progbits
 161               	.global	sethsv
 163               	sethsv:
 164               	.LVL11:
 165               	.LFB85:
 125:quantum/rgblight.c **** 
 166               		.loc 1 125 68 is_stmt 1 view -0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 125:quantum/rgblight.c **** 
 172               		.loc 1 125 70 view .LVU41
 173 0000 0C94 0000 		jmp sethsv_raw
 174               	.LVL12:
 125:quantum/rgblight.c **** 
 175               		.loc 1 125 70 is_stmt 0 view .LVU42
 176               		.cfi_endproc
 177               	.LFE85:
 179               		.section	.text.setrgb,"ax",@progbits
 180               	.global	setrgb
 182               	setrgb:
 183               	.LVL13:
 184               	.LFB86:
 127:quantum/rgblight.c ****     (*led1).r = r;
 185               		.loc 1 127 62 is_stmt 1 view -0
 186               		.cfi_startproc
 187               	/* prologue: function */
 188               	/* frame size = 0 */
 189               	/* stack size = 0 */
 190               	.L__stack_usage = 0
 127:quantum/rgblight.c ****     (*led1).r = r;
 191               		.loc 1 127 62 is_stmt 0 view .LVU44
 192 0000 F901      		movw r30,r18
 128:quantum/rgblight.c ****     (*led1).g = g;
 193               		.loc 1 128 5 is_stmt 1 view .LVU45
 128:quantum/rgblight.c ****     (*led1).g = g;
 194               		.loc 1 128 15 is_stmt 0 view .LVU46
 195 0002 8183      		std Z+1,r24
 129:quantum/rgblight.c ****     (*led1).b = b;
 196               		.loc 1 129 5 is_stmt 1 view .LVU47
 129:quantum/rgblight.c ****     (*led1).b = b;
 197               		.loc 1 129 15 is_stmt 0 view .LVU48
 198 0004 6083      		st Z,r22
 130:quantum/rgblight.c **** #ifdef RGBW
 199               		.loc 1 130 5 is_stmt 1 view .LVU49
 130:quantum/rgblight.c **** #ifdef RGBW
 200               		.loc 1 130 15 is_stmt 0 view .LVU50
 201 0006 4283      		std Z+2,r20
 202               	/* epilogue start */
 134:quantum/rgblight.c **** 
 203               		.loc 1 134 1 view .LVU51
 204 0008 0895      		ret
 205               		.cfi_endproc
 206               	.LFE86:
 208               		.section	.text.rgblight_check_config,"ax",@progbits
 209               	.global	rgblight_check_config
 211               	rgblight_check_config:
 212               	.LFB87:
 136:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 213               		.loc 1 136 34 is_stmt 1 view -0
 214               		.cfi_startproc
 215               	/* prologue: function */
 216               	/* frame size = 0 */
 217               	/* stack size = 0 */
 218               	.L__stack_usage = 0
 139:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 219               		.loc 1 139 5 view .LVU53
 139:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 220               		.loc 1 139 30 is_stmt 0 view .LVU54
 221 0000 8091 0000 		lds r24,rgblight_config
 222 0004 982F      		mov r25,r24
 223 0006 9E7F      		andi r25,lo8(-2)
 139:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 224               		.loc 1 139 8 view .LVU55
 225 0008 01F4      		brne .L9
 140:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 226               		.loc 1 140 9 is_stmt 1 view .LVU56
 140:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 227               		.loc 1 140 30 is_stmt 0 view .LVU57
 228 000a 8170      		andi r24,lo8(1)
 229 000c 8260      		ori r24,lo8(2)
 230               	.L11:
 142:quantum/rgblight.c ****     }
 231               		.loc 1 142 30 view .LVU58
 232 000e 8093 0000 		sts rgblight_config,r24
 145:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 233               		.loc 1 145 5 is_stmt 1 view .LVU59
 234               	.L8:
 235               	/* epilogue start */
 148:quantum/rgblight.c **** 
 236               		.loc 1 148 1 is_stmt 0 view .LVU60
 237 0012 0895      		ret
 238               	.L9:
 141:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 239               		.loc 1 141 12 is_stmt 1 view .LVU61
 141:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 240               		.loc 1 141 15 is_stmt 0 view .LVU62
 241 0014 8433      		cpi r24,lo8(52)
 242 0016 00F0      		brlo .L8
 142:quantum/rgblight.c ****     }
 243               		.loc 1 142 9 is_stmt 1 view .LVU63
 142:quantum/rgblight.c ****     }
 244               		.loc 1 142 30 is_stmt 0 view .LVU64
 245 0018 8170      		andi r24,lo8(1)
 246 001a 8263      		ori r24,lo8(50)
 247 001c 00C0      		rjmp .L11
 248               		.cfi_endproc
 249               	.LFE87:
 251               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 252               	.global	eeconfig_read_rgblight
 254               	eeconfig_read_rgblight:
 255               	.LFB88:
 150:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 256               		.loc 1 150 39 is_stmt 1 view -0
 257               		.cfi_startproc
 258               	/* prologue: function */
 259               	/* frame size = 0 */
 260               	/* stack size = 0 */
 261               	.L__stack_usage = 0
 152:quantum/rgblight.c **** #else
 262               		.loc 1 152 5 view .LVU66
 152:quantum/rgblight.c **** #else
 263               		.loc 1 152 12 is_stmt 0 view .LVU67
 264 0000 88E0      		ldi r24,lo8(8)
 265 0002 90E0      		ldi r25,0
 266 0004 0C94 0000 		jmp eeprom_read_dword
 267               	.LVL14:
 268               		.cfi_endproc
 269               	.LFE88:
 271               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 272               	.global	eeconfig_update_rgblight
 274               	eeconfig_update_rgblight:
 275               	.LVL15:
 276               	.LFB89:
 158:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 277               		.loc 1 158 45 is_stmt 1 view -0
 278               		.cfi_startproc
 158:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 279               		.loc 1 158 45 is_stmt 0 view .LVU69
 280 0000 CF92      		push r12
 281               	.LCFI2:
 282               		.cfi_def_cfa_offset 3
 283               		.cfi_offset 12, -2
 284 0002 DF92      		push r13
 285               	.LCFI3:
 286               		.cfi_def_cfa_offset 4
 287               		.cfi_offset 13, -3
 288 0004 EF92      		push r14
 289               	.LCFI4:
 290               		.cfi_def_cfa_offset 5
 291               		.cfi_offset 14, -4
 292 0006 FF92      		push r15
 293               	.LCFI5:
 294               		.cfi_def_cfa_offset 6
 295               		.cfi_offset 15, -5
 296               	/* prologue: function */
 297               	/* frame size = 0 */
 298               	/* stack size = 4 */
 299               	.L__stack_usage = 4
 300 0008 6B01      		movw r12,r22
 301 000a 7C01      		movw r14,r24
 160:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 302               		.loc 1 160 5 is_stmt 1 view .LVU70
 303 000c 0E94 0000 		call rgblight_check_config
 304               	.LVL16:
 161:quantum/rgblight.c **** #endif
 305               		.loc 1 161 5 view .LVU71
 306 0010 B701      		movw r22,r14
 307 0012 A601      		movw r20,r12
 308 0014 88E0      		ldi r24,lo8(8)
 309 0016 90E0      		ldi r25,0
 310               	/* epilogue start */
 163:quantum/rgblight.c **** 
 311               		.loc 1 163 1 is_stmt 0 view .LVU72
 312 0018 FF90      		pop r15
 313 001a EF90      		pop r14
 314 001c DF90      		pop r13
 315 001e CF90      		pop r12
 161:quantum/rgblight.c **** #endif
 316               		.loc 1 161 5 view .LVU73
 317 0020 0C94 0000 		jmp eeprom_update_dword
 318               	.LVL17:
 319               		.cfi_endproc
 320               	.LFE89:
 322               		.section	.text.eeconfig_update_rgblight_current,"ax",@progbits
 323               	.global	eeconfig_update_rgblight_current
 325               	eeconfig_update_rgblight_current:
 326               	.LFB90:
 165:quantum/rgblight.c **** 
 327               		.loc 1 165 45 is_stmt 1 view -0
 328               		.cfi_startproc
 329               	/* prologue: function */
 330               	/* frame size = 0 */
 331               	/* stack size = 0 */
 332               	.L__stack_usage = 0
 165:quantum/rgblight.c **** 
 333               		.loc 1 165 47 view .LVU75
 334 0000 6091 0000 		lds r22,rgblight_config
 335 0004 7091 0000 		lds r23,rgblight_config+1
 336 0008 8091 0000 		lds r24,rgblight_config+2
 337 000c 9091 0000 		lds r25,rgblight_config+3
 338 0010 0C94 0000 		jmp eeconfig_update_rgblight
 339               	.LVL18:
 340               		.cfi_endproc
 341               	.LFE90:
 343               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 344               	.global	eeconfig_update_rgblight_default
 346               	eeconfig_update_rgblight_default:
 347               	.LFB91:
 167:quantum/rgblight.c ****     rgblight_config.enable = 1;
 348               		.loc 1 167 45 view -0
 349               		.cfi_startproc
 350               	/* prologue: function */
 351               	/* frame size = 0 */
 352               	/* stack size = 0 */
 353               	.L__stack_usage = 0
 168:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 354               		.loc 1 168 5 view .LVU77
 169:quantum/rgblight.c ****     rgblight_config.hue    = 0;
 355               		.loc 1 169 5 view .LVU78
 170:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 356               		.loc 1 170 5 view .LVU79
 171:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 357               		.loc 1 171 5 view .LVU80
 172:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 358               		.loc 1 172 5 view .LVU81
 173:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 359               		.loc 1 173 5 view .LVU82
 168:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 360               		.loc 1 168 28 is_stmt 0 view .LVU83
 361 0000 E0E0      		ldi r30,lo8(rgblight_config)
 362 0002 F0E0      		ldi r31,hi8(rgblight_config)
 363 0004 83E0      		ldi r24,lo8(3)
 364 0006 8083      		st Z,r24
 170:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 365               		.loc 1 170 28 view .LVU84
 366 0008 1182      		std Z+1,__zero_reg__
 171:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 367               		.loc 1 171 28 view .LVU85
 368 000a 8FEF      		ldi r24,lo8(-1)
 369 000c 8283      		std Z+2,r24
 172:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 370               		.loc 1 172 28 view .LVU86
 371 000e 8383      		std Z+3,r24
 173:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 372               		.loc 1 173 28 view .LVU87
 373 0010 1482      		std Z+4,__zero_reg__
 174:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 374               		.loc 1 174 39 is_stmt 1 view .LVU88
 175:quantum/rgblight.c **** }
 375               		.loc 1 175 5 view .LVU89
 376 0012 6081      		ld r22,Z
 377 0014 7181      		ldd r23,Z+1
 378 0016 8281      		ldd r24,Z+2
 379 0018 9381      		ldd r25,Z+3
 380 001a 0C94 0000 		jmp eeconfig_update_rgblight
 381               	.LVL19:
 382               		.cfi_endproc
 383               	.LFE91:
 385               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 386               	.global	eeconfig_debug_rgblight
 388               	eeconfig_debug_rgblight:
 389               	.LFB92:
 178:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 390               		.loc 1 178 36 view -0
 391               		.cfi_startproc
 392               	/* prologue: function */
 393               	/* frame size = 0 */
 394               	/* stack size = 0 */
 395               	.L__stack_usage = 0
 179:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 396               		.loc 1 179 41 view .LVU91
 180:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 397               		.loc 1 180 69 view .LVU92
 181:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 398               		.loc 1 181 65 view .LVU93
 182:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 399               		.loc 1 182 63 view .LVU94
 183:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 400               		.loc 1 183 63 view .LVU95
 184:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 401               		.loc 1 184 63 view .LVU96
 185:quantum/rgblight.c **** }
 402               		.loc 1 185 67 view .LVU97
 403               	/* epilogue start */
 186:quantum/rgblight.c **** 
 404               		.loc 1 186 1 is_stmt 0 view .LVU98
 405 0000 0895      		ret
 406               		.cfi_endproc
 407               	.LFE92:
 409               		.section	.text.rgblight_read_dword,"ax",@progbits
 410               	.global	rgblight_read_dword
 412               	rgblight_read_dword:
 413               	.LFB94:
 225:quantum/rgblight.c **** 
 414               		.loc 1 225 36 is_stmt 1 view -0
 415               		.cfi_startproc
 416               	/* prologue: function */
 417               	/* frame size = 0 */
 418               	/* stack size = 0 */
 419               	.L__stack_usage = 0
 225:quantum/rgblight.c **** 
 420               		.loc 1 225 38 view .LVU100
 225:quantum/rgblight.c **** 
 421               		.loc 1 225 60 is_stmt 0 view .LVU101
 422 0000 6091 0000 		lds r22,rgblight_config
 423 0004 7091 0000 		lds r23,rgblight_config+1
 424 0008 8091 0000 		lds r24,rgblight_config+2
 425 000c 9091 0000 		lds r25,rgblight_config+3
 426               	/* epilogue start */
 225:quantum/rgblight.c **** 
 427               		.loc 1 225 1 view .LVU102
 428 0010 0895      		ret
 429               		.cfi_endproc
 430               	.LFE94:
 432               		.section	.text.rgblight_get_mode,"ax",@progbits
 433               	.global	rgblight_get_mode
 435               	rgblight_get_mode:
 436               	.LFB104:
 276:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 437               		.loc 1 276 33 is_stmt 1 view -0
 438               		.cfi_startproc
 439               	/* prologue: function */
 440               	/* frame size = 0 */
 441               	/* stack size = 0 */
 442               	.L__stack_usage = 0
 277:quantum/rgblight.c ****         return false;
 443               		.loc 1 277 5 view .LVU104
 277:quantum/rgblight.c ****         return false;
 444               		.loc 1 277 25 is_stmt 0 view .LVU105
 445 0000 8091 0000 		lds r24,rgblight_config
 277:quantum/rgblight.c ****         return false;
 446               		.loc 1 277 8 view .LVU106
 447 0004 80FF      		sbrs r24,0
 448 0006 00C0      		rjmp .L20
 281:quantum/rgblight.c **** }
 449               		.loc 1 281 5 is_stmt 1 view .LVU107
 281:quantum/rgblight.c **** }
 450               		.loc 1 281 27 is_stmt 0 view .LVU108
 451 0008 8695      		lsr r24
 452 000a 0895      		ret
 453               	.L20:
 278:quantum/rgblight.c ****     }
 454               		.loc 1 278 16 view .LVU109
 455 000c 80E0      		ldi r24,0
 456               	/* epilogue start */
 282:quantum/rgblight.c **** 
 457               		.loc 1 282 1 view .LVU110
 458 000e 0895      		ret
 459               		.cfi_endproc
 460               	.LFE104:
 462               		.section	.text.rgblight_increase_speed,"ax",@progbits
 463               	.global	rgblight_increase_speed
 465               	rgblight_increase_speed:
 466               	.LFB132:
 412:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 467               		.loc 1 412 36 is_stmt 1 view -0
 468               		.cfi_startproc
 469               	/* prologue: function */
 470               	/* frame size = 0 */
 471               	/* stack size = 0 */
 472               	.L__stack_usage = 0
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 473               		.loc 1 413 5 view .LVU112
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 474               		.loc 1 413 24 is_stmt 0 view .LVU113
 475 0000 8091 0000 		lds r24,rgblight_config+4
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 476               		.loc 1 413 8 view .LVU114
 477 0004 8330      		cpi r24,lo8(3)
 478 0006 00F4      		brsh .L22
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 479               		.loc 1 413 36 is_stmt 1 discriminator 1 view .LVU115
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 480               		.loc 1 413 57 is_stmt 0 discriminator 1 view .LVU116
 481 0008 8F5F      		subi r24,lo8(-(1))
 482 000a 8093 0000 		sts rgblight_config+4,r24
 483               	.L22:
 415:quantum/rgblight.c **** }
 484               		.loc 1 415 5 is_stmt 1 view .LVU117
 485 000e 6091 0000 		lds r22,rgblight_config
 486 0012 7091 0000 		lds r23,rgblight_config+1
 487 0016 8091 0000 		lds r24,rgblight_config+2
 488 001a 9091 0000 		lds r25,rgblight_config+3
 489 001e 0C94 0000 		jmp eeconfig_update_rgblight
 490               	.LVL20:
 491               		.cfi_endproc
 492               	.LFE132:
 494               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 495               	.global	rgblight_decrease_speed
 497               	rgblight_decrease_speed:
 498               	.LFB133:
 418:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 499               		.loc 1 418 36 view -0
 500               		.cfi_startproc
 501               	/* prologue: function */
 502               	/* frame size = 0 */
 503               	/* stack size = 0 */
 504               	.L__stack_usage = 0
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 505               		.loc 1 419 5 view .LVU119
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 506               		.loc 1 419 24 is_stmt 0 view .LVU120
 507 0000 8091 0000 		lds r24,rgblight_config+4
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 508               		.loc 1 419 8 view .LVU121
 509 0004 8823      		tst r24
 510 0006 01F0      		breq .L24
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 511               		.loc 1 419 36 is_stmt 1 discriminator 1 view .LVU122
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 512               		.loc 1 419 57 is_stmt 0 discriminator 1 view .LVU123
 513 0008 8150      		subi r24,lo8(-(-1))
 514 000a 8093 0000 		sts rgblight_config+4,r24
 515               	.L24:
 421:quantum/rgblight.c **** }
 516               		.loc 1 421 5 is_stmt 1 view .LVU124
 517 000e 6091 0000 		lds r22,rgblight_config
 518 0012 7091 0000 		lds r23,rgblight_config+1
 519 0016 8091 0000 		lds r24,rgblight_config+2
 520 001a 9091 0000 		lds r25,rgblight_config+3
 521 001e 0C94 0000 		jmp eeconfig_update_rgblight
 522               	.LVL21:
 523               		.cfi_endproc
 524               	.LFE133:
 526               		.section	.text.rgblight_get_speed,"ax",@progbits
 527               	.global	rgblight_get_speed
 529               	rgblight_get_speed:
 530               	.LFB138:
 508:quantum/rgblight.c **** 
 531               		.loc 1 508 34 view -0
 532               		.cfi_startproc
 533               	/* prologue: function */
 534               	/* frame size = 0 */
 535               	/* stack size = 0 */
 536               	.L__stack_usage = 0
 508:quantum/rgblight.c **** 
 537               		.loc 1 508 36 view .LVU126
 508:quantum/rgblight.c **** 
 538               		.loc 1 508 1 is_stmt 0 view .LVU127
 539 0000 8091 0000 		lds r24,rgblight_config+4
 540               	/* epilogue start */
 541 0004 0895      		ret
 542               		.cfi_endproc
 543               	.LFE138:
 545               		.section	.text.rgblight_set_speed_eeprom_helper,"ax",@progbits
 546               	.global	rgblight_set_speed_eeprom_helper
 548               	rgblight_set_speed_eeprom_helper:
 549               	.LVL22:
 550               	.LFB139:
 510:quantum/rgblight.c ****     rgblight_config.speed = speed;
 551               		.loc 1 510 76 is_stmt 1 view -0
 552               		.cfi_startproc
 553               	/* prologue: function */
 554               	/* frame size = 0 */
 555               	/* stack size = 0 */
 556               	.L__stack_usage = 0
 511:quantum/rgblight.c ****     if (write_to_eeprom) {
 557               		.loc 1 511 5 view .LVU129
 511:quantum/rgblight.c ****     if (write_to_eeprom) {
 558               		.loc 1 511 27 is_stmt 0 view .LVU130
 559 0000 8093 0000 		sts rgblight_config+4,r24
 512:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 560               		.loc 1 512 5 is_stmt 1 view .LVU131
 512:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 561               		.loc 1 512 8 is_stmt 0 view .LVU132
 562 0004 6623      		tst r22
 563 0006 01F0      		breq .L29
 513:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 564               		.loc 1 513 9 is_stmt 1 view .LVU133
 565 0008 6091 0000 		lds r22,rgblight_config
 566 000c 7091 0000 		lds r23,rgblight_config+1
 567 0010 8091 0000 		lds r24,rgblight_config+2
 568 0014 9091 0000 		lds r25,rgblight_config+3
 569               	.LVL23:
 513:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 570               		.loc 1 513 9 is_stmt 0 view .LVU134
 571 0018 0C94 0000 		jmp eeconfig_update_rgblight
 572               	.LVL24:
 573               	.L29:
 574               	/* epilogue start */
 518:quantum/rgblight.c **** 
 575               		.loc 1 518 1 view .LVU135
 576 001c 0895      		ret
 577               		.cfi_endproc
 578               	.LFE139:
 580               		.section	.text.rgblight_set_speed,"ax",@progbits
 581               	.global	rgblight_set_speed
 583               	rgblight_set_speed:
 584               	.LVL25:
 585               	.LFB140:
 520:quantum/rgblight.c **** 
 586               		.loc 1 520 40 is_stmt 1 view -0
 587               		.cfi_startproc
 588               	/* prologue: function */
 589               	/* frame size = 0 */
 590               	/* stack size = 0 */
 591               	.L__stack_usage = 0
 520:quantum/rgblight.c **** 
 592               		.loc 1 520 42 view .LVU137
 593 0000 61E0      		ldi r22,lo8(1)
 594 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 595               	.LVL26:
 520:quantum/rgblight.c **** 
 596               		.loc 1 520 42 is_stmt 0 view .LVU138
 597               		.cfi_endproc
 598               	.LFE140:
 600               		.section	.text.rgblight_set_speed_noeeprom,"ax",@progbits
 601               	.global	rgblight_set_speed_noeeprom
 603               	rgblight_set_speed_noeeprom:
 604               	.LVL27:
 605               	.LFB141:
 522:quantum/rgblight.c **** 
 606               		.loc 1 522 49 is_stmt 1 view -0
 607               		.cfi_startproc
 608               	/* prologue: function */
 609               	/* frame size = 0 */
 610               	/* stack size = 0 */
 611               	.L__stack_usage = 0
 522:quantum/rgblight.c **** 
 612               		.loc 1 522 51 view .LVU140
 613 0000 60E0      		ldi r22,0
 614 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 615               	.LVL28:
 522:quantum/rgblight.c **** 
 616               		.loc 1 522 51 is_stmt 0 view .LVU141
 617               		.cfi_endproc
 618               	.LFE141:
 620               		.section	.text.rgblight_get_hue,"ax",@progbits
 621               	.global	rgblight_get_hue
 623               	rgblight_get_hue:
 624               	.LFB142:
 524:quantum/rgblight.c **** 
 625               		.loc 1 524 32 is_stmt 1 view -0
 626               		.cfi_startproc
 627               	/* prologue: function */
 628               	/* frame size = 0 */
 629               	/* stack size = 0 */
 630               	.L__stack_usage = 0
 524:quantum/rgblight.c **** 
 631               		.loc 1 524 34 view .LVU143
 524:quantum/rgblight.c **** 
 632               		.loc 1 524 1 is_stmt 0 view .LVU144
 633 0000 8091 0000 		lds r24,rgblight_config+1
 634               	/* epilogue start */
 635 0004 0895      		ret
 636               		.cfi_endproc
 637               	.LFE142:
 639               		.section	.text.rgblight_get_sat,"ax",@progbits
 640               	.global	rgblight_get_sat
 642               	rgblight_get_sat:
 643               	.LFB143:
 526:quantum/rgblight.c **** 
 644               		.loc 1 526 32 is_stmt 1 view -0
 645               		.cfi_startproc
 646               	/* prologue: function */
 647               	/* frame size = 0 */
 648               	/* stack size = 0 */
 649               	.L__stack_usage = 0
 526:quantum/rgblight.c **** 
 650               		.loc 1 526 34 view .LVU146
 526:quantum/rgblight.c **** 
 651               		.loc 1 526 1 is_stmt 0 view .LVU147
 652 0000 8091 0000 		lds r24,rgblight_config+2
 653               	/* epilogue start */
 654 0004 0895      		ret
 655               		.cfi_endproc
 656               	.LFE143:
 658               		.section	.text.rgblight_get_val,"ax",@progbits
 659               	.global	rgblight_get_val
 661               	rgblight_get_val:
 662               	.LFB144:
 528:quantum/rgblight.c **** 
 663               		.loc 1 528 32 is_stmt 1 view -0
 664               		.cfi_startproc
 665               	/* prologue: function */
 666               	/* frame size = 0 */
 667               	/* stack size = 0 */
 668               	.L__stack_usage = 0
 528:quantum/rgblight.c **** 
 669               		.loc 1 528 34 view .LVU149
 528:quantum/rgblight.c **** 
 670               		.loc 1 528 1 is_stmt 0 view .LVU150
 671 0000 8091 0000 		lds r24,rgblight_config+3
 672               	/* epilogue start */
 673 0004 0895      		ret
 674               		.cfi_endproc
 675               	.LFE144:
 677               		.section	.text.rgblight_set,"ax",@progbits
 678               	.global	rgblight_set
 680               	rgblight_set:
 681               	.LFB155:
 620:quantum/rgblight.c ****     LED_TYPE *start_led;
 682               		.loc 1 620 25 is_stmt 1 view -0
 683               		.cfi_startproc
 684               	/* prologue: function */
 685               	/* frame size = 0 */
 686               	/* stack size = 0 */
 687               	.L__stack_usage = 0
 621:quantum/rgblight.c ****     uint16_t  num_leds = clipping_num_leds;
 688               		.loc 1 621 5 view .LVU152
 622:quantum/rgblight.c **** 
 689               		.loc 1 622 5 view .LVU153
 622:quantum/rgblight.c **** 
 690               		.loc 1 622 15 is_stmt 0 view .LVU154
 691 0000 6091 0000 		lds r22,clipping_num_leds
 692 0004 70E0      		ldi r23,0
 693               	.LVL29:
 624:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 694               		.loc 1 624 5 is_stmt 1 view .LVU155
 624:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 695               		.loc 1 624 25 is_stmt 0 view .LVU156
 696 0006 8091 0000 		lds r24,rgblight_config
 624:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 697               		.loc 1 624 8 view .LVU157
 698 000a 80FF      		sbrs r24,0
 699 000c 00C0      		rjmp .L37
 700               	.L40:
 642:quantum/rgblight.c **** #    endif
 701               		.loc 1 642 5 is_stmt 1 view .LVU158
 702               	.LVL30:
 650:quantum/rgblight.c **** }
 703               		.loc 1 650 5 view .LVU159
 642:quantum/rgblight.c **** #    endif
 704               		.loc 1 642 21 is_stmt 0 view .LVU160
 705 000e 8091 0000 		lds r24,clipping_start_pos
 706 0012 23E0      		ldi r18,lo8(3)
 707 0014 829F      		mul r24,r18
 708 0016 C001      		movw r24,r0
 709 0018 1124      		clr __zero_reg__
 650:quantum/rgblight.c **** }
 710               		.loc 1 650 5 view .LVU161
 711 001a 8050      		subi r24,lo8(-(led))
 712 001c 9040      		sbci r25,hi8(-(led))
 713 001e 0C94 0000 		jmp ws2812_setleds
 714               	.LVL31:
 715               	.L37:
 625:quantum/rgblight.c ****             led[i].r = 0;
 716               		.loc 1 625 9 is_stmt 1 view .LVU162
 717               	.LBB22:
 625:quantum/rgblight.c ****             led[i].r = 0;
 718               		.loc 1 625 14 view .LVU163
 625:quantum/rgblight.c ****             led[i].r = 0;
 719               		.loc 1 625 22 is_stmt 0 view .LVU164
 720 0022 8091 0000 		lds r24,effect_start_pos
 721               	.LVL32:
 625:quantum/rgblight.c ****             led[i].r = 0;
 722               		.loc 1 625 46 view .LVU165
 723 0026 9091 0000 		lds r25,effect_end_pos
 724 002a 23E0      		ldi r18,lo8(3)
 725 002c 829F      		mul r24,r18
 726 002e F001      		movw r30,r0
 727 0030 1124      		clr __zero_reg__
 728 0032 E050      		subi r30,lo8(-(led))
 729 0034 F040      		sbci r31,hi8(-(led))
 730               	.L38:
 625:quantum/rgblight.c ****             led[i].r = 0;
 731               		.loc 1 625 9 discriminator 1 view .LVU166
 732 0036 8917      		cp r24,r25
 733 0038 00F4      		brsh .L40
 626:quantum/rgblight.c ****             led[i].g = 0;
 734               		.loc 1 626 13 is_stmt 1 discriminator 3 view .LVU167
 626:quantum/rgblight.c ****             led[i].g = 0;
 735               		.loc 1 626 22 is_stmt 0 discriminator 3 view .LVU168
 736 003a 1182      		std Z+1,__zero_reg__
 627:quantum/rgblight.c ****             led[i].b = 0;
 737               		.loc 1 627 13 is_stmt 1 discriminator 3 view .LVU169
 627:quantum/rgblight.c ****             led[i].b = 0;
 738               		.loc 1 627 22 is_stmt 0 discriminator 3 view .LVU170
 739 003c 1082      		st Z,__zero_reg__
 628:quantum/rgblight.c **** #    ifdef RGBW
 740               		.loc 1 628 13 is_stmt 1 discriminator 3 view .LVU171
 628:quantum/rgblight.c **** #    ifdef RGBW
 741               		.loc 1 628 22 is_stmt 0 discriminator 3 view .LVU172
 742 003e 1282      		std Z+2,__zero_reg__
 625:quantum/rgblight.c ****             led[i].r = 0;
 743               		.loc 1 625 65 discriminator 3 view .LVU173
 744 0040 8F5F      		subi r24,lo8(-(1))
 745               	.LVL33:
 625:quantum/rgblight.c ****             led[i].r = 0;
 746               		.loc 1 625 65 discriminator 3 view .LVU174
 747 0042 3396      		adiw r30,3
 748 0044 00C0      		rjmp .L38
 749               	.LBE22:
 750               		.cfi_endproc
 751               	.LFE155:
 753               		.section	.text.rgblight_setrgb,"ax",@progbits
 754               	.global	rgblight_setrgb
 756               	rgblight_setrgb:
 757               	.LVL34:
 758               	.LFB145:
 530:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 759               		.loc 1 530 55 is_stmt 1 view -0
 760               		.cfi_startproc
 761               	/* prologue: function */
 762               	/* frame size = 0 */
 763               	/* stack size = 0 */
 764               	.L__stack_usage = 0
 531:quantum/rgblight.c ****         return;
 765               		.loc 1 531 5 view .LVU176
 531:quantum/rgblight.c ****         return;
 766               		.loc 1 531 25 is_stmt 0 view .LVU177
 767 0000 9091 0000 		lds r25,rgblight_config
 531:quantum/rgblight.c ****         return;
 768               		.loc 1 531 8 view .LVU178
 769 0004 90FF      		sbrs r25,0
 770 0006 00C0      		rjmp .L41
 535:quantum/rgblight.c ****         led[i].r = r;
 771               		.loc 1 535 5 is_stmt 1 view .LVU179
 772               	.LBB23:
 535:quantum/rgblight.c ****         led[i].r = r;
 773               		.loc 1 535 10 view .LVU180
 535:quantum/rgblight.c ****         led[i].r = r;
 774               		.loc 1 535 18 is_stmt 0 view .LVU181
 775 0008 9091 0000 		lds r25,effect_start_pos
 776               	.LVL35:
 535:quantum/rgblight.c ****         led[i].r = r;
 777               		.loc 1 535 42 view .LVU182
 778 000c 2091 0000 		lds r18,effect_end_pos
 779 0010 33E0      		ldi r19,lo8(3)
 780 0012 939F      		mul r25,r19
 781 0014 F001      		movw r30,r0
 782 0016 1124      		clr __zero_reg__
 783 0018 E050      		subi r30,lo8(-(led))
 784 001a F040      		sbci r31,hi8(-(led))
 785               	.L43:
 535:quantum/rgblight.c ****         led[i].r = r;
 786               		.loc 1 535 5 discriminator 1 view .LVU183
 787 001c 9217      		cp r25,r18
 788 001e 00F0      		brlo .L44
 535:quantum/rgblight.c ****         led[i].r = r;
 789               		.loc 1 535 5 discriminator 1 view .LVU184
 790               	.LBE23:
 543:quantum/rgblight.c **** }
 791               		.loc 1 543 5 is_stmt 1 view .LVU185
 792 0020 0C94 0000 		jmp rgblight_set
 793               	.LVL36:
 794               	.L44:
 795               	.LBB24:
 536:quantum/rgblight.c ****         led[i].g = g;
 796               		.loc 1 536 9 discriminator 3 view .LVU186
 536:quantum/rgblight.c ****         led[i].g = g;
 797               		.loc 1 536 18 is_stmt 0 discriminator 3 view .LVU187
 798 0024 8183      		std Z+1,r24
 537:quantum/rgblight.c ****         led[i].b = b;
 799               		.loc 1 537 9 is_stmt 1 discriminator 3 view .LVU188
 537:quantum/rgblight.c ****         led[i].b = b;
 800               		.loc 1 537 18 is_stmt 0 discriminator 3 view .LVU189
 801 0026 6083      		st Z,r22
 538:quantum/rgblight.c **** #ifdef RGBW
 802               		.loc 1 538 9 is_stmt 1 discriminator 3 view .LVU190
 538:quantum/rgblight.c **** #ifdef RGBW
 803               		.loc 1 538 18 is_stmt 0 discriminator 3 view .LVU191
 804 0028 4283      		std Z+2,r20
 535:quantum/rgblight.c ****         led[i].r = r;
 805               		.loc 1 535 61 discriminator 3 view .LVU192
 806 002a 9F5F      		subi r25,lo8(-(1))
 807               	.LVL37:
 535:quantum/rgblight.c ****         led[i].r = r;
 808               		.loc 1 535 61 discriminator 3 view .LVU193
 809 002c 3396      		adiw r30,3
 810 002e 00C0      		rjmp .L43
 811               	.LVL38:
 812               	.L41:
 813               	/* epilogue start */
 535:quantum/rgblight.c ****         led[i].r = r;
 814               		.loc 1 535 61 discriminator 3 view .LVU194
 815               	.LBE24:
 544:quantum/rgblight.c **** 
 816               		.loc 1 544 1 view .LVU195
 817 0030 0895      		ret
 818               		.cfi_endproc
 819               	.LFE145:
 821               		.section	.text.rgblight_sethsv_noeeprom_old,"ax",@progbits
 822               	.global	rgblight_sethsv_noeeprom_old
 824               	rgblight_sethsv_noeeprom_old:
 825               	.LVL39:
 826               	.LFB134:
 424:quantum/rgblight.c ****     if (rgblight_config.enable) {
 827               		.loc 1 424 74 is_stmt 1 view -0
 828               		.cfi_startproc
 424:quantum/rgblight.c ****     if (rgblight_config.enable) {
 829               		.loc 1 424 74 is_stmt 0 view .LVU197
 830 0000 CF93      		push r28
 831               	.LCFI6:
 832               		.cfi_def_cfa_offset 3
 833               		.cfi_offset 28, -2
 834 0002 DF93      		push r29
 835               	.LCFI7:
 836               		.cfi_def_cfa_offset 4
 837               		.cfi_offset 29, -3
 838 0004 00D0      		rcall .
 839 0006 0F92      		push __tmp_reg__
 840               	.LCFI8:
 841               		.cfi_def_cfa_offset 7
 842 0008 CDB7      		in r28,__SP_L__
 843 000a DEB7      		in r29,__SP_H__
 844               	.LCFI9:
 845               		.cfi_def_cfa_register 28
 846               	/* prologue: function */
 847               	/* frame size = 3 */
 848               	/* stack size = 5 */
 849               	.L__stack_usage = 5
 425:quantum/rgblight.c ****         LED_TYPE tmp_led;
 850               		.loc 1 425 5 is_stmt 1 view .LVU198
 425:quantum/rgblight.c ****         LED_TYPE tmp_led;
 851               		.loc 1 425 9 is_stmt 0 view .LVU199
 852 000c 9091 0000 		lds r25,rgblight_config
 425:quantum/rgblight.c ****         LED_TYPE tmp_led;
 853               		.loc 1 425 8 view .LVU200
 854 0010 90FF      		sbrs r25,0
 855 0012 00C0      		rjmp .L45
 856               	.LBB28:
 426:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 857               		.loc 1 426 9 is_stmt 1 view .LVU201
 427:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 858               		.loc 1 427 9 view .LVU202
 859               	.LVL40:
 860               	.LBB29:
 861               	.LBI29:
 125:quantum/rgblight.c **** 
 862               		.loc 1 125 6 view .LVU203
 863               	.LBB30:
 125:quantum/rgblight.c **** 
 864               		.loc 1 125 70 view .LVU204
 865 0014 9E01      		movw r18,r28
 866 0016 2F5F      		subi r18,-1
 867 0018 3F4F      		sbci r19,-1
 868 001a 0E94 0000 		call sethsv_raw
 869               	.LVL41:
 125:quantum/rgblight.c **** 
 870               		.loc 1 125 70 is_stmt 0 view .LVU205
 871               	.LBE30:
 872               	.LBE29:
 428:quantum/rgblight.c ****     }
 873               		.loc 1 428 9 is_stmt 1 view .LVU206
 874 001e 4B81      		ldd r20,Y+3
 875 0020 6981      		ldd r22,Y+1
 876 0022 8A81      		ldd r24,Y+2
 877 0024 0E94 0000 		call rgblight_setrgb
 878               	.LVL42:
 879               	.L45:
 880               	/* epilogue start */
 881               	.LBE28:
 430:quantum/rgblight.c **** 
 882               		.loc 1 430 1 is_stmt 0 view .LVU207
 883 0028 0F90      		pop __tmp_reg__
 884 002a 0F90      		pop __tmp_reg__
 885 002c 0F90      		pop __tmp_reg__
 886 002e DF91      		pop r29
 887 0030 CF91      		pop r28
 888 0032 0895      		ret
 889               		.cfi_endproc
 890               	.LFE134:
 892               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 893               	.global	rgblight_effect_breathing
 895               	rgblight_effect_breathing:
 896               	.LVL43:
 897               	.LFB163:
 760:quantum/rgblight.c **** 
 761:quantum/rgblight.c **** void rgblight_task(void) {
 762:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 763:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 764:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 765:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 766:quantum/rgblight.c ****         animation_status.delta      = delta;
 767:quantum/rgblight.c **** 
 768:quantum/rgblight.c ****         // static light mode, do nothing here
 769:quantum/rgblight.c ****         if (1 == 0) {  // dummy
 770:quantum/rgblight.c ****         }
 771:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHING
 772:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 773:quantum/rgblight.c ****             // breathing mode
 774:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_BREATHING_INTERVALS[delta], 1, 100);
 775:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 776:quantum/rgblight.c ****         }
 777:quantum/rgblight.c **** #    endif
 778:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 779:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 780:quantum/rgblight.c ****             // rainbow mood mode
 781:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_MOOD_INTERVALS[delta], 5, 100);
 782:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 783:quantum/rgblight.c ****         }
 784:quantum/rgblight.c **** #    endif
 785:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 786:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 787:quantum/rgblight.c ****             // rainbow swirl mode
 788:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_SWIRL_INTERVALS[delta / 2], 1, 100);
 789:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 790:quantum/rgblight.c ****         }
 791:quantum/rgblight.c **** #    endif
 792:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_SNAKE
 793:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_SNAKE) {
 794:quantum/rgblight.c ****             // snake mode
 795:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_SNAKE_INTERVALS[delta / 2], 1, 200);
 796:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 797:quantum/rgblight.c ****         }
 798:quantum/rgblight.c **** #    endif
 799:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_KNIGHT
 800:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_KNIGHT) {
 801:quantum/rgblight.c ****             // knight mode
 802:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_KNIGHT_INTERVALS[delta], 5, 100);
 803:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 804:quantum/rgblight.c ****         }
 805:quantum/rgblight.c **** #    endif
 806:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_CHRISTMAS
 807:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_CHRISTMAS) {
 808:quantum/rgblight.c ****             // christmas mode
 809:quantum/rgblight.c ****             interval_time = RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL;
 810:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 811:quantum/rgblight.c ****         }
 812:quantum/rgblight.c **** #    endif
 813:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RGB_TEST
 814:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RGB_TEST) {
 815:quantum/rgblight.c ****             // RGB test mode
 816:quantum/rgblight.c ****             interval_time = pgm_read_word(&RGBLED_RGBTEST_INTERVALS[0]);
 817:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 818:quantum/rgblight.c ****         }
 819:quantum/rgblight.c **** #    endif
 820:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_ALTERNATING
 821:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_ALTERNATING) {
 822:quantum/rgblight.c ****             interval_time = 500;
 823:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 824:quantum/rgblight.c ****         }
 825:quantum/rgblight.c **** #    endif
 826:quantum/rgblight.c ****         if (animation_status.restart) {
 827:quantum/rgblight.c ****             animation_status.restart    = false;
 828:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 829:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 830:quantum/rgblight.c ****         }
 831:quantum/rgblight.c ****         if (timer_elapsed(animation_status.last_timer) >= interval_time) {
 832:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 833:quantum/rgblight.c ****             static uint16_t report_last_timer = 0;
 834:quantum/rgblight.c ****             static bool     tick_flag         = false;
 835:quantum/rgblight.c ****             uint16_t        oldpos16;
 836:quantum/rgblight.c ****             if (tick_flag) {
 837:quantum/rgblight.c ****                 tick_flag = false;
 838:quantum/rgblight.c ****                 if (timer_elapsed(report_last_timer) >= 30000) {
 839:quantum/rgblight.c ****                     report_last_timer = timer_read();
 840:quantum/rgblight.c ****                     dprintf("rgblight animation tick report to slave\n");
 841:quantum/rgblight.c ****                     RGBLIGHT_SPLIT_ANIMATION_TICK;
 842:quantum/rgblight.c ****                 }
 843:quantum/rgblight.c ****             }
 844:quantum/rgblight.c ****             oldpos16 = animation_status.pos16;
 845:quantum/rgblight.c **** #    endif
 846:quantum/rgblight.c ****             animation_status.last_timer += interval_time;
 847:quantum/rgblight.c ****             effect_func(&animation_status);
 848:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 849:quantum/rgblight.c ****             if (animation_status.pos16 == 0 && oldpos16 != 0) {
 850:quantum/rgblight.c ****                 tick_flag = true;
 851:quantum/rgblight.c ****             }
 852:quantum/rgblight.c **** #    endif
 853:quantum/rgblight.c ****         }
 854:quantum/rgblight.c ****     }
 855:quantum/rgblight.c **** }
 856:quantum/rgblight.c **** 
 857:quantum/rgblight.c **** #endif /* RGBLIGHT_USE_TIMER */
 858:quantum/rgblight.c **** 
 859:quantum/rgblight.c **** // Effects
 860:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 861:quantum/rgblight.c **** 
 862:quantum/rgblight.c **** #    ifndef RGBLIGHT_EFFECT_BREATHE_CENTER
 863:quantum/rgblight.c **** #        ifndef RGBLIGHT_BREATHE_TABLE_SIZE
 864:quantum/rgblight.c **** #            define RGBLIGHT_BREATHE_TABLE_SIZE 256  // 256 or 128 or 64
 865:quantum/rgblight.c **** #        endif
 866:quantum/rgblight.c **** #        include <rgblight_breathe_table.h>
 867:quantum/rgblight.c **** #    endif
 868:quantum/rgblight.c **** 
 869:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
 870:quantum/rgblight.c **** 
 871:quantum/rgblight.c **** void rgblight_effect_breathing(animation_status_t *anim) {
 898               		.loc 1 871 58 is_stmt 1 view -0
 899               		.cfi_startproc
 900               		.loc 1 871 58 is_stmt 0 view .LVU209
 901 0000 CF93      		push r28
 902               	.LCFI10:
 903               		.cfi_def_cfa_offset 3
 904               		.cfi_offset 28, -2
 905 0002 DF93      		push r29
 906               	.LCFI11:
 907               		.cfi_def_cfa_offset 4
 908               		.cfi_offset 29, -3
 909               	/* prologue: function */
 910               	/* frame size = 0 */
 911               	/* stack size = 2 */
 912               	.L__stack_usage = 2
 913 0004 EC01      		movw r28,r24
 872:quantum/rgblight.c ****     float val;
 914               		.loc 1 872 5 is_stmt 1 view .LVU210
 873:quantum/rgblight.c **** 
 874:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 875:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHE_TABLE
 876:quantum/rgblight.c ****     val = pgm_read_byte(&rgblight_effect_breathe_table[anim->pos / table_scale]);
 915               		.loc 1 876 5 view .LVU211
 916               	.LBB31:
 917               		.loc 1 876 11 view .LVU212
 918               	.LVL44:
 919               		.loc 1 876 11 view .LVU213
 920               		.loc 1 876 11 view .LVU214
 921 0006 EC81      		ldd r30,Y+4
 922 0008 F0E0      		ldi r31,0
 923 000a E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 924 000c F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 925               	/* #APP */
 926               	 ;  876 "quantum/rgblight.c" 1
 927 000e 4491      		lpm r20, Z
 928               		
 929               	 ;  0 "" 2
 930               	.LVL45:
 931               		.loc 1 876 11 view .LVU215
 932               		.loc 1 876 11 is_stmt 0 view .LVU216
 933               	/* #NOAPP */
 934               	.LBE31:
 877:quantum/rgblight.c **** #    else
 878:quantum/rgblight.c ****     val = (exp(sin((anim->pos / 255.0) * M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER / M_E) * (RGBLIGHT
 879:quantum/rgblight.c **** #    endif
 880:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(rgblight_config.hue, rgblight_config.sat, val);
 935               		.loc 1 880 5 is_stmt 1 view .LVU217
 936 0010 E0E0      		ldi r30,lo8(rgblight_config)
 937 0012 F0E0      		ldi r31,hi8(rgblight_config)
 938 0014 6281      		ldd r22,Z+2
 939 0016 8181      		ldd r24,Z+1
 940               	.LVL46:
 941               		.loc 1 880 5 is_stmt 0 view .LVU218
 942 0018 0E94 0000 		call rgblight_sethsv_noeeprom_old
 943               	.LVL47:
 881:quantum/rgblight.c ****     anim->pos = (anim->pos + 1);
 944               		.loc 1 881 5 is_stmt 1 view .LVU219
 945               		.loc 1 881 28 is_stmt 0 view .LVU220
 946 001c 8C81      		ldd r24,Y+4
 947 001e 8F5F      		subi r24,lo8(-(1))
 948               		.loc 1 881 15 view .LVU221
 949 0020 8C83      		std Y+4,r24
 950               	/* epilogue start */
 882:quantum/rgblight.c **** }
 951               		.loc 1 882 1 view .LVU222
 952 0022 DF91      		pop r29
 953 0024 CF91      		pop r28
 954               	.LVL48:
 955               		.loc 1 882 1 view .LVU223
 956 0026 0895      		ret
 957               		.cfi_endproc
 958               	.LFE163:
 960               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 961               	.global	rgblight_effect_rainbow_mood
 963               	rgblight_effect_rainbow_mood:
 964               	.LVL49:
 965               	.LFB164:
 883:quantum/rgblight.c **** #endif
 884:quantum/rgblight.c **** 
 885:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 886:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
 887:quantum/rgblight.c **** 
 888:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(animation_status_t *anim) {
 966               		.loc 1 888 61 is_stmt 1 view -0
 967               		.cfi_startproc
 968               		.loc 1 888 61 is_stmt 0 view .LVU225
 969 0000 CF93      		push r28
 970               	.LCFI12:
 971               		.cfi_def_cfa_offset 3
 972               		.cfi_offset 28, -2
 973 0002 DF93      		push r29
 974               	.LCFI13:
 975               		.cfi_def_cfa_offset 4
 976               		.cfi_offset 29, -3
 977               	/* prologue: function */
 978               	/* frame size = 0 */
 979               	/* stack size = 2 */
 980               	.L__stack_usage = 2
 981 0004 EC01      		movw r28,r24
 889:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(anim->current_hue, rgblight_config.sat, rgblight_config.val);
 982               		.loc 1 889 5 is_stmt 1 view .LVU226
 983 0006 E0E0      		ldi r30,lo8(rgblight_config)
 984 0008 F0E0      		ldi r31,hi8(rgblight_config)
 985 000a 4381      		ldd r20,Z+3
 986 000c 6281      		ldd r22,Z+2
 987 000e 8C81      		ldd r24,Y+4
 988               	.LVL50:
 989               		.loc 1 889 5 is_stmt 0 view .LVU227
 990 0010 0E94 0000 		call rgblight_sethsv_noeeprom_old
 991               	.LVL51:
 890:quantum/rgblight.c ****     anim->current_hue++;
 992               		.loc 1 890 5 is_stmt 1 view .LVU228
 993               		.loc 1 890 22 is_stmt 0 view .LVU229
 994 0014 8C81      		ldd r24,Y+4
 995 0016 8F5F      		subi r24,lo8(-(1))
 996 0018 8C83      		std Y+4,r24
 997               	/* epilogue start */
 891:quantum/rgblight.c **** }
 998               		.loc 1 891 1 view .LVU230
 999 001a DF91      		pop r29
 1000 001c CF91      		pop r28
 1001               	.LVL52:
 1002               		.loc 1 891 1 view .LVU231
 1003 001e 0895      		ret
 1004               		.cfi_endproc
 1005               	.LFE164:
 1007               		.section	.text.rgblight_sethsv_eeprom_helper,"ax",@progbits
 1008               	.global	rgblight_sethsv_eeprom_helper
 1010               	rgblight_sethsv_eeprom_helper:
 1011               	.LVL53:
 1012               	.LFB135:
 432:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1013               		.loc 1 432 97 is_stmt 1 view -0
 1014               		.cfi_startproc
 432:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1015               		.loc 1 432 97 is_stmt 0 view .LVU233
 1016 0000 AF92      		push r10
 1017               	.LCFI14:
 1018               		.cfi_def_cfa_offset 3
 1019               		.cfi_offset 10, -2
 1020 0002 BF92      		push r11
 1021               	.LCFI15:
 1022               		.cfi_def_cfa_offset 4
 1023               		.cfi_offset 11, -3
 1024 0004 CF92      		push r12
 1025               	.LCFI16:
 1026               		.cfi_def_cfa_offset 5
 1027               		.cfi_offset 12, -4
 1028 0006 DF92      		push r13
 1029               	.LCFI17:
 1030               		.cfi_def_cfa_offset 6
 1031               		.cfi_offset 13, -5
 1032 0008 EF92      		push r14
 1033               	.LCFI18:
 1034               		.cfi_def_cfa_offset 7
 1035               		.cfi_offset 14, -6
 1036 000a FF92      		push r15
 1037               	.LCFI19:
 1038               		.cfi_def_cfa_offset 8
 1039               		.cfi_offset 15, -7
 1040 000c 0F93      		push r16
 1041               	.LCFI20:
 1042               		.cfi_def_cfa_offset 9
 1043               		.cfi_offset 16, -8
 1044 000e 1F93      		push r17
 1045               	.LCFI21:
 1046               		.cfi_def_cfa_offset 10
 1047               		.cfi_offset 17, -9
 1048 0010 CF93      		push r28
 1049               	.LCFI22:
 1050               		.cfi_def_cfa_offset 11
 1051               		.cfi_offset 28, -10
 1052 0012 DF93      		push r29
 1053               	.LCFI23:
 1054               		.cfi_def_cfa_offset 12
 1055               		.cfi_offset 29, -11
 1056 0014 00D0      		rcall .
 1057 0016 0F92      		push __tmp_reg__
 1058               	.LCFI24:
 1059               		.cfi_def_cfa_offset 15
 1060 0018 CDB7      		in r28,__SP_L__
 1061 001a DEB7      		in r29,__SP_H__
 1062               	.LCFI25:
 1063               		.cfi_def_cfa_register 28
 1064               	/* prologue: function */
 1065               	/* frame size = 3 */
 1066               	/* stack size = 13 */
 1067               	.L__stack_usage = 13
 1068 001c 182F      		mov r17,r24
 1069 001e F62E      		mov r15,r22
 1070 0020 042F      		mov r16,r20
 1071 0022 E22E      		mov r14,r18
 433:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1072               		.loc 1 433 5 is_stmt 1 view .LVU234
 433:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1073               		.loc 1 433 9 is_stmt 0 view .LVU235
 1074 0024 9091 0000 		lds r25,rgblight_config
 433:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1075               		.loc 1 433 8 view .LVU236
 1076 0028 90FF      		sbrs r25,0
 1077 002a 00C0      		rjmp .L52
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1078               		.loc 1 434 9 is_stmt 1 view .LVU237
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1079               		.loc 1 434 68 is_stmt 0 view .LVU238
 1080 002c E92F      		mov r30,r25
 1081 002e E695      		lsr r30
 1082 0030 AE2F      		mov r26,r30
 1083 0032 B0E0      		ldi r27,0
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1084               		.loc 1 434 52 view .LVU239
 1085 0034 A050      		subi r26,lo8(-(mode_base_table))
 1086 0036 B040      		sbci r27,hi8(-(mode_base_table))
 1087 0038 8C91      		ld r24,X
 1088               	.LVL54:
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1089               		.loc 1 434 35 view .LVU240
 1090 003a 8093 0000 		sts rgblight_status,r24
 435:quantum/rgblight.c ****             // same static color
 1091               		.loc 1 435 9 is_stmt 1 view .LVU241
 435:quantum/rgblight.c ****             // same static color
 1092               		.loc 1 435 34 is_stmt 0 view .LVU242
 1093 003e 9E7F      		andi r25,lo8(-2)
 435:quantum/rgblight.c ****             // same static color
 1094               		.loc 1 435 12 view .LVU243
 1095 0040 9230      		cpi r25,lo8(2)
 1096 0042 01F4      		brne .L55
 1097               	.LBB41:
 437:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 1098               		.loc 1 437 13 is_stmt 1 view .LVU244
 438:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1099               		.loc 1 438 13 view .LVU245
 1100               	.LVL55:
 1101               	.LBB42:
 1102               	.LBI42:
 125:quantum/rgblight.c **** 
 1103               		.loc 1 125 6 view .LVU246
 1104               	.LBB43:
 125:quantum/rgblight.c **** 
 1105               		.loc 1 125 70 view .LVU247
 1106 0044 9E01      		movw r18,r28
 1107               	.LVL56:
 125:quantum/rgblight.c **** 
 1108               		.loc 1 125 70 is_stmt 0 view .LVU248
 1109 0046 2F5F      		subi r18,-1
 1110 0048 3F4F      		sbci r19,-1
 1111 004a 812F      		mov r24,r17
 1112 004c 0E94 0000 		call sethsv_raw
 1113               	.LVL57:
 125:quantum/rgblight.c **** 
 1114               		.loc 1 125 70 view .LVU249
 1115               	.LBE43:
 1116               	.LBE42:
 439:quantum/rgblight.c ****         } else {
 1117               		.loc 1 439 13 is_stmt 1 view .LVU250
 1118 0050 4B81      		ldd r20,Y+3
 1119 0052 6981      		ldd r22,Y+1
 1120 0054 8A81      		ldd r24,Y+2
 1121 0056 0E94 0000 		call rgblight_setrgb
 1122               	.LVL58:
 1123               	.L56:
 439:quantum/rgblight.c ****         } else {
 1124               		.loc 1 439 13 is_stmt 0 view .LVU251
 1125               	.LBE41:
 492:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1126               		.loc 1 492 9 is_stmt 1 view .LVU252
 492:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1127               		.loc 1 492 29 is_stmt 0 view .LVU253
 1128 005a 1093 0000 		sts rgblight_config+1,r17
 493:quantum/rgblight.c ****         rgblight_config.val = val;
 1129               		.loc 1 493 9 is_stmt 1 view .LVU254
 493:quantum/rgblight.c ****         rgblight_config.val = val;
 1130               		.loc 1 493 29 is_stmt 0 view .LVU255
 1131 005e F092 0000 		sts rgblight_config+2,r15
 494:quantum/rgblight.c ****         if (write_to_eeprom) {
 1132               		.loc 1 494 9 is_stmt 1 view .LVU256
 494:quantum/rgblight.c ****         if (write_to_eeprom) {
 1133               		.loc 1 494 29 is_stmt 0 view .LVU257
 1134 0062 0093 0000 		sts rgblight_config+3,r16
 495:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1135               		.loc 1 495 9 is_stmt 1 view .LVU258
 495:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1136               		.loc 1 495 12 is_stmt 0 view .LVU259
 1137 0066 EE20      		tst r14
 1138 0068 01F0      		breq .L52
 496:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 1139               		.loc 1 496 13 is_stmt 1 view .LVU260
 1140 006a 6091 0000 		lds r22,rgblight_config
 1141 006e 7091 0000 		lds r23,rgblight_config+1
 1142 0072 8091 0000 		lds r24,rgblight_config+2
 1143 0076 9091 0000 		lds r25,rgblight_config+3
 1144 007a 0E94 0000 		call eeconfig_update_rgblight
 1145               	.LVL59:
 497:quantum/rgblight.c ****         } else {
 1146               		.loc 1 497 124 view .LVU261
 499:quantum/rgblight.c ****         }
 1147               		.loc 1 499 126 view .LVU262
 1148               	.L52:
 1149               	/* epilogue start */
 502:quantum/rgblight.c **** 
 1150               		.loc 1 502 1 is_stmt 0 view .LVU263
 1151 007e 0F90      		pop __tmp_reg__
 1152 0080 0F90      		pop __tmp_reg__
 1153 0082 0F90      		pop __tmp_reg__
 1154 0084 DF91      		pop r29
 1155 0086 CF91      		pop r28
 1156 0088 1F91      		pop r17
 1157               	.LVL60:
 502:quantum/rgblight.c **** 
 1158               		.loc 1 502 1 view .LVU264
 1159 008a 0F91      		pop r16
 1160               	.LVL61:
 502:quantum/rgblight.c **** 
 1161               		.loc 1 502 1 view .LVU265
 1162 008c FF90      		pop r15
 1163               	.LVL62:
 502:quantum/rgblight.c **** 
 1164               		.loc 1 502 1 view .LVU266
 1165 008e EF90      		pop r14
 1166               	.LVL63:
 502:quantum/rgblight.c **** 
 1167               		.loc 1 502 1 view .LVU267
 1168 0090 DF90      		pop r13
 1169 0092 CF90      		pop r12
 1170 0094 BF90      		pop r11
 1171 0096 AF90      		pop r10
 1172 0098 0895      		ret
 1173               	.LVL64:
 1174               	.L55:
 442:quantum/rgblight.c ****             }
 1175               		.loc 1 442 13 is_stmt 1 view .LVU268
 445:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1176               		.loc 1 445 18 view .LVU269
 445:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1177               		.loc 1 445 21 is_stmt 0 view .LVU270
 1178 009a 8230      		cpi r24,lo8(2)
 1179 009c 01F4      		brne .L57
 447:quantum/rgblight.c ****             }
 1180               		.loc 1 447 17 is_stmt 1 view .LVU271
 447:quantum/rgblight.c ****             }
 1181               		.loc 1 447 21 is_stmt 0 view .LVU272
 1182 009e 0091 0000 		lds r16,rgblight_config+3
 1183               	.LVL65:
 447:quantum/rgblight.c ****             }
 1184               		.loc 1 447 21 view .LVU273
 1185 00a2 00C0      		rjmp .L56
 1186               	.L57:
 451:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1187               		.loc 1 451 18 is_stmt 1 view .LVU274
 451:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1188               		.loc 1 451 21 is_stmt 0 view .LVU275
 1189 00a4 8630      		cpi r24,lo8(6)
 1190 00a6 01F4      		brne .L58
 1191               	.L59:
 453:quantum/rgblight.c ****             }
 1192               		.loc 1 453 17 is_stmt 1 view .LVU276
 453:quantum/rgblight.c ****             }
 1193               		.loc 1 453 21 is_stmt 0 view .LVU277
 1194 00a8 1091 0000 		lds r17,rgblight_config+1
 1195               	.LVL66:
 453:quantum/rgblight.c ****             }
 1196               		.loc 1 453 21 view .LVU278
 1197 00ac 00C0      		rjmp .L56
 1198               	.L58:
 457:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1199               		.loc 1 457 18 is_stmt 1 view .LVU279
 457:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1200               		.loc 1 457 21 is_stmt 0 view .LVU280
 1201 00ae 8930      		cpi r24,lo8(9)
 1202 00b0 01F0      		breq .L59
 463:quantum/rgblight.c ****                 // static gradient
 1203               		.loc 1 463 18 is_stmt 1 view .LVU281
 463:quantum/rgblight.c ****                 // static gradient
 1204               		.loc 1 463 21 is_stmt 0 view .LVU282
 1205 00b2 8031      		cpi r24,lo8(16)
 1206 00b4 01F4      		brne .L56
 1207               	.LBB44:
 465:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1208               		.loc 1 465 17 is_stmt 1 view .LVU283
 465:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1209               		.loc 1 465 25 is_stmt 0 view .LVU284
 1210 00b6 E051      		subi r30,lo8(-(-16))
 1211               	.LVL67:
 466:quantum/rgblight.c **** #    ifdef __AVR__
 1212               		.loc 1 466 17 is_stmt 1 view .LVU285
 466:quantum/rgblight.c **** #    ifdef __AVR__
 1213               		.loc 1 466 49 is_stmt 0 view .LVU286
 1214 00b8 8E2F      		mov r24,r30
 1215 00ba 8170      		andi r24,lo8(1)
 1216 00bc D82E      		mov r13,r24
 1217               	.LVL68:
 469:quantum/rgblight.c **** #    else
 1218               		.loc 1 469 17 is_stmt 1 view .LVU287
 1219               	.LBB45:
 469:quantum/rgblight.c **** #    else
 1220               		.loc 1 469 33 view .LVU288
 1221 00be E695      		lsr r30
 1222               	.LVL69:
 469:quantum/rgblight.c **** #    else
 1223               		.loc 1 469 33 is_stmt 0 view .LVU289
 1224 00c0 F0E0      		ldi r31,0
 1225 00c2 E050      		subi r30,lo8(-(RGBLED_GRADIENT_RANGES))
 1226 00c4 F040      		sbci r31,hi8(-(RGBLED_GRADIENT_RANGES))
 1227               	.LVL70:
 469:quantum/rgblight.c **** #    else
 1228               		.loc 1 469 33 is_stmt 1 view .LVU290
 469:quantum/rgblight.c **** #    else
 1229               		.loc 1 469 33 view .LVU291
 1230               	/* #APP */
 1231               	 ;  469 "quantum/rgblight.c" 1
 1232 00c6 A590      		lpm r10, Z+
 1233 00c8 B490      		lpm r11, Z
 1234               		
 1235               	 ;  0 "" 2
 1236               	.LVL71:
 469:quantum/rgblight.c **** #    else
 1237               		.loc 1 469 33 view .LVU292
 469:quantum/rgblight.c **** #    else
 1238               		.loc 1 469 33 is_stmt 0 view .LVU293
 1239               	/* #NOAPP */
 1240               	.LBE45:
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1241               		.loc 1 473 17 is_stmt 1 view .LVU294
 1242               	.LBB46:
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1243               		.loc 1 473 22 view .LVU295
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1244               		.loc 1 473 30 is_stmt 0 view .LVU296
 1245 00ca C12C      		mov r12,__zero_reg__
 1246               	.LBB47:
 474:quantum/rgblight.c ****                     if (direction) {
 1247               		.loc 1 474 49 view .LVU297
 1248 00cc BB24      		clr r11
 1249               	.LVL72:
 1250               	.L60:
 474:quantum/rgblight.c ****                     if (direction) {
 1251               		.loc 1 474 49 view .LVU298
 1252               	.LBE47:
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1253               		.loc 1 473 39 discriminator 1 view .LVU299
 1254 00ce 6091 0000 		lds r22,effect_num_leds
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1255               		.loc 1 473 17 discriminator 1 view .LVU300
 1256 00d2 C616      		cp r12,r22
 1257 00d4 00F0      		brlo .L63
 1258               	.LBE46:
 483:quantum/rgblight.c ****             }
 1259               		.loc 1 483 17 is_stmt 1 view .LVU301
 1260 00d6 0E94 0000 		call rgblight_set
 1261               	.LVL73:
 1262 00da 00C0      		rjmp .L56
 1263               	.L63:
 1264               	.LBB54:
 1265               	.LBB52:
 474:quantum/rgblight.c ****                     if (direction) {
 1266               		.loc 1 474 21 view .LVU302
 474:quantum/rgblight.c ****                     if (direction) {
 1267               		.loc 1 474 37 is_stmt 0 view .LVU303
 1268 00dc 2C2D      		mov r18,r12
 1269 00de 30E0      		ldi r19,0
 474:quantum/rgblight.c ****                     if (direction) {
 1270               		.loc 1 474 49 view .LVU304
 1271 00e0 A29E      		mul r10,r18
 1272 00e2 C001      		movw r24,r0
 1273 00e4 A39E      		mul r10,r19
 1274 00e6 900D      		add r25,r0
 1275 00e8 B29E      		mul r11,r18
 1276 00ea 900D      		add r25,r0
 1277 00ec 1124      		clr r1
 474:quantum/rgblight.c ****                     if (direction) {
 1278               		.loc 1 474 68 view .LVU305
 1279 00ee 70E0      		ldi r23,0
 1280 00f0 0E94 0000 		call __udivmodhi4
 1281               	.LVL74:
 475:quantum/rgblight.c ****                         _hue = hue + _hue;
 1282               		.loc 1 475 21 is_stmt 1 view .LVU306
 476:quantum/rgblight.c ****                     } else {
 1283               		.loc 1 476 30 is_stmt 0 view .LVU307
 1284 00f4 812F      		mov r24,r17
 475:quantum/rgblight.c ****                         _hue = hue + _hue;
 1285               		.loc 1 475 24 view .LVU308
 1286 00f6 D110      		cpse r13,__zero_reg__
 1287 00f8 00C0      		rjmp .L61
 476:quantum/rgblight.c ****                     } else {
 1288               		.loc 1 476 25 is_stmt 1 view .LVU309
 476:quantum/rgblight.c ****                     } else {
 1289               		.loc 1 476 30 is_stmt 0 view .LVU310
 1290 00fa 860F      		add r24,r22
 1291               	.LVL75:
 1292               	.L62:
 480:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 1293               		.loc 1 480 98 is_stmt 1 discriminator 2 view .LVU311
 481:quantum/rgblight.c ****                 }
 1294               		.loc 1 481 21 discriminator 2 view .LVU312
 1295               	.LBB48:
 1296               	.LBI48:
 125:quantum/rgblight.c **** 
 1297               		.loc 1 125 6 discriminator 2 view .LVU313
 1298               	.LBB49:
 125:quantum/rgblight.c **** 
 1299               		.loc 1 125 70 discriminator 2 view .LVU314
 1300               	.LBE49:
 1301               	.LBE48:
 481:quantum/rgblight.c ****                 }
 1302               		.loc 1 481 63 is_stmt 0 discriminator 2 view .LVU315
 1303 00fc 4091 0000 		lds r20,effect_start_pos
 1304 0100 420F      		add r20,r18
 1305 0102 532F      		mov r21,r19
 1306 0104 511D      		adc r21,__zero_reg__
 481:quantum/rgblight.c ****                 }
 1307               		.loc 1 481 21 discriminator 2 view .LVU316
 1308 0106 9A01      		movw r18,r20
 1309 0108 220F      		lsl r18
 1310 010a 331F      		rol r19
 1311 010c 240F      		add r18,r20
 1312 010e 351F      		adc r19,r21
 1313 0110 2050      		subi r18,lo8(-(led))
 1314 0112 3040      		sbci r19,hi8(-(led))
 1315               	.LBB51:
 1316               	.LBB50:
 125:quantum/rgblight.c **** 
 1317               		.loc 1 125 70 discriminator 2 view .LVU317
 1318 0114 402F      		mov r20,r16
 1319 0116 6F2D      		mov r22,r15
 1320 0118 0E94 0000 		call sethsv_raw
 1321               	.LVL76:
 125:quantum/rgblight.c **** 
 1322               		.loc 1 125 70 discriminator 2 view .LVU318
 1323               	.LBE50:
 1324               	.LBE51:
 1325               	.LBE52:
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1326               		.loc 1 473 59 discriminator 2 view .LVU319
 1327 011c C394      		inc r12
 1328               	.LVL77:
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1329               		.loc 1 473 59 discriminator 2 view .LVU320
 1330 011e 00C0      		rjmp .L60
 1331               	.LVL78:
 1332               	.L61:
 1333               	.LBB53:
 478:quantum/rgblight.c ****                     }
 1334               		.loc 1 478 25 is_stmt 1 view .LVU321
 478:quantum/rgblight.c ****                     }
 1335               		.loc 1 478 30 is_stmt 0 view .LVU322
 1336 0120 861B      		sub r24,r22
 1337               	.LVL79:
 478:quantum/rgblight.c ****                     }
 1338               		.loc 1 478 30 view .LVU323
 1339 0122 00C0      		rjmp .L62
 1340               	.LBE53:
 1341               	.LBE54:
 1342               	.LBE44:
 1343               		.cfi_endproc
 1344               	.LFE135:
 1346               		.section	.text.rgblight_increase_hue_helper,"ax",@progbits
 1347               	.global	rgblight_increase_hue_helper
 1349               	rgblight_increase_hue_helper:
 1350               	.LVL80:
 1351               	.LFB114:
 376:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 1352               		.loc 1 376 57 is_stmt 1 view -0
 1353               		.cfi_startproc
 1354               	/* prologue: function */
 1355               	/* frame size = 0 */
 1356               	/* stack size = 0 */
 1357               	.L__stack_usage = 0
 377:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1358               		.loc 1 377 5 view .LVU325
 378:quantum/rgblight.c **** }
 1359               		.loc 1 378 5 view .LVU326
 1360 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1361 0002 F0E0      		ldi r31,hi8(rgblight_config)
 377:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1362               		.loc 1 377 13 is_stmt 0 view .LVU327
 1363 0004 9181      		ldd r25,Z+1
 378:quantum/rgblight.c **** }
 1364               		.loc 1 378 5 view .LVU328
 1365 0006 282F      		mov r18,r24
 1366 0008 4381      		ldd r20,Z+3
 1367 000a 6281      		ldd r22,Z+2
 1368 000c 88E0      		ldi r24,lo8(8)
 1369               	.LVL81:
 378:quantum/rgblight.c **** }
 1370               		.loc 1 378 5 view .LVU329
 1371 000e 890F      		add r24,r25
 1372               	.LVL82:
 378:quantum/rgblight.c **** }
 1373               		.loc 1 378 5 view .LVU330
 1374 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1375               	.LVL83:
 378:quantum/rgblight.c **** }
 1376               		.loc 1 378 5 view .LVU331
 1377               		.cfi_endproc
 1378               	.LFE114:
 1380               		.section	.text.rgblight_increase_hue_noeeprom,"ax",@progbits
 1381               	.global	rgblight_increase_hue_noeeprom
 1383               	rgblight_increase_hue_noeeprom:
 1384               	.LFB115:
 380:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1385               		.loc 1 380 43 is_stmt 1 view -0
 1386               		.cfi_startproc
 1387               	/* prologue: function */
 1388               	/* frame size = 0 */
 1389               	/* stack size = 0 */
 1390               	.L__stack_usage = 0
 380:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1391               		.loc 1 380 45 view .LVU333
 1392 0000 80E0      		ldi r24,0
 1393 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1394               	.LVL84:
 1395               		.cfi_endproc
 1396               	.LFE115:
 1398               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1399               	.global	rgblight_increase_hue
 1401               	rgblight_increase_hue:
 1402               	.LFB116:
 381:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1403               		.loc 1 381 34 view -0
 1404               		.cfi_startproc
 1405               	/* prologue: function */
 1406               	/* frame size = 0 */
 1407               	/* stack size = 0 */
 1408               	.L__stack_usage = 0
 381:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1409               		.loc 1 381 36 view .LVU335
 1410 0000 81E0      		ldi r24,lo8(1)
 1411 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1412               	.LVL85:
 1413               		.cfi_endproc
 1414               	.LFE116:
 1416               		.section	.text.rgblight_decrease_hue_helper,"ax",@progbits
 1417               	.global	rgblight_decrease_hue_helper
 1419               	rgblight_decrease_hue_helper:
 1420               	.LVL86:
 1421               	.LFB117:
 382:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 1422               		.loc 1 382 57 view -0
 1423               		.cfi_startproc
 1424               	/* prologue: function */
 1425               	/* frame size = 0 */
 1426               	/* stack size = 0 */
 1427               	.L__stack_usage = 0
 383:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1428               		.loc 1 383 5 view .LVU337
 384:quantum/rgblight.c **** }
 1429               		.loc 1 384 5 view .LVU338
 1430 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1431 0002 F0E0      		ldi r31,hi8(rgblight_config)
 383:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1432               		.loc 1 383 13 is_stmt 0 view .LVU339
 1433 0004 9181      		ldd r25,Z+1
 384:quantum/rgblight.c **** }
 1434               		.loc 1 384 5 view .LVU340
 1435 0006 282F      		mov r18,r24
 1436 0008 4381      		ldd r20,Z+3
 1437 000a 6281      		ldd r22,Z+2
 1438 000c 88EF      		ldi r24,lo8(-8)
 1439               	.LVL87:
 384:quantum/rgblight.c **** }
 1440               		.loc 1 384 5 view .LVU341
 1441 000e 890F      		add r24,r25
 1442               	.LVL88:
 384:quantum/rgblight.c **** }
 1443               		.loc 1 384 5 view .LVU342
 1444 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1445               	.LVL89:
 384:quantum/rgblight.c **** }
 1446               		.loc 1 384 5 view .LVU343
 1447               		.cfi_endproc
 1448               	.LFE117:
 1450               		.section	.text.rgblight_decrease_hue_noeeprom,"ax",@progbits
 1451               	.global	rgblight_decrease_hue_noeeprom
 1453               	rgblight_decrease_hue_noeeprom:
 1454               	.LFB118:
 386:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1455               		.loc 1 386 43 is_stmt 1 view -0
 1456               		.cfi_startproc
 1457               	/* prologue: function */
 1458               	/* frame size = 0 */
 1459               	/* stack size = 0 */
 1460               	.L__stack_usage = 0
 386:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1461               		.loc 1 386 45 view .LVU345
 1462 0000 80E0      		ldi r24,0
 1463 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1464               	.LVL90:
 1465               		.cfi_endproc
 1466               	.LFE118:
 1468               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1469               	.global	rgblight_decrease_hue
 1471               	rgblight_decrease_hue:
 1472               	.LFB119:
 387:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1473               		.loc 1 387 34 view -0
 1474               		.cfi_startproc
 1475               	/* prologue: function */
 1476               	/* frame size = 0 */
 1477               	/* stack size = 0 */
 1478               	.L__stack_usage = 0
 387:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1479               		.loc 1 387 36 view .LVU347
 1480 0000 81E0      		ldi r24,lo8(1)
 1481 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1482               	.LVL91:
 1483               		.cfi_endproc
 1484               	.LFE119:
 1486               		.section	.text.rgblight_increase_sat_helper,"ax",@progbits
 1487               	.global	rgblight_increase_sat_helper
 1489               	rgblight_increase_sat_helper:
 1490               	.LVL92:
 1491               	.LFB120:
 388:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1492               		.loc 1 388 57 view -0
 1493               		.cfi_startproc
 1494               	/* prologue: function */
 1495               	/* frame size = 0 */
 1496               	/* stack size = 0 */
 1497               	.L__stack_usage = 0
 389:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1498               		.loc 1 389 5 view .LVU349
 1499               	.LBB55:
 1500               	.LBI55:
 1501               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
 1502               		.loc 2 23 34 view .LVU350
 1503               	.LBB56:
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
 1504               		.loc 2 30 5 view .LVU351
 1505               	.LBE56:
 1506               	.LBE55:
 389:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1507               		.loc 1 389 19 is_stmt 0 view .LVU352
 1508 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1509 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1510               	.LBB58:
 1511               	.LBB57:
 1512               		.loc 2 30 5 view .LVU353
 1513 0004 6281      		ldd r22,Z+2
 1514 0006 28E0      		ldi r18,lo8(8)
 1515               	/* #APP */
 1516               	 ;  30 "./lib/lib8tion/math8.h" 1
 1517 0008 620F      		add r22, r18    
 1518 000a 00F4      		brcc L_1182     
 1519 000c 6FEF      		ldi r22, 0xFF  
 1520               		L_1182: 
 1521               	 ;  0 "" 2
 1522               	.LVL93:
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
 1523               		.loc 2 43 5 is_stmt 1 view .LVU354
 1524               		.loc 2 43 5 is_stmt 0 view .LVU355
 1525               	/* #NOAPP */
 1526               	.LBE57:
 1527               	.LBE58:
 390:quantum/rgblight.c **** }
 1528               		.loc 1 390 5 is_stmt 1 view .LVU356
 1529 000e 282F      		mov r18,r24
 1530 0010 4381      		ldd r20,Z+3
 1531 0012 8181      		ldd r24,Z+1
 1532               	.LVL94:
 390:quantum/rgblight.c **** }
 1533               		.loc 1 390 5 is_stmt 0 view .LVU357
 1534 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1535               	.LVL95:
 390:quantum/rgblight.c **** }
 1536               		.loc 1 390 5 view .LVU358
 1537               		.cfi_endproc
 1538               	.LFE120:
 1540               		.section	.text.rgblight_increase_sat_noeeprom,"ax",@progbits
 1541               	.global	rgblight_increase_sat_noeeprom
 1543               	rgblight_increase_sat_noeeprom:
 1544               	.LFB121:
 392:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1545               		.loc 1 392 43 is_stmt 1 view -0
 1546               		.cfi_startproc
 1547               	/* prologue: function */
 1548               	/* frame size = 0 */
 1549               	/* stack size = 0 */
 1550               	.L__stack_usage = 0
 392:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1551               		.loc 1 392 45 view .LVU360
 1552 0000 80E0      		ldi r24,0
 1553 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1554               	.LVL96:
 1555               		.cfi_endproc
 1556               	.LFE121:
 1558               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1559               	.global	rgblight_increase_sat
 1561               	rgblight_increase_sat:
 1562               	.LFB122:
 393:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1563               		.loc 1 393 34 view -0
 1564               		.cfi_startproc
 1565               	/* prologue: function */
 1566               	/* frame size = 0 */
 1567               	/* stack size = 0 */
 1568               	.L__stack_usage = 0
 393:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1569               		.loc 1 393 36 view .LVU362
 1570 0000 81E0      		ldi r24,lo8(1)
 1571 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1572               	.LVL97:
 1573               		.cfi_endproc
 1574               	.LFE122:
 1576               		.section	.text.rgblight_decrease_sat_helper,"ax",@progbits
 1577               	.global	rgblight_decrease_sat_helper
 1579               	rgblight_decrease_sat_helper:
 1580               	.LVL98:
 1581               	.LFB123:
 394:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1582               		.loc 1 394 57 view -0
 1583               		.cfi_startproc
 1584               	/* prologue: function */
 1585               	/* frame size = 0 */
 1586               	/* stack size = 0 */
 1587               	.L__stack_usage = 0
 395:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1588               		.loc 1 395 5 view .LVU364
 1589               	.LBB59:
 1590               	.LBI59:
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
 1591               		.loc 2 88 34 view .LVU365
 1592               	.LBB60:
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
 1593               		.loc 2 96 5 view .LVU366
 1594               	.LBE60:
 1595               	.LBE59:
 395:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1596               		.loc 1 395 19 is_stmt 0 view .LVU367
 1597 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1598 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1599               	.LBB62:
 1600               	.LBB61:
 1601               		.loc 2 96 5 view .LVU368
 1602 0004 6281      		ldd r22,Z+2
 1603 0006 28E0      		ldi r18,lo8(8)
 1604               	/* #APP */
 1605               	 ;  96 "./lib/lib8tion/math8.h" 1
 1606 0008 621B      		sub r22, r18    
 1607 000a 00F4      		brcc L_1238     
 1608 000c 60E0      		ldi r22, 0x00  
 1609               		L_1238: 
 1610               	 ;  0 "" 2
 1611               	.LVL99:
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 1612               		.loc 2 110 5 is_stmt 1 view .LVU369
 1613               		.loc 2 110 5 is_stmt 0 view .LVU370
 1614               	/* #NOAPP */
 1615               	.LBE61:
 1616               	.LBE62:
 396:quantum/rgblight.c **** }
 1617               		.loc 1 396 5 is_stmt 1 view .LVU371
 1618 000e 282F      		mov r18,r24
 1619 0010 4381      		ldd r20,Z+3
 1620 0012 8181      		ldd r24,Z+1
 1621               	.LVL100:
 396:quantum/rgblight.c **** }
 1622               		.loc 1 396 5 is_stmt 0 view .LVU372
 1623 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1624               	.LVL101:
 396:quantum/rgblight.c **** }
 1625               		.loc 1 396 5 view .LVU373
 1626               		.cfi_endproc
 1627               	.LFE123:
 1629               		.section	.text.rgblight_decrease_sat_noeeprom,"ax",@progbits
 1630               	.global	rgblight_decrease_sat_noeeprom
 1632               	rgblight_decrease_sat_noeeprom:
 1633               	.LFB124:
 398:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1634               		.loc 1 398 43 is_stmt 1 view -0
 1635               		.cfi_startproc
 1636               	/* prologue: function */
 1637               	/* frame size = 0 */
 1638               	/* stack size = 0 */
 1639               	.L__stack_usage = 0
 398:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1640               		.loc 1 398 45 view .LVU375
 1641 0000 80E0      		ldi r24,0
 1642 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1643               	.LVL102:
 1644               		.cfi_endproc
 1645               	.LFE124:
 1647               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1648               	.global	rgblight_decrease_sat
 1650               	rgblight_decrease_sat:
 1651               	.LFB125:
 399:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1652               		.loc 1 399 34 view -0
 1653               		.cfi_startproc
 1654               	/* prologue: function */
 1655               	/* frame size = 0 */
 1656               	/* stack size = 0 */
 1657               	.L__stack_usage = 0
 399:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1658               		.loc 1 399 36 view .LVU377
 1659 0000 81E0      		ldi r24,lo8(1)
 1660 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1661               	.LVL103:
 1662               		.cfi_endproc
 1663               	.LFE125:
 1665               		.section	.text.rgblight_increase_val_helper,"ax",@progbits
 1666               	.global	rgblight_increase_val_helper
 1668               	rgblight_increase_val_helper:
 1669               	.LVL104:
 1670               	.LFB126:
 400:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1671               		.loc 1 400 57 view -0
 1672               		.cfi_startproc
 1673               	/* prologue: function */
 1674               	/* frame size = 0 */
 1675               	/* stack size = 0 */
 1676               	.L__stack_usage = 0
 401:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1677               		.loc 1 401 5 view .LVU379
 1678               	.LBB63:
 1679               	.LBI63:
  23:./lib/lib8tion/math8.h **** {
 1680               		.loc 2 23 34 view .LVU380
 1681               	.LBB64:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 1682               		.loc 2 30 5 view .LVU381
 1683               	.LBE64:
 1684               	.LBE63:
 401:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1685               		.loc 1 401 19 is_stmt 0 view .LVU382
 1686 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1687 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1688               	.LBB66:
 1689               	.LBB65:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 1690               		.loc 2 30 5 view .LVU383
 1691 0004 4381      		ldd r20,Z+3
 1692 0006 28E0      		ldi r18,lo8(8)
 1693               	/* #APP */
 1694               	 ;  30 "./lib/lib8tion/math8.h" 1
 1695 0008 420F      		add r20, r18    
 1696 000a 00F4      		brcc L_1294     
 1697 000c 4FEF      		ldi r20, 0xFF  
 1698               		L_1294: 
 1699               	 ;  0 "" 2
 1700               	.LVL105:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 1701               		.loc 2 43 5 is_stmt 1 view .LVU384
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 1702               		.loc 2 43 5 is_stmt 0 view .LVU385
 1703               	/* #NOAPP */
 1704               	.LBE65:
 1705               	.LBE66:
 402:quantum/rgblight.c **** }
 1706               		.loc 1 402 5 is_stmt 1 view .LVU386
 1707 000e 282F      		mov r18,r24
 1708 0010 6281      		ldd r22,Z+2
 1709 0012 8181      		ldd r24,Z+1
 1710               	.LVL106:
 402:quantum/rgblight.c **** }
 1711               		.loc 1 402 5 is_stmt 0 view .LVU387
 1712 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1713               	.LVL107:
 402:quantum/rgblight.c **** }
 1714               		.loc 1 402 5 view .LVU388
 1715               		.cfi_endproc
 1716               	.LFE126:
 1718               		.section	.text.rgblight_increase_val_noeeprom,"ax",@progbits
 1719               	.global	rgblight_increase_val_noeeprom
 1721               	rgblight_increase_val_noeeprom:
 1722               	.LFB127:
 404:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 1723               		.loc 1 404 43 is_stmt 1 view -0
 1724               		.cfi_startproc
 1725               	/* prologue: function */
 1726               	/* frame size = 0 */
 1727               	/* stack size = 0 */
 1728               	.L__stack_usage = 0
 404:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 1729               		.loc 1 404 45 view .LVU390
 1730 0000 80E0      		ldi r24,0
 1731 0002 0C94 0000 		jmp rgblight_increase_val_helper
 1732               	.LVL108:
 1733               		.cfi_endproc
 1734               	.LFE127:
 1736               		.section	.text.rgblight_increase_val,"ax",@progbits
 1737               	.global	rgblight_increase_val
 1739               	rgblight_increase_val:
 1740               	.LFB128:
 405:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 1741               		.loc 1 405 34 view -0
 1742               		.cfi_startproc
 1743               	/* prologue: function */
 1744               	/* frame size = 0 */
 1745               	/* stack size = 0 */
 1746               	.L__stack_usage = 0
 405:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 1747               		.loc 1 405 36 view .LVU392
 1748 0000 81E0      		ldi r24,lo8(1)
 1749 0002 0C94 0000 		jmp rgblight_increase_val_helper
 1750               	.LVL109:
 1751               		.cfi_endproc
 1752               	.LFE128:
 1754               		.section	.text.rgblight_decrease_val_helper,"ax",@progbits
 1755               	.global	rgblight_decrease_val_helper
 1757               	rgblight_decrease_val_helper:
 1758               	.LVL110:
 1759               	.LFB129:
 406:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1760               		.loc 1 406 57 view -0
 1761               		.cfi_startproc
 1762               	/* prologue: function */
 1763               	/* frame size = 0 */
 1764               	/* stack size = 0 */
 1765               	.L__stack_usage = 0
 407:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1766               		.loc 1 407 5 view .LVU394
 1767               	.LBB67:
 1768               	.LBI67:
  88:./lib/lib8tion/math8.h **** {
 1769               		.loc 2 88 34 view .LVU395
 1770               	.LBB68:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 1771               		.loc 2 96 5 view .LVU396
 1772               	.LBE68:
 1773               	.LBE67:
 407:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1774               		.loc 1 407 19 is_stmt 0 view .LVU397
 1775 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1776 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1777               	.LBB70:
 1778               	.LBB69:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 1779               		.loc 2 96 5 view .LVU398
 1780 0004 4381      		ldd r20,Z+3
 1781 0006 28E0      		ldi r18,lo8(8)
 1782               	/* #APP */
 1783               	 ;  96 "./lib/lib8tion/math8.h" 1
 1784 0008 421B      		sub r20, r18    
 1785 000a 00F4      		brcc L_1350     
 1786 000c 40E0      		ldi r20, 0x00  
 1787               		L_1350: 
 1788               	 ;  0 "" 2
 1789               	.LVL111:
 1790               		.loc 2 110 5 is_stmt 1 view .LVU399
 1791               		.loc 2 110 5 is_stmt 0 view .LVU400
 1792               	/* #NOAPP */
 1793               	.LBE69:
 1794               	.LBE70:
 408:quantum/rgblight.c **** }
 1795               		.loc 1 408 5 is_stmt 1 view .LVU401
 1796 000e 282F      		mov r18,r24
 1797 0010 6281      		ldd r22,Z+2
 1798 0012 8181      		ldd r24,Z+1
 1799               	.LVL112:
 408:quantum/rgblight.c **** }
 1800               		.loc 1 408 5 is_stmt 0 view .LVU402
 1801 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1802               	.LVL113:
 408:quantum/rgblight.c **** }
 1803               		.loc 1 408 5 view .LVU403
 1804               		.cfi_endproc
 1805               	.LFE129:
 1807               		.section	.text.rgblight_decrease_val_noeeprom,"ax",@progbits
 1808               	.global	rgblight_decrease_val_noeeprom
 1810               	rgblight_decrease_val_noeeprom:
 1811               	.LFB130:
 410:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 1812               		.loc 1 410 43 is_stmt 1 view -0
 1813               		.cfi_startproc
 1814               	/* prologue: function */
 1815               	/* frame size = 0 */
 1816               	/* stack size = 0 */
 1817               	.L__stack_usage = 0
 410:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 1818               		.loc 1 410 45 view .LVU405
 1819 0000 80E0      		ldi r24,0
 1820 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 1821               	.LVL114:
 1822               		.cfi_endproc
 1823               	.LFE130:
 1825               		.section	.text.rgblight_decrease_val,"ax",@progbits
 1826               	.global	rgblight_decrease_val
 1828               	rgblight_decrease_val:
 1829               	.LFB131:
 411:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 1830               		.loc 1 411 34 view -0
 1831               		.cfi_startproc
 1832               	/* prologue: function */
 1833               	/* frame size = 0 */
 1834               	/* stack size = 0 */
 1835               	.L__stack_usage = 0
 411:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 1836               		.loc 1 411 36 view .LVU407
 1837 0000 81E0      		ldi r24,lo8(1)
 1838 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 1839               	.LVL115:
 1840               		.cfi_endproc
 1841               	.LFE131:
 1843               		.section	.text.rgblight_sethsv,"ax",@progbits
 1844               	.global	rgblight_sethsv
 1846               	rgblight_sethsv:
 1847               	.LVL116:
 1848               	.LFB136:
 504:quantum/rgblight.c **** 
 1849               		.loc 1 504 61 view -0
 1850               		.cfi_startproc
 1851               	/* prologue: function */
 1852               	/* frame size = 0 */
 1853               	/* stack size = 0 */
 1854               	.L__stack_usage = 0
 504:quantum/rgblight.c **** 
 1855               		.loc 1 504 63 view .LVU409
 1856 0000 21E0      		ldi r18,lo8(1)
 1857 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1858               	.LVL117:
 504:quantum/rgblight.c **** 
 1859               		.loc 1 504 63 is_stmt 0 view .LVU410
 1860               		.cfi_endproc
 1861               	.LFE136:
 1863               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 1864               	.global	rgblight_sethsv_noeeprom
 1866               	rgblight_sethsv_noeeprom:
 1867               	.LVL118:
 1868               	.LFB137:
 506:quantum/rgblight.c **** 
 1869               		.loc 1 506 70 is_stmt 1 view -0
 1870               		.cfi_startproc
 1871               	/* prologue: function */
 1872               	/* frame size = 0 */
 1873               	/* stack size = 0 */
 1874               	.L__stack_usage = 0
 506:quantum/rgblight.c **** 
 1875               		.loc 1 506 72 view .LVU412
 1876 0000 20E0      		ldi r18,0
 1877 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1878               	.LVL119:
 506:quantum/rgblight.c **** 
 1879               		.loc 1 506 72 is_stmt 0 view .LVU413
 1880               		.cfi_endproc
 1881               	.LFE137:
 1883               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 1884               	.global	rgblight_setrgb_at
 1886               	rgblight_setrgb_at:
 1887               	.LVL120:
 1888               	.LFB146:
 546:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 1889               		.loc 1 546 73 is_stmt 1 view -0
 1890               		.cfi_startproc
 1891               	/* prologue: function */
 1892               	/* frame size = 0 */
 1893               	/* stack size = 0 */
 1894               	.L__stack_usage = 0
 547:quantum/rgblight.c ****         return;
 1895               		.loc 1 547 5 view .LVU415
 547:quantum/rgblight.c ****         return;
 1896               		.loc 1 547 25 is_stmt 0 view .LVU416
 1897 0000 9091 0000 		lds r25,rgblight_config
 547:quantum/rgblight.c ****         return;
 1898               		.loc 1 547 8 view .LVU417
 1899 0004 90FF      		sbrs r25,0
 1900 0006 00C0      		rjmp .L91
 547:quantum/rgblight.c ****         return;
 1901               		.loc 1 547 33 discriminator 1 view .LVU418
 1902 0008 2031      		cpi r18,lo8(16)
 1903 000a 00F4      		brsh .L91
 551:quantum/rgblight.c ****     led[index].g = g;
 1904               		.loc 1 551 5 is_stmt 1 view .LVU419
 551:quantum/rgblight.c ****     led[index].g = g;
 1905               		.loc 1 551 15 is_stmt 0 view .LVU420
 1906 000c 30E0      		ldi r19,0
 551:quantum/rgblight.c ****     led[index].g = g;
 1907               		.loc 1 551 18 view .LVU421
 1908 000e F901      		movw r30,r18
 1909 0010 EE0F      		lsl r30
 1910 0012 FF1F      		rol r31
 1911 0014 E20F      		add r30,r18
 1912 0016 F31F      		adc r31,r19
 1913 0018 E050      		subi r30,lo8(-(led))
 1914 001a F040      		sbci r31,hi8(-(led))
 1915 001c 8183      		std Z+1,r24
 552:quantum/rgblight.c ****     led[index].b = b;
 1916               		.loc 1 552 5 is_stmt 1 view .LVU422
 552:quantum/rgblight.c ****     led[index].b = b;
 1917               		.loc 1 552 18 is_stmt 0 view .LVU423
 1918 001e 6083      		st Z,r22
 553:quantum/rgblight.c **** #ifdef RGBW
 1919               		.loc 1 553 5 is_stmt 1 view .LVU424
 553:quantum/rgblight.c **** #ifdef RGBW
 1920               		.loc 1 553 18 is_stmt 0 view .LVU425
 1921 0020 4283      		std Z+2,r20
 557:quantum/rgblight.c **** }
 1922               		.loc 1 557 5 is_stmt 1 view .LVU426
 1923 0022 0C94 0000 		jmp rgblight_set
 1924               	.LVL121:
 1925               	.L91:
 1926               	/* epilogue start */
 558:quantum/rgblight.c **** 
 1927               		.loc 1 558 1 is_stmt 0 view .LVU427
 1928 0026 0895      		ret
 1929               		.cfi_endproc
 1930               	.LFE146:
 1932               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 1933               	.global	rgblight_sethsv_at
 1935               	rgblight_sethsv_at:
 1936               	.LVL122:
 1937               	.LFB147:
 560:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 1938               		.loc 1 560 79 is_stmt 1 view -0
 1939               		.cfi_startproc
 560:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 1940               		.loc 1 560 79 is_stmt 0 view .LVU429
 1941 0000 1F93      		push r17
 1942               	.LCFI26:
 1943               		.cfi_def_cfa_offset 3
 1944               		.cfi_offset 17, -2
 1945 0002 CF93      		push r28
 1946               	.LCFI27:
 1947               		.cfi_def_cfa_offset 4
 1948               		.cfi_offset 28, -3
 1949 0004 DF93      		push r29
 1950               	.LCFI28:
 1951               		.cfi_def_cfa_offset 5
 1952               		.cfi_offset 29, -4
 1953 0006 00D0      		rcall .
 1954 0008 0F92      		push __tmp_reg__
 1955               	.LCFI29:
 1956               		.cfi_def_cfa_offset 8
 1957 000a CDB7      		in r28,__SP_L__
 1958 000c DEB7      		in r29,__SP_H__
 1959               	.LCFI30:
 1960               		.cfi_def_cfa_register 28
 1961               	/* prologue: function */
 1962               	/* frame size = 3 */
 1963               	/* stack size = 6 */
 1964               	.L__stack_usage = 6
 1965 000e 122F      		mov r17,r18
 561:quantum/rgblight.c ****         return;
 1966               		.loc 1 561 5 is_stmt 1 view .LVU430
 561:quantum/rgblight.c ****         return;
 1967               		.loc 1 561 25 is_stmt 0 view .LVU431
 1968 0010 9091 0000 		lds r25,rgblight_config
 561:quantum/rgblight.c ****         return;
 1969               		.loc 1 561 8 view .LVU432
 1970 0014 90FF      		sbrs r25,0
 1971 0016 00C0      		rjmp .L96
 565:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 1972               		.loc 1 565 5 is_stmt 1 view .LVU433
 566:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 1973               		.loc 1 566 5 view .LVU434
 1974               	.LVL123:
 1975               	.LBB73:
 1976               	.LBI73:
 125:quantum/rgblight.c **** 
 1977               		.loc 1 125 6 view .LVU435
 1978               	.LBB74:
 125:quantum/rgblight.c **** 
 1979               		.loc 1 125 70 view .LVU436
 1980 0018 9E01      		movw r18,r28
 1981               	.LVL124:
 125:quantum/rgblight.c **** 
 1982               		.loc 1 125 70 is_stmt 0 view .LVU437
 1983 001a 2F5F      		subi r18,-1
 1984 001c 3F4F      		sbci r19,-1
 1985 001e 0E94 0000 		call sethsv_raw
 1986               	.LVL125:
 125:quantum/rgblight.c **** 
 1987               		.loc 1 125 70 view .LVU438
 1988               	.LBE74:
 1989               	.LBE73:
 567:quantum/rgblight.c **** }
 1990               		.loc 1 567 5 is_stmt 1 view .LVU439
 1991 0022 212F      		mov r18,r17
 1992 0024 4B81      		ldd r20,Y+3
 1993 0026 6981      		ldd r22,Y+1
 1994 0028 8A81      		ldd r24,Y+2
 1995 002a 0E94 0000 		call rgblight_setrgb_at
 1996               	.LVL126:
 1997               	.L96:
 1998               	/* epilogue start */
 568:quantum/rgblight.c **** 
 1999               		.loc 1 568 1 is_stmt 0 view .LVU440
 2000 002e 0F90      		pop __tmp_reg__
 2001 0030 0F90      		pop __tmp_reg__
 2002 0032 0F90      		pop __tmp_reg__
 2003 0034 DF91      		pop r29
 2004 0036 CF91      		pop r28
 2005 0038 1F91      		pop r17
 2006               	.LVL127:
 568:quantum/rgblight.c **** 
 2007               		.loc 1 568 1 view .LVU441
 2008 003a 0895      		ret
 2009               		.cfi_endproc
 2010               	.LFE147:
 2012               		.section	.text.rgblight_setrgb_range,"ax",@progbits
 2013               	.global	rgblight_setrgb_range
 2015               	rgblight_setrgb_range:
 2016               	.LVL128:
 2017               	.LFB149:
 582:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2018               		.loc 1 582 89 is_stmt 1 view -0
 2019               		.cfi_startproc
 582:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2020               		.loc 1 582 89 is_stmt 0 view .LVU443
 2021 0000 0F93      		push r16
 2022               	.LCFI31:
 2023               		.cfi_def_cfa_offset 3
 2024               		.cfi_offset 16, -2
 2025               	/* prologue: function */
 2026               	/* frame size = 0 */
 2027               	/* stack size = 1 */
 2028               	.L__stack_usage = 1
 583:quantum/rgblight.c ****         return;
 2029               		.loc 1 583 5 is_stmt 1 view .LVU444
 583:quantum/rgblight.c ****         return;
 2030               		.loc 1 583 25 is_stmt 0 view .LVU445
 2031 0002 9091 0000 		lds r25,rgblight_config
 583:quantum/rgblight.c ****         return;
 2032               		.loc 1 583 8 view .LVU446
 2033 0006 90FF      		sbrs r25,0
 2034 0008 00C0      		rjmp .L99
 583:quantum/rgblight.c ****         return;
 2035               		.loc 1 583 46 discriminator 1 view .LVU447
 2036 000a 2017      		cp r18,r16
 2037 000c 00F4      		brsh .L99
 583:quantum/rgblight.c ****         return;
 2038               		.loc 1 583 62 discriminator 2 view .LVU448
 2039 000e 0131      		cpi r16,lo8(17)
 2040 0010 00F4      		brsh .L99
 2041 0012 93E0      		ldi r25,lo8(3)
 2042 0014 299F      		mul r18,r25
 2043 0016 F001      		movw r30,r0
 2044 0018 1124      		clr __zero_reg__
 2045 001a E050      		subi r30,lo8(-(led))
 2046 001c F040      		sbci r31,hi8(-(led))
 2047               	.LVL129:
 2048               	.L101:
 2049               	.LBB75:
 588:quantum/rgblight.c ****         led[i].g = g;
 2050               		.loc 1 588 9 is_stmt 1 discriminator 3 view .LVU449
 588:quantum/rgblight.c ****         led[i].g = g;
 2051               		.loc 1 588 18 is_stmt 0 discriminator 3 view .LVU450
 2052 001e 8183      		std Z+1,r24
 589:quantum/rgblight.c ****         led[i].b = b;
 2053               		.loc 1 589 9 is_stmt 1 discriminator 3 view .LVU451
 589:quantum/rgblight.c ****         led[i].b = b;
 2054               		.loc 1 589 18 is_stmt 0 discriminator 3 view .LVU452
 2055 0020 6083      		st Z,r22
 590:quantum/rgblight.c **** #ifdef RGBW
 2056               		.loc 1 590 9 is_stmt 1 discriminator 3 view .LVU453
 590:quantum/rgblight.c **** #ifdef RGBW
 2057               		.loc 1 590 18 is_stmt 0 discriminator 3 view .LVU454
 2058 0022 4283      		std Z+2,r20
 587:quantum/rgblight.c ****         led[i].r = r;
 2059               		.loc 1 587 39 discriminator 3 view .LVU455
 2060 0024 2F5F      		subi r18,lo8(-(1))
 2061               	.LVL130:
 587:quantum/rgblight.c ****         led[i].r = r;
 2062               		.loc 1 587 39 discriminator 3 view .LVU456
 2063 0026 3396      		adiw r30,3
 587:quantum/rgblight.c ****         led[i].r = r;
 2064               		.loc 1 587 5 discriminator 3 view .LVU457
 2065 0028 0213      		cpse r16,r18
 2066 002a 00C0      		rjmp .L101
 587:quantum/rgblight.c ****         led[i].r = r;
 2067               		.loc 1 587 5 discriminator 3 view .LVU458
 2068               	.LBE75:
 595:quantum/rgblight.c ****     wait_ms(1);
 2069               		.loc 1 595 5 is_stmt 1 view .LVU459
 2070 002c 0E94 0000 		call rgblight_set
 2071               	.LVL131:
 596:quantum/rgblight.c **** }
 2072               		.loc 1 596 5 view .LVU460
 2073               	.LBB76:
 2074               	.LBI76:
 2075               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** _delay_ms(double __ms)
 2076               		.loc 3 166 1 view .LVU461
 2077               	.LBB77:
 167:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	double __tmp ;
 2078               		.loc 3 168 2 view .LVU462
 169:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 2079               		.loc 3 172 2 view .LVU463
 173:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2080               		.loc 3 173 2 view .LVU464
 174:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2081               		.loc 3 174 2 view .LVU465
 175:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 2082               		.loc 3 184 3 view .LVU466
 185:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2083               		.loc 3 187 2 view .LVU467
 2084 0030 8FE9      		ldi r24,lo8(3999)
 2085 0032 9FE0      		ldi r25,hi8(3999)
 2086 0034 0197      	1:	sbiw r24,1
 2087 0036 01F4      		brne 1b
 2088 0038 00C0      		rjmp .
 2089 003a 0000      		nop
 2090               	.LVL132:
 2091               	.L99:
 2092               	/* epilogue start */
 2093               		.loc 3 187 2 is_stmt 0 view .LVU468
 2094               	.LBE77:
 2095               	.LBE76:
 597:quantum/rgblight.c **** 
 2096               		.loc 1 597 1 view .LVU469
 2097 003c 0F91      		pop r16
 2098               	.LVL133:
 597:quantum/rgblight.c **** 
 2099               		.loc 1 597 1 view .LVU470
 2100 003e 0895      		ret
 2101               		.cfi_endproc
 2102               	.LFE149:
 2104               		.section	.text.rgblight_sethsv_range,"ax",@progbits
 2105               	.global	rgblight_sethsv_range
 2107               	rgblight_sethsv_range:
 2108               	.LVL134:
 2109               	.LFB150:
 599:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2110               		.loc 1 599 95 is_stmt 1 view -0
 2111               		.cfi_startproc
 599:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2112               		.loc 1 599 95 is_stmt 0 view .LVU472
 2113 0000 0F93      		push r16
 2114               	.LCFI32:
 2115               		.cfi_def_cfa_offset 3
 2116               		.cfi_offset 16, -2
 2117 0002 1F93      		push r17
 2118               	.LCFI33:
 2119               		.cfi_def_cfa_offset 4
 2120               		.cfi_offset 17, -3
 2121 0004 CF93      		push r28
 2122               	.LCFI34:
 2123               		.cfi_def_cfa_offset 5
 2124               		.cfi_offset 28, -4
 2125 0006 DF93      		push r29
 2126               	.LCFI35:
 2127               		.cfi_def_cfa_offset 6
 2128               		.cfi_offset 29, -5
 2129 0008 00D0      		rcall .
 2130 000a 0F92      		push __tmp_reg__
 2131               	.LCFI36:
 2132               		.cfi_def_cfa_offset 9
 2133 000c CDB7      		in r28,__SP_L__
 2134 000e DEB7      		in r29,__SP_H__
 2135               	.LCFI37:
 2136               		.cfi_def_cfa_register 28
 2137               	/* prologue: function */
 2138               	/* frame size = 3 */
 2139               	/* stack size = 7 */
 2140               	.L__stack_usage = 7
 2141 0010 122F      		mov r17,r18
 600:quantum/rgblight.c ****         return;
 2142               		.loc 1 600 5 is_stmt 1 view .LVU473
 600:quantum/rgblight.c ****         return;
 2143               		.loc 1 600 25 is_stmt 0 view .LVU474
 2144 0012 9091 0000 		lds r25,rgblight_config
 600:quantum/rgblight.c ****         return;
 2145               		.loc 1 600 8 view .LVU475
 2146 0016 90FF      		sbrs r25,0
 2147 0018 00C0      		rjmp .L106
 604:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2148               		.loc 1 604 5 is_stmt 1 view .LVU476
 605:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2149               		.loc 1 605 5 view .LVU477
 2150               	.LVL135:
 2151               	.LBB80:
 2152               	.LBI80:
 125:quantum/rgblight.c **** 
 2153               		.loc 1 125 6 view .LVU478
 2154               	.LBB81:
 125:quantum/rgblight.c **** 
 2155               		.loc 1 125 70 view .LVU479
 2156 001a 9E01      		movw r18,r28
 2157               	.LVL136:
 125:quantum/rgblight.c **** 
 2158               		.loc 1 125 70 is_stmt 0 view .LVU480
 2159 001c 2F5F      		subi r18,-1
 2160 001e 3F4F      		sbci r19,-1
 2161 0020 0E94 0000 		call sethsv_raw
 2162               	.LVL137:
 125:quantum/rgblight.c **** 
 2163               		.loc 1 125 70 view .LVU481
 2164               	.LBE81:
 2165               	.LBE80:
 606:quantum/rgblight.c **** }
 2166               		.loc 1 606 5 is_stmt 1 view .LVU482
 2167 0024 212F      		mov r18,r17
 2168 0026 4B81      		ldd r20,Y+3
 2169 0028 6981      		ldd r22,Y+1
 2170 002a 8A81      		ldd r24,Y+2
 2171 002c 0E94 0000 		call rgblight_setrgb_range
 2172               	.LVL138:
 2173               	.L106:
 2174               	/* epilogue start */
 607:quantum/rgblight.c **** 
 2175               		.loc 1 607 1 is_stmt 0 view .LVU483
 2176 0030 0F90      		pop __tmp_reg__
 2177 0032 0F90      		pop __tmp_reg__
 2178 0034 0F90      		pop __tmp_reg__
 2179 0036 DF91      		pop r29
 2180 0038 CF91      		pop r28
 2181 003a 1F91      		pop r17
 2182               	.LVL139:
 607:quantum/rgblight.c **** 
 2183               		.loc 1 607 1 view .LVU484
 2184 003c 0F91      		pop r16
 2185               	.LVL140:
 607:quantum/rgblight.c **** 
 2186               		.loc 1 607 1 view .LVU485
 2187 003e 0895      		ret
 2188               		.cfi_endproc
 2189               	.LFE150:
 2191               		.section	.text.rgblight_sethsv_master,"ax",@progbits
 2192               	.global	rgblight_sethsv_master
 2194               	rgblight_sethsv_master:
 2195               	.LVL141:
 2196               	.LFB153:
 614:quantum/rgblight.c **** 
 2197               		.loc 1 614 68 is_stmt 1 view -0
 2198               		.cfi_startproc
 614:quantum/rgblight.c **** 
 2199               		.loc 1 614 68 is_stmt 0 view .LVU487
 2200 0000 0F93      		push r16
 2201               	.LCFI38:
 2202               		.cfi_def_cfa_offset 3
 2203               		.cfi_offset 16, -2
 2204               	/* prologue: function */
 2205               	/* frame size = 0 */
 2206               	/* stack size = 1 */
 2207               	.L__stack_usage = 1
 614:quantum/rgblight.c **** 
 2208               		.loc 1 614 70 is_stmt 1 view .LVU488
 2209 0002 08E0      		ldi r16,lo8(8)
 2210 0004 20E0      		ldi r18,0
 2211 0006 0E94 0000 		call rgblight_sethsv_range
 2212               	.LVL142:
 2213               	/* epilogue start */
 614:quantum/rgblight.c **** 
 2214               		.loc 1 614 1 is_stmt 0 view .LVU489
 2215 000a 0F91      		pop r16
 2216 000c 0895      		ret
 2217               		.cfi_endproc
 2218               	.LFE153:
 2220               		.section	.text.rgblight_sethsv_slave,"ax",@progbits
 2221               	.global	rgblight_sethsv_slave
 2223               	rgblight_sethsv_slave:
 2224               	.LVL143:
 2225               	.LFB154:
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2226               		.loc 1 616 67 is_stmt 1 view -0
 2227               		.cfi_startproc
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2228               		.loc 1 616 67 is_stmt 0 view .LVU491
 2229 0000 0F93      		push r16
 2230               	.LCFI39:
 2231               		.cfi_def_cfa_offset 3
 2232               		.cfi_offset 16, -2
 2233               	/* prologue: function */
 2234               	/* frame size = 0 */
 2235               	/* stack size = 1 */
 2236               	.L__stack_usage = 1
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2237               		.loc 1 616 69 is_stmt 1 view .LVU492
 2238 0002 00E1      		ldi r16,lo8(16)
 2239 0004 28E0      		ldi r18,lo8(8)
 2240 0006 0E94 0000 		call rgblight_sethsv_range
 2241               	.LVL144:
 2242               	/* epilogue start */
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2243               		.loc 1 616 1 is_stmt 0 view .LVU493
 2244 000a 0F91      		pop r16
 2245 000c 0895      		ret
 2246               		.cfi_endproc
 2247               	.LFE154:
 2249               		.section	.text.rgblight_setrgb_master,"ax",@progbits
 2250               	.global	rgblight_setrgb_master
 2252               	rgblight_setrgb_master:
 2253               	.LVL145:
 2254               	.LFB151:
 610:quantum/rgblight.c **** 
 2255               		.loc 1 610 62 is_stmt 1 view -0
 2256               		.cfi_startproc
 610:quantum/rgblight.c **** 
 2257               		.loc 1 610 62 is_stmt 0 view .LVU495
 2258 0000 0F93      		push r16
 2259               	.LCFI40:
 2260               		.cfi_def_cfa_offset 3
 2261               		.cfi_offset 16, -2
 2262               	/* prologue: function */
 2263               	/* frame size = 0 */
 2264               	/* stack size = 1 */
 2265               	.L__stack_usage = 1
 610:quantum/rgblight.c **** 
 2266               		.loc 1 610 64 is_stmt 1 view .LVU496
 2267 0002 08E0      		ldi r16,lo8(8)
 2268 0004 20E0      		ldi r18,0
 2269 0006 0E94 0000 		call rgblight_setrgb_range
 2270               	.LVL146:
 2271               	/* epilogue start */
 610:quantum/rgblight.c **** 
 2272               		.loc 1 610 1 is_stmt 0 view .LVU497
 2273 000a 0F91      		pop r16
 2274 000c 0895      		ret
 2275               		.cfi_endproc
 2276               	.LFE151:
 2278               		.section	.text.rgblight_setrgb_slave,"ax",@progbits
 2279               	.global	rgblight_setrgb_slave
 2281               	rgblight_setrgb_slave:
 2282               	.LVL147:
 2283               	.LFB152:
 612:quantum/rgblight.c **** 
 2284               		.loc 1 612 61 is_stmt 1 view -0
 2285               		.cfi_startproc
 612:quantum/rgblight.c **** 
 2286               		.loc 1 612 61 is_stmt 0 view .LVU499
 2287 0000 0F93      		push r16
 2288               	.LCFI41:
 2289               		.cfi_def_cfa_offset 3
 2290               		.cfi_offset 16, -2
 2291               	/* prologue: function */
 2292               	/* frame size = 0 */
 2293               	/* stack size = 1 */
 2294               	.L__stack_usage = 1
 612:quantum/rgblight.c **** 
 2295               		.loc 1 612 63 is_stmt 1 view .LVU500
 2296 0002 00E1      		ldi r16,lo8(16)
 2297 0004 28E0      		ldi r18,lo8(8)
 2298 0006 0E94 0000 		call rgblight_setrgb_range
 2299               	.LVL148:
 2300               	/* epilogue start */
 612:quantum/rgblight.c **** 
 2301               		.loc 1 612 1 is_stmt 0 view .LVU501
 2302 000a 0F91      		pop r16
 2303 000c 0895      		ret
 2304               		.cfi_endproc
 2305               	.LFE152:
 2307               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 2308               	.global	rgblight_effect_rainbow_swirl
 2310               	rgblight_effect_rainbow_swirl:
 2311               	.LVL149:
 2312               	.LFB165:
 892:quantum/rgblight.c **** #endif
 893:quantum/rgblight.c **** 
 894:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 895:quantum/rgblight.c **** #    ifndef RGBLIGHT_RAINBOW_SWIRL_RANGE
 896:quantum/rgblight.c **** #        define RGBLIGHT_RAINBOW_SWIRL_RANGE 255
 897:quantum/rgblight.c **** #    endif
 898:quantum/rgblight.c **** 
 899:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
 900:quantum/rgblight.c **** 
 901:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(animation_status_t *anim) {
 2313               		.loc 1 901 62 is_stmt 1 view -0
 2314               		.cfi_startproc
 2315               		.loc 1 901 62 is_stmt 0 view .LVU503
 2316 0000 EF92      		push r14
 2317               	.LCFI42:
 2318               		.cfi_def_cfa_offset 3
 2319               		.cfi_offset 14, -2
 2320 0002 FF92      		push r15
 2321               	.LCFI43:
 2322               		.cfi_def_cfa_offset 4
 2323               		.cfi_offset 15, -3
 2324 0004 1F93      		push r17
 2325               	.LCFI44:
 2326               		.cfi_def_cfa_offset 5
 2327               		.cfi_offset 17, -4
 2328 0006 CF93      		push r28
 2329               	.LCFI45:
 2330               		.cfi_def_cfa_offset 6
 2331               		.cfi_offset 28, -5
 2332 0008 DF93      		push r29
 2333               	.LCFI46:
 2334               		.cfi_def_cfa_offset 7
 2335               		.cfi_offset 29, -6
 2336               	/* prologue: function */
 2337               	/* frame size = 0 */
 2338               	/* stack size = 5 */
 2339               	.L__stack_usage = 5
 2340 000a EC01      		movw r28,r24
 902:quantum/rgblight.c ****     uint8_t hue;
 2341               		.loc 1 902 5 is_stmt 1 view .LVU504
 903:quantum/rgblight.c ****     uint8_t i;
 2342               		.loc 1 903 5 view .LVU505
 904:quantum/rgblight.c **** 
 905:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 2343               		.loc 1 905 5 view .LVU506
 2344               	.LVL150:
 2345               		.loc 1 905 12 is_stmt 0 view .LVU507
 2346 000c 10E0      		ldi r17,0
 906:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2347               		.loc 1 906 45 view .LVU508
 2348 000e EE24      		clr r14
 2349 0010 EA94      		dec r14
 2350 0012 F12C      		mov r15,__zero_reg__
 2351               	.LVL151:
 2352               	.L114:
 905:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2353               		.loc 1 905 19 discriminator 1 view .LVU509
 2354 0014 6091 0000 		lds r22,effect_num_leds
 905:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2355               		.loc 1 905 5 discriminator 1 view .LVU510
 2356 0018 1617      		cp r17,r22
 2357 001a 00F0      		brlo .L115
 907:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 908:quantum/rgblight.c ****     }
 909:quantum/rgblight.c ****     rgblight_set();
 2358               		.loc 1 909 5 is_stmt 1 view .LVU511
 2359 001c 0E94 0000 		call rgblight_set
 2360               	.LVL152:
 910:quantum/rgblight.c **** 
 911:quantum/rgblight.c ****     if (anim->delta % 2) {
 2361               		.loc 1 911 5 view .LVU512
 2362               		.loc 1 911 9 is_stmt 0 view .LVU513
 2363 0020 9A81      		ldd r25,Y+2
 2364 0022 8C81      		ldd r24,Y+4
 2365               		.loc 1 911 8 view .LVU514
 2366 0024 90FF      		sbrs r25,0
 2367 0026 00C0      		rjmp .L116
 912:quantum/rgblight.c ****         anim->current_hue++;
 2368               		.loc 1 912 9 is_stmt 1 view .LVU515
 2369               		.loc 1 912 26 is_stmt 0 view .LVU516
 2370 0028 8F5F      		subi r24,lo8(-(1))
 2371               	.L118:
 913:quantum/rgblight.c ****     } else {
 914:quantum/rgblight.c ****         anim->current_hue--;
 2372               		.loc 1 914 26 view .LVU517
 2373 002a 8C83      		std Y+4,r24
 2374               	/* epilogue start */
 915:quantum/rgblight.c ****     }
 916:quantum/rgblight.c **** }
 2375               		.loc 1 916 1 view .LVU518
 2376 002c DF91      		pop r29
 2377 002e CF91      		pop r28
 2378               	.LVL153:
 2379               		.loc 1 916 1 view .LVU519
 2380 0030 1F91      		pop r17
 2381               	.LVL154:
 2382               		.loc 1 916 1 view .LVU520
 2383 0032 FF90      		pop r15
 2384 0034 EF90      		pop r14
 2385 0036 0895      		ret
 2386               	.LVL155:
 2387               	.L115:
 906:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2388               		.loc 1 906 9 is_stmt 1 discriminator 3 view .LVU521
 907:quantum/rgblight.c ****     }
 2389               		.loc 1 907 9 discriminator 3 view .LVU522
 2390               	.LBB84:
 2391               	.LBI84:
 125:quantum/rgblight.c **** 
 2392               		.loc 1 125 6 discriminator 3 view .LVU523
 2393               	.LBB85:
 125:quantum/rgblight.c **** 
 2394               		.loc 1 125 70 discriminator 3 view .LVU524
 2395               	.LBE85:
 2396               	.LBE84:
 907:quantum/rgblight.c ****     }
 2397               		.loc 1 907 82 is_stmt 0 discriminator 3 view .LVU525
 2398 0038 2091 0000 		lds r18,effect_start_pos
 2399 003c 422F      		mov r20,r18
 2400 003e 410F      		add r20,r17
 2401 0040 5527      		clr r21
 2402 0042 551F      		rol r21
 2403 0044 CA01      		movw r24,r20
 907:quantum/rgblight.c ****     }
 2404               		.loc 1 907 9 discriminator 3 view .LVU526
 2405 0046 9A01      		movw r18,r20
 2406 0048 220F      		lsl r18
 2407 004a 331F      		rol r19
 2408 004c 280F      		add r18,r24
 2409 004e 391F      		adc r19,r25
 2410 0050 2050      		subi r18,lo8(-(led))
 2411 0052 3040      		sbci r19,hi8(-(led))
 906:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2412               		.loc 1 906 45 discriminator 3 view .LVU527
 2413 0054 70E0      		ldi r23,0
 2414 0056 C701      		movw r24,r14
 2415 0058 0E94 0000 		call __divmodhi4
 2416               	.LVL156:
 906:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2417               		.loc 1 906 45 discriminator 3 view .LVU528
 2418 005c 962F      		mov r25,r22
 906:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2419               		.loc 1 906 13 discriminator 3 view .LVU529
 2420 005e 8C81      		ldd r24,Y+4
 2421               	.LBB87:
 2422               	.LBB86:
 125:quantum/rgblight.c **** 
 2423               		.loc 1 125 70 discriminator 3 view .LVU530
 2424 0060 4091 0000 		lds r20,rgblight_config+3
 2425 0064 6091 0000 		lds r22,rgblight_config+2
 2426 0068 199F      		mul r17,r25
 2427 006a 800D      		add r24,r0
 2428 006c 1124      		clr __zero_reg__
 2429 006e 0E94 0000 		call sethsv_raw
 2430               	.LVL157:
 125:quantum/rgblight.c **** 
 2431               		.loc 1 125 70 discriminator 3 view .LVU531
 2432               	.LBE86:
 2433               	.LBE87:
 905:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2434               		.loc 1 905 39 discriminator 3 view .LVU532
 2435 0072 1F5F      		subi r17,lo8(-(1))
 2436               	.LVL158:
 905:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2437               		.loc 1 905 39 discriminator 3 view .LVU533
 2438 0074 00C0      		rjmp .L114
 2439               	.L116:
 914:quantum/rgblight.c ****     }
 2440               		.loc 1 914 9 is_stmt 1 view .LVU534
 914:quantum/rgblight.c ****     }
 2441               		.loc 1 914 26 is_stmt 0 view .LVU535
 2442 0076 8150      		subi r24,lo8(-(-1))
 2443 0078 00C0      		rjmp .L118
 2444               		.cfi_endproc
 2445               	.LFE165:
 2447               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 2448               	.global	rgblight_effect_christmas
 2450               	rgblight_effect_christmas:
 2451               	.LVL159:
 2452               	.LFB166:
 917:quantum/rgblight.c **** #endif
 918:quantum/rgblight.c **** 
 919:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
 920:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
 921:quantum/rgblight.c **** 
 922:quantum/rgblight.c **** void rgblight_effect_snake(animation_status_t *anim) {
 923:quantum/rgblight.c ****     static uint8_t pos = 0;
 924:quantum/rgblight.c ****     uint8_t        i, j;
 925:quantum/rgblight.c ****     int8_t         k;
 926:quantum/rgblight.c ****     int8_t         increment = 1;
 927:quantum/rgblight.c **** 
 928:quantum/rgblight.c ****     if (anim->delta % 2) {
 929:quantum/rgblight.c ****         increment = -1;
 930:quantum/rgblight.c ****     }
 931:quantum/rgblight.c **** 
 932:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 933:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
 934:quantum/rgblight.c ****         if (increment == 1) {
 935:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 936:quantum/rgblight.c ****         } else {
 937:quantum/rgblight.c ****             pos = 0;
 938:quantum/rgblight.c ****         }
 939:quantum/rgblight.c ****         anim->pos = 1;
 940:quantum/rgblight.c ****     }
 941:quantum/rgblight.c **** #    endif
 942:quantum/rgblight.c **** 
 943:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 944:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 945:quantum/rgblight.c ****         ledp->r        = 0;
 946:quantum/rgblight.c ****         ledp->g        = 0;
 947:quantum/rgblight.c ****         ledp->b        = 0;
 948:quantum/rgblight.c **** #    ifdef RGBW
 949:quantum/rgblight.c ****         ledp->w = 0;
 950:quantum/rgblight.c **** #    endif
 951:quantum/rgblight.c ****         for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 952:quantum/rgblight.c ****             k = pos + j * increment;
 953:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 954:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 955:quantum/rgblight.c ****             }
 956:quantum/rgblight.c ****             if (k < 0) {
 957:quantum/rgblight.c ****                 k = k + effect_num_leds;
 958:quantum/rgblight.c ****             }
 959:quantum/rgblight.c ****             if (i == k) {
 960:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 961:quantum/rgblight.c ****             }
 962:quantum/rgblight.c ****         }
 963:quantum/rgblight.c ****     }
 964:quantum/rgblight.c ****     rgblight_set();
 965:quantum/rgblight.c ****     if (increment == 1) {
 966:quantum/rgblight.c ****         if (pos - 1 < 0) {
 967:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 968:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 969:quantum/rgblight.c ****             anim->pos = 0;
 970:quantum/rgblight.c **** #    endif
 971:quantum/rgblight.c ****         } else {
 972:quantum/rgblight.c ****             pos -= 1;
 973:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 974:quantum/rgblight.c ****             anim->pos = 1;
 975:quantum/rgblight.c **** #    endif
 976:quantum/rgblight.c ****         }
 977:quantum/rgblight.c ****     } else {
 978:quantum/rgblight.c ****         pos = (pos + 1) % effect_num_leds;
 979:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 980:quantum/rgblight.c ****         anim->pos = pos;
 981:quantum/rgblight.c **** #    endif
 982:quantum/rgblight.c ****     }
 983:quantum/rgblight.c **** }
 984:quantum/rgblight.c **** #endif
 985:quantum/rgblight.c **** 
 986:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
 987:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
 988:quantum/rgblight.c **** 
 989:quantum/rgblight.c **** void rgblight_effect_knight(animation_status_t *anim) {
 990:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 991:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 992:quantum/rgblight.c ****     static int8_t increment  = 1;
 993:quantum/rgblight.c ****     uint8_t       i, cur;
 994:quantum/rgblight.c **** 
 995:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 996:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
 997:quantum/rgblight.c ****         anim->pos  = 1;
 998:quantum/rgblight.c ****         low_bound  = 0;
 999:quantum/rgblight.c ****         high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1000:quantum/rgblight.c ****         increment  = 1;
1001:quantum/rgblight.c ****     }
1002:quantum/rgblight.c **** #    endif
1003:quantum/rgblight.c ****     // Set all the LEDs to 0
1004:quantum/rgblight.c ****     for (i = effect_start_pos; i < effect_end_pos; i++) {
1005:quantum/rgblight.c ****         led[i].r = 0;
1006:quantum/rgblight.c ****         led[i].g = 0;
1007:quantum/rgblight.c ****         led[i].b = 0;
1008:quantum/rgblight.c **** #    ifdef RGBW
1009:quantum/rgblight.c ****         led[i].w = 0;
1010:quantum/rgblight.c **** #    endif
1011:quantum/rgblight.c ****     }
1012:quantum/rgblight.c ****     // Determine which LEDs should be lit up
1013:quantum/rgblight.c ****     for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
1014:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
1015:quantum/rgblight.c **** 
1016:quantum/rgblight.c ****         if (i >= low_bound && i <= high_bound) {
1017:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
1018:quantum/rgblight.c ****         } else {
1019:quantum/rgblight.c ****             led[cur].r = 0;
1020:quantum/rgblight.c ****             led[cur].g = 0;
1021:quantum/rgblight.c ****             led[cur].b = 0;
1022:quantum/rgblight.c **** #    ifdef RGBW
1023:quantum/rgblight.c ****             led[cur].w = 0;
1024:quantum/rgblight.c **** #    endif
1025:quantum/rgblight.c ****         }
1026:quantum/rgblight.c ****     }
1027:quantum/rgblight.c ****     rgblight_set();
1028:quantum/rgblight.c **** 
1029:quantum/rgblight.c ****     // Move from low_bound to high_bound changing the direction we increment each
1030:quantum/rgblight.c ****     // time a boundary is hit.
1031:quantum/rgblight.c ****     low_bound += increment;
1032:quantum/rgblight.c ****     high_bound += increment;
1033:quantum/rgblight.c **** 
1034:quantum/rgblight.c ****     if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
1035:quantum/rgblight.c ****         increment = -increment;
1036:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1037:quantum/rgblight.c ****         if (increment == 1) {
1038:quantum/rgblight.c ****             anim->pos = 0;
1039:quantum/rgblight.c ****         }
1040:quantum/rgblight.c **** #    endif
1041:quantum/rgblight.c ****     }
1042:quantum/rgblight.c **** }
1043:quantum/rgblight.c **** #endif
1044:quantum/rgblight.c **** 
1045:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
1046:quantum/rgblight.c **** void rgblight_effect_christmas(animation_status_t *anim) {
 2453               		.loc 1 1046 58 is_stmt 1 view -0
 2454               		.cfi_startproc
 2455               		.loc 1 1046 58 is_stmt 0 view .LVU537
 2456 0000 0F93      		push r16
 2457               	.LCFI47:
 2458               		.cfi_def_cfa_offset 3
 2459               		.cfi_offset 16, -2
 2460 0002 1F93      		push r17
 2461               	.LCFI48:
 2462               		.cfi_def_cfa_offset 4
 2463               		.cfi_offset 17, -3
 2464 0004 CF93      		push r28
 2465               	.LCFI49:
 2466               		.cfi_def_cfa_offset 5
 2467               		.cfi_offset 28, -4
 2468 0006 DF93      		push r29
 2469               	.LCFI50:
 2470               		.cfi_def_cfa_offset 6
 2471               		.cfi_offset 29, -5
 2472               	/* prologue: function */
 2473               	/* frame size = 0 */
 2474               	/* stack size = 4 */
 2475               	.L__stack_usage = 4
 2476 0008 8C01      		movw r16,r24
1047:quantum/rgblight.c ****     uint8_t hue;
 2477               		.loc 1 1047 5 is_stmt 1 view .LVU538
1048:quantum/rgblight.c ****     uint8_t i;
 2478               		.loc 1 1048 5 view .LVU539
1049:quantum/rgblight.c **** 
1050:quantum/rgblight.c ****     anim->current_offset = (anim->current_offset + 1) % 2;
 2479               		.loc 1 1050 5 view .LVU540
 2480               		.loc 1 1050 50 is_stmt 0 view .LVU541
 2481 000a FC01      		movw r30,r24
 2482 000c 8481      		ldd r24,Z+4
 2483 000e 9581      		ldd r25,Z+5
 2484               	.LVL160:
 2485               		.loc 1 1050 50 view .LVU542
 2486 0010 0196      		adiw r24,1
 2487               		.loc 1 1050 55 view .LVU543
 2488 0012 8170      		andi r24,1
 2489 0014 9927      		clr r25
 2490               		.loc 1 1050 26 view .LVU544
 2491 0016 9583      		std Z+5,r25
 2492 0018 8483      		std Z+4,r24
1051:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 2493               		.loc 1 1051 5 is_stmt 1 view .LVU545
 2494               	.LVL161:
 2495               		.loc 1 1051 12 is_stmt 0 view .LVU546
 2496 001a C0E0      		ldi r28,0
1052:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 2497               		.loc 1 1052 13 view .LVU547
 2498 001c D5E5      		ldi r29,lo8(85)
 2499               	.LVL162:
 2500               	.L120:
1051:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 2501               		.loc 1 1051 5 discriminator 1 view .LVU548
 2502 001e 8091 0000 		lds r24,effect_num_leds
 2503 0022 C817      		cp r28,r24
 2504 0024 00F0      		brlo .L121
1053:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
1054:quantum/rgblight.c ****     }
1055:quantum/rgblight.c ****     rgblight_set();
 2505               		.loc 1 1055 5 is_stmt 1 view .LVU549
 2506               	/* epilogue start */
1056:quantum/rgblight.c **** }
 2507               		.loc 1 1056 1 is_stmt 0 view .LVU550
 2508 0026 DF91      		pop r29
 2509 0028 CF91      		pop r28
 2510               	.LVL163:
 2511               		.loc 1 1056 1 view .LVU551
 2512 002a 1F91      		pop r17
 2513 002c 0F91      		pop r16
 2514               	.LVL164:
1055:quantum/rgblight.c **** }
 2515               		.loc 1 1055 5 view .LVU552
 2516 002e 0C94 0000 		jmp rgblight_set
 2517               	.LVL165:
 2518               	.L121:
1052:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2519               		.loc 1 1052 9 is_stmt 1 discriminator 3 view .LVU553
1053:quantum/rgblight.c ****     }
 2520               		.loc 1 1053 9 discriminator 3 view .LVU554
 2521               	.LBB90:
 2522               	.LBI90:
 125:quantum/rgblight.c **** 
 2523               		.loc 1 125 6 discriminator 3 view .LVU555
 2524               	.LBB91:
 125:quantum/rgblight.c **** 
 2525               		.loc 1 125 70 discriminator 3 view .LVU556
 2526               	.LBE91:
 2527               	.LBE90:
1053:quantum/rgblight.c ****     }
 2528               		.loc 1 1053 82 is_stmt 0 discriminator 3 view .LVU557
 2529 0032 2091 0000 		lds r18,effect_start_pos
 2530 0036 422F      		mov r20,r18
 2531 0038 4C0F      		add r20,r28
 2532 003a 5527      		clr r21
 2533 003c 551F      		rol r21
 2534 003e CA01      		movw r24,r20
1053:quantum/rgblight.c ****     }
 2535               		.loc 1 1053 9 discriminator 3 view .LVU558
 2536 0040 9A01      		movw r18,r20
 2537 0042 220F      		lsl r18
 2538 0044 331F      		rol r19
 2539 0046 280F      		add r18,r24
 2540 0048 391F      		adc r19,r25
 2541 004a 2050      		subi r18,lo8(-(led))
 2542 004c 3040      		sbci r19,hi8(-(led))
1052:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2543               		.loc 1 1052 23 discriminator 3 view .LVU559
 2544 004e 8C2F      		mov r24,r28
 2545 0050 8695      		lsr r24
1052:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2546               		.loc 1 1052 56 discriminator 3 view .LVU560
 2547 0052 F801      		movw r30,r16
 2548 0054 4481      		ldd r20,Z+4
 2549 0056 5581      		ldd r21,Z+5
 2550 0058 840F      		add r24,r20
 2551 005a 952F      		mov r25,r21
 2552 005c 911D      		adc r25,__zero_reg__
1052:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2553               		.loc 1 1052 13 discriminator 3 view .LVU561
 2554 005e 8170      		andi r24,lo8(1)
 2555               	.LBB93:
 2556               	.LBB92:
 125:quantum/rgblight.c **** 
 2557               		.loc 1 125 70 discriminator 3 view .LVU562
 2558 0060 4091 0000 		lds r20,rgblight_config+3
 2559 0064 6091 0000 		lds r22,rgblight_config+2
 2560 0068 8D9F      		mul r24,r29
 2561 006a 802D      		mov r24,r0
 2562 006c 1124      		clr r1
 2563 006e 0E94 0000 		call sethsv_raw
 2564               	.LVL166:
 125:quantum/rgblight.c **** 
 2565               		.loc 1 125 70 discriminator 3 view .LVU563
 2566               	.LBE92:
 2567               	.LBE93:
1051:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 2568               		.loc 1 1051 39 discriminator 3 view .LVU564
 2569 0072 CF5F      		subi r28,lo8(-(1))
 2570               	.LVL167:
1051:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 2571               		.loc 1 1051 39 discriminator 3 view .LVU565
 2572 0074 00C0      		rjmp .L120
 2573               		.cfi_endproc
 2574               	.LFE166:
 2576               		.section	.text.rgblight_disable,"ax",@progbits
 2577               	.global	rgblight_disable
 2579               	rgblight_disable:
 2580               	.LFB112:
 353:quantum/rgblight.c ****     rgblight_config.enable = 0;
 2581               		.loc 1 353 29 is_stmt 1 view -0
 2582               		.cfi_startproc
 2583               	/* prologue: function */
 2584               	/* frame size = 0 */
 2585               	/* stack size = 0 */
 2586               	.L__stack_usage = 0
 354:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 2587               		.loc 1 354 5 view .LVU567
 354:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 2588               		.loc 1 354 28 is_stmt 0 view .LVU568
 2589 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2590 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2591 0004 8081      		ld r24,Z
 2592 0006 8E7F      		andi r24,lo8(~(1<<0))
 2593 0008 8083      		st Z,r24
 355:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 2594               		.loc 1 355 5 is_stmt 1 view .LVU569
 2595 000a 6081      		ld r22,Z
 2596 000c 7181      		ldd r23,Z+1
 2597 000e 8281      		ldd r24,Z+2
 2598 0010 9381      		ldd r25,Z+3
 2599 0012 0E94 0000 		call eeconfig_update_rgblight
 2600               	.LVL168:
 356:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2601               		.loc 1 356 96 view .LVU570
 358:quantum/rgblight.c **** #endif
 2602               		.loc 1 358 5 view .LVU571
 2603               	.LBB98:
 2604               	.LBI98:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 2605               		.loc 1 701 6 view .LVU572
 2606               	.LBB99:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2607               		.loc 1 718 5 view .LVU573
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2608               		.loc 1 718 35 is_stmt 0 view .LVU574
 2609 0016 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 2610               		.loc 1 719 43 is_stmt 1 view .LVU575
 2611               	.LBE99:
 2612               	.LBE98:
 360:quantum/rgblight.c ****     wait_ms(50);
 2613               		.loc 1 360 35 view .LVU576
 361:quantum/rgblight.c ****     rgblight_set();
 2614               		.loc 1 361 5 view .LVU577
 2615               	.LVL169:
 2616               	.LBB100:
 2617               	.LBI100:
 166:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** {
 2618               		.loc 3 166 1 view .LVU578
 2619               	.LBB101:
 168:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 2620               		.loc 3 168 2 view .LVU579
 172:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2621               		.loc 3 172 2 view .LVU580
 173:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2622               		.loc 3 173 2 view .LVU581
 174:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 2623               		.loc 3 174 2 view .LVU582
 184:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#endif
 2624               		.loc 3 184 3 view .LVU583
 2625               		.loc 3 187 2 view .LVU584
 2626 001a 2FEF      		ldi r18,lo8(159999)
 2627 001c 80E7      		ldi r24,hi8(159999)
 2628 001e 92E0      		ldi r25,hlo8(159999)
 2629 0020 2150      	1:	subi r18,1
 2630 0022 8040      		sbci r24,0
 2631 0024 9040      		sbci r25,0
 2632 0026 01F4      		brne 1b
 2633 0028 00C0      		rjmp .
 2634 002a 0000      		nop
 2635               	.LVL170:
 2636               		.loc 3 187 2 is_stmt 0 view .LVU585
 2637               	.LBE101:
 2638               	.LBE100:
 362:quantum/rgblight.c **** }
 2639               		.loc 1 362 5 is_stmt 1 view .LVU586
 2640 002c 0C94 0000 		jmp rgblight_set
 2641               	.LVL171:
 2642               		.cfi_endproc
 2643               	.LFE112:
 2645               		.section	.text.rgblight_disable_noeeprom,"ax",@progbits
 2646               	.global	rgblight_disable_noeeprom
 2648               	rgblight_disable_noeeprom:
 2649               	.LFB113:
 365:quantum/rgblight.c ****     rgblight_config.enable = 0;
 2650               		.loc 1 365 38 view -0
 2651               		.cfi_startproc
 2652               	/* prologue: function */
 2653               	/* frame size = 0 */
 2654               	/* stack size = 0 */
 2655               	.L__stack_usage = 0
 366:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 2656               		.loc 1 366 5 view .LVU588
 366:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 2657               		.loc 1 366 28 is_stmt 0 view .LVU589
 2658 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2659 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2660 0004 8081      		ld r24,Z
 2661 0006 8E7F      		andi r24,lo8(~(1<<0))
 2662 0008 8083      		st Z,r24
 367:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2663               		.loc 1 367 98 is_stmt 1 view .LVU590
 369:quantum/rgblight.c **** #endif
 2664               		.loc 1 369 5 view .LVU591
 2665               	.LBB106:
 2666               	.LBI106:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 2667               		.loc 1 701 6 view .LVU592
 2668               	.LBB107:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2669               		.loc 1 718 5 view .LVU593
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2670               		.loc 1 718 35 is_stmt 0 view .LVU594
 2671 000a 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 2672               		.loc 1 719 43 is_stmt 1 view .LVU595
 2673               	.LBE107:
 2674               	.LBE106:
 371:quantum/rgblight.c ****     wait_ms(50);
 2675               		.loc 1 371 35 view .LVU596
 372:quantum/rgblight.c ****     rgblight_set();
 2676               		.loc 1 372 5 view .LVU597
 2677               	.LVL172:
 2678               	.LBB108:
 2679               	.LBI108:
 166:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** {
 2680               		.loc 3 166 1 view .LVU598
 2681               	.LBB109:
 168:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 2682               		.loc 3 168 2 view .LVU599
 172:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2683               		.loc 3 172 2 view .LVU600
 173:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2684               		.loc 3 173 2 view .LVU601
 174:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 2685               		.loc 3 174 2 view .LVU602
 184:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#endif
 2686               		.loc 3 184 3 view .LVU603
 2687               		.loc 3 187 2 view .LVU604
 2688 000e 2FEF      		ldi r18,lo8(159999)
 2689 0010 80E7      		ldi r24,hi8(159999)
 2690 0012 92E0      		ldi r25,hlo8(159999)
 2691 0014 2150      	1:	subi r18,1
 2692 0016 8040      		sbci r24,0
 2693 0018 9040      		sbci r25,0
 2694 001a 01F4      		brne 1b
 2695 001c 00C0      		rjmp .
 2696 001e 0000      		nop
 2697               	.LVL173:
 2698               		.loc 3 187 2 is_stmt 0 view .LVU605
 2699               	.LBE109:
 2700               	.LBE108:
 373:quantum/rgblight.c **** }
 2701               		.loc 1 373 5 is_stmt 1 view .LVU606
 2702 0020 0C94 0000 		jmp rgblight_set
 2703               	.LVL174:
 2704               		.cfi_endproc
 2705               	.LFE113:
 2707               		.section	.text.rgblight_timer_init,"ax",@progbits
 2708               	.global	rgblight_timer_init
 2710               	rgblight_timer_init:
 2711               	.LFB156:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 2712               		.loc 1 701 32 view -0
 2713               		.cfi_startproc
 2714               	/* prologue: function */
 2715               	/* frame size = 0 */
 2716               	/* stack size = 0 */
 2717               	.L__stack_usage = 0
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2718               		.loc 1 718 5 view .LVU608
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2719               		.loc 1 718 35 is_stmt 0 view .LVU609
 2720 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 2721               		.loc 1 719 43 is_stmt 1 view .LVU610
 2722               	/* epilogue start */
 720:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 2723               		.loc 1 720 1 is_stmt 0 view .LVU611
 2724 0004 0895      		ret
 2725               		.cfi_endproc
 2726               	.LFE156:
 2728               		.section	.text.rgblight_timer_enable,"ax",@progbits
 2729               	.global	rgblight_timer_enable
 2731               	rgblight_timer_enable:
 2732               	.LFB157:
 721:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 2733               		.loc 1 721 34 is_stmt 1 view -0
 2734               		.cfi_startproc
 2735               	/* prologue: function */
 2736               	/* frame size = 0 */
 2737               	/* stack size = 0 */
 2738               	.L__stack_usage = 0
 722:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 2739               		.loc 1 722 5 view .LVU613
 2740               	.LVL175:
 2741               	.LBB112:
 2742               	.LBI112:
  77:quantum/rgblight.c **** 
 2743               		.loc 1 77 19 view .LVU614
 2744               	.LBB113:
  77:quantum/rgblight.c **** 
 2745               		.loc 1 77 52 view .LVU615
 2746               	.LBE113:
 2747               	.LBE112:
 722:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 2748               		.loc 1 722 42 is_stmt 0 view .LVU616
 2749 0000 6091 0000 		lds r22,rgblight_config
 2750 0004 6695      		lsr r22
 2751               	.LBB115:
 2752               	.LBB114:
  77:quantum/rgblight.c **** 
 2753               		.loc 1 77 59 view .LVU617
 2754 0006 70E0      		ldi r23,0
 2755 0008 4BE0      		ldi r20,lo8(11)
 2756 000a 50E0      		ldi r21,0
 2757 000c 80E0      		ldi r24,lo8(static_effect_table)
 2758 000e 90E0      		ldi r25,hi8(static_effect_table)
 2759 0010 0E94 0000 		call memchr
 2760               	.LVL176:
  77:quantum/rgblight.c **** 
 2761               		.loc 1 77 59 view .LVU618
 2762               	.LBE114:
 2763               	.LBE115:
 722:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 2764               		.loc 1 722 8 view .LVU619
 2765 0014 892B      		or r24,r25
 2766 0016 01F4      		brne .L126
 723:quantum/rgblight.c ****     }
 2767               		.loc 1 723 9 is_stmt 1 view .LVU620
 723:quantum/rgblight.c ****     }
 2768               		.loc 1 723 39 is_stmt 0 view .LVU621
 2769 0018 81E0      		ldi r24,lo8(1)
 2770 001a 8093 0000 		sts rgblight_status+1,r24
 2771               	.L126:
 725:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2772               		.loc 1 725 5 is_stmt 1 view .LVU622
 725:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2773               		.loc 1 725 35 is_stmt 0 view .LVU623
 2774 001e 0E94 0000 		call timer_read
 2775               	.LVL177:
 725:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2776               		.loc 1 725 33 view .LVU624
 2777 0022 9093 0000 		sts animation_status+1,r25
 2778 0026 8093 0000 		sts animation_status,r24
 726:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 2779               		.loc 1 726 43 is_stmt 1 view .LVU625
 727:quantum/rgblight.c **** }
 2780               		.loc 1 727 41 view .LVU626
 2781               	/* epilogue start */
 728:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 2782               		.loc 1 728 1 is_stmt 0 view .LVU627
 2783 002a 0895      		ret
 2784               		.cfi_endproc
 2785               	.LFE157:
 2787               		.section	.text.rgblight_mode_eeprom_helper,"ax",@progbits
 2788               	.global	rgblight_mode_eeprom_helper
 2790               	rgblight_mode_eeprom_helper:
 2791               	.LVL178:
 2792               	.LFB105:
 284:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2793               		.loc 1 284 70 is_stmt 1 view -0
 2794               		.cfi_startproc
 2795               	/* prologue: function */
 2796               	/* frame size = 0 */
 2797               	/* stack size = 0 */
 2798               	.L__stack_usage = 0
 285:quantum/rgblight.c ****         return;
 2799               		.loc 1 285 5 view .LVU629
 285:quantum/rgblight.c ****         return;
 2800               		.loc 1 285 25 is_stmt 0 view .LVU630
 2801 0000 9091 0000 		lds r25,rgblight_config
 285:quantum/rgblight.c ****         return;
 2802               		.loc 1 285 8 view .LVU631
 2803 0004 90FF      		sbrs r25,0
 2804 0006 00C0      		rjmp .L127
 288:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 2805               		.loc 1 288 5 is_stmt 1 view .LVU632
 2806 0008 9170      		andi r25,lo8(1)
 288:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 2807               		.loc 1 288 8 is_stmt 0 view .LVU633
 2808 000a 8111      		cpse r24,__zero_reg__
 2809 000c 00C0      		rjmp .L129
 289:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 2810               		.loc 1 289 9 is_stmt 1 view .LVU634
 289:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 2811               		.loc 1 289 30 is_stmt 0 view .LVU635
 2812 000e 9260      		ori r25,lo8(2)
 2813               	.LVL179:
 2814               	.L138:
 293:quantum/rgblight.c ****     }
 2815               		.loc 1 293 30 view .LVU636
 2816 0010 9093 0000 		sts rgblight_config,r25
 295:quantum/rgblight.c ****     if (write_to_eeprom) {
 2817               		.loc 1 295 35 is_stmt 1 view .LVU637
 296:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 2818               		.loc 1 296 5 view .LVU638
 296:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 2819               		.loc 1 296 8 is_stmt 0 view .LVU639
 2820 0014 6623      		tst r22
 2821 0016 01F0      		breq .L132
 297:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 2822               		.loc 1 297 9 is_stmt 1 view .LVU640
 2823 0018 6091 0000 		lds r22,rgblight_config
 2824 001c 7091 0000 		lds r23,rgblight_config+1
 2825 0020 8091 0000 		lds r24,rgblight_config+2
 2826 0024 9091 0000 		lds r25,rgblight_config+3
 2827               	.LVL180:
 297:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 2828               		.loc 1 297 9 is_stmt 0 view .LVU641
 2829 0028 0E94 0000 		call eeconfig_update_rgblight
 2830               	.LVL181:
 298:quantum/rgblight.c ****     } else {
 2831               		.loc 1 298 70 is_stmt 1 view .LVU642
 2832               	.L132:
 300:quantum/rgblight.c ****     }
 2833               		.loc 1 300 72 view .LVU643
 302:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2834               		.loc 1 302 5 view .LVU644
 2835               	.LBB120:
 2836               	.LBI120:
  77:quantum/rgblight.c **** 
 2837               		.loc 1 77 19 view .LVU645
 2838               	.LBB121:
  77:quantum/rgblight.c **** 
 2839               		.loc 1 77 52 view .LVU646
 2840               	.LBE121:
 2841               	.LBE120:
 302:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2842               		.loc 1 302 41 is_stmt 0 view .LVU647
 2843 002c 6091 0000 		lds r22,rgblight_config
 2844 0030 6695      		lsr r22
 2845               	.LBB123:
 2846               	.LBB122:
  77:quantum/rgblight.c **** 
 2847               		.loc 1 77 59 view .LVU648
 2848 0032 70E0      		ldi r23,0
 2849 0034 4BE0      		ldi r20,lo8(11)
 2850 0036 50E0      		ldi r21,0
 2851 0038 80E0      		ldi r24,lo8(static_effect_table)
 2852 003a 90E0      		ldi r25,hi8(static_effect_table)
 2853 003c 0E94 0000 		call memchr
 2854               	.LVL182:
  77:quantum/rgblight.c **** 
 2855               		.loc 1 77 59 view .LVU649
 2856               	.LBE122:
 2857               	.LBE123:
 302:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2858               		.loc 1 302 8 view .LVU650
 2859 0040 892B      		or r24,r25
 2860 0042 01F0      		breq .L133
 304:quantum/rgblight.c **** #endif
 2861               		.loc 1 304 9 is_stmt 1 view .LVU651
 2862               	.LBB124:
 2863               	.LBI124:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 2864               		.loc 1 701 6 view .LVU652
 2865               	.LBB125:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2866               		.loc 1 718 5 view .LVU653
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2867               		.loc 1 718 35 is_stmt 0 view .LVU654
 2868 0044 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 2869               		.loc 1 719 43 is_stmt 1 view .LVU655
 2870               	.L134:
 2871               	.LBE125:
 2872               	.LBE124:
 312:quantum/rgblight.c **** #endif
 2873               		.loc 1 312 5 view .LVU656
 312:quantum/rgblight.c **** #endif
 2874               		.loc 1 312 30 is_stmt 0 view .LVU657
 2875 0048 81E0      		ldi r24,lo8(1)
 2876 004a 8093 0000 		sts animation_status+3,r24
 314:quantum/rgblight.c **** }
 2877               		.loc 1 314 5 is_stmt 1 view .LVU658
 2878 004e 4091 0000 		lds r20,rgblight_config+3
 2879 0052 6091 0000 		lds r22,rgblight_config+2
 2880 0056 8091 0000 		lds r24,rgblight_config+1
 2881 005a 0C94 0000 		jmp rgblight_sethsv_noeeprom
 2882               	.LVL183:
 2883               	.L129:
 290:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 2884               		.loc 1 290 12 view .LVU659
 290:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 2885               		.loc 1 290 15 is_stmt 0 view .LVU660
 2886 005e 8A31      		cpi r24,lo8(26)
 2887 0060 00F0      		brlo .L131
 291:quantum/rgblight.c ****     } else {
 2888               		.loc 1 291 9 is_stmt 1 view .LVU661
 291:quantum/rgblight.c ****     } else {
 2889               		.loc 1 291 30 is_stmt 0 view .LVU662
 2890 0062 9263      		ori r25,lo8(50)
 2891 0064 00C0      		rjmp .L138
 2892               	.L131:
 293:quantum/rgblight.c ****     }
 2893               		.loc 1 293 9 is_stmt 1 view .LVU663
 293:quantum/rgblight.c ****     }
 2894               		.loc 1 293 30 is_stmt 0 view .LVU664
 2895 0066 880F      		lsl r24
 2896               	.LVL184:
 293:quantum/rgblight.c ****     }
 2897               		.loc 1 293 30 view .LVU665
 2898 0068 982B      		or r25,r24
 2899 006a 00C0      		rjmp .L138
 2900               	.LVL185:
 2901               	.L133:
 308:quantum/rgblight.c **** #endif
 2902               		.loc 1 308 9 is_stmt 1 view .LVU666
 2903 006c 0E94 0000 		call rgblight_timer_enable
 2904               	.LVL186:
 2905 0070 00C0      		rjmp .L134
 2906               	.LVL187:
 2907               	.L127:
 2908               	/* epilogue start */
 315:quantum/rgblight.c **** 
 2909               		.loc 1 315 1 is_stmt 0 view .LVU667
 2910 0072 0895      		ret
 2911               		.cfi_endproc
 2912               	.LFE105:
 2914               		.section	.text.rgblight_step_helper,"ax",@progbits
 2915               	.global	rgblight_step_helper
 2917               	rgblight_step_helper:
 2918               	.LVL188:
 2919               	.LFB98:
 255:quantum/rgblight.c ****     uint8_t mode = 0;
 2920               		.loc 1 255 49 is_stmt 1 view -0
 2921               		.cfi_startproc
 2922               	/* prologue: function */
 2923               	/* frame size = 0 */
 2924               	/* stack size = 0 */
 2925               	.L__stack_usage = 0
 255:quantum/rgblight.c ****     uint8_t mode = 0;
 2926               		.loc 1 255 49 is_stmt 0 view .LVU669
 2927 0000 682F      		mov r22,r24
 256:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 2928               		.loc 1 256 5 is_stmt 1 view .LVU670
 2929               	.LVL189:
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 2930               		.loc 1 257 5 view .LVU671
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 2931               		.loc 1 257 35 is_stmt 0 view .LVU672
 2932 0002 9091 0000 		lds r25,rgblight_config
 2933 0006 9695      		lsr r25
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 2934               		.loc 1 257 18 view .LVU673
 2935 0008 81E0      		ldi r24,lo8(1)
 2936               	.LVL190:
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 2937               		.loc 1 257 18 view .LVU674
 2938 000a 890F      		add r24,r25
 2939               	.LVL191:
 258:quantum/rgblight.c ****         mode = 1;
 2940               		.loc 1 258 5 is_stmt 1 view .LVU675
 258:quantum/rgblight.c ****         mode = 1;
 2941               		.loc 1 258 8 is_stmt 0 view .LVU676
 2942 000c 8A31      		cpi r24,lo8(26)
 2943 000e 00F0      		brlo .L140
 259:quantum/rgblight.c ****     }
 2944               		.loc 1 259 14 view .LVU677
 2945 0010 81E0      		ldi r24,lo8(1)
 2946               	.LVL192:
 2947               	.L140:
 261:quantum/rgblight.c **** }
 2948               		.loc 1 261 5 is_stmt 1 view .LVU678
 2949 0012 0C94 0000 		jmp rgblight_mode_eeprom_helper
 2950               	.LVL193:
 261:quantum/rgblight.c **** }
 2951               		.loc 1 261 5 is_stmt 0 view .LVU679
 2952               		.cfi_endproc
 2953               	.LFE98:
 2955               		.section	.text.rgblight_step_noeeprom,"ax",@progbits
 2956               	.global	rgblight_step_noeeprom
 2958               	rgblight_step_noeeprom:
 2959               	.LFB99:
 263:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 2960               		.loc 1 263 35 is_stmt 1 view -0
 2961               		.cfi_startproc
 2962               	/* prologue: function */
 2963               	/* frame size = 0 */
 2964               	/* stack size = 0 */
 2965               	.L__stack_usage = 0
 263:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 2966               		.loc 1 263 37 view .LVU681
 2967 0000 80E0      		ldi r24,0
 2968 0002 0C94 0000 		jmp rgblight_step_helper
 2969               	.LVL194:
 2970               		.cfi_endproc
 2971               	.LFE99:
 2973               		.section	.text.rgblight_step,"ax",@progbits
 2974               	.global	rgblight_step
 2976               	rgblight_step:
 2977               	.LFB100:
 264:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 2978               		.loc 1 264 26 view -0
 2979               		.cfi_startproc
 2980               	/* prologue: function */
 2981               	/* frame size = 0 */
 2982               	/* stack size = 0 */
 2983               	.L__stack_usage = 0
 264:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 2984               		.loc 1 264 28 view .LVU683
 2985 0000 81E0      		ldi r24,lo8(1)
 2986 0002 0C94 0000 		jmp rgblight_step_helper
 2987               	.LVL195:
 2988               		.cfi_endproc
 2989               	.LFE100:
 2991               		.section	.text.rgblight_step_reverse_helper,"ax",@progbits
 2992               	.global	rgblight_step_reverse_helper
 2994               	rgblight_step_reverse_helper:
 2995               	.LVL196:
 2996               	.LFB101:
 265:quantum/rgblight.c ****     uint8_t mode = 0;
 2997               		.loc 1 265 57 view -0
 2998               		.cfi_startproc
 2999               	/* prologue: function */
 3000               	/* frame size = 0 */
 3001               	/* stack size = 0 */
 3002               	.L__stack_usage = 0
 265:quantum/rgblight.c ****     uint8_t mode = 0;
 3003               		.loc 1 265 57 is_stmt 0 view .LVU685
 3004 0000 682F      		mov r22,r24
 266:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 3005               		.loc 1 266 5 is_stmt 1 view .LVU686
 3006               	.LVL197:
 267:quantum/rgblight.c ****     if (mode < 1) {
 3007               		.loc 1 267 5 view .LVU687
 267:quantum/rgblight.c ****     if (mode < 1) {
 3008               		.loc 1 267 35 is_stmt 0 view .LVU688
 3009 0002 9091 0000 		lds r25,rgblight_config
 3010 0006 9695      		lsr r25
 267:quantum/rgblight.c ****     if (mode < 1) {
 3011               		.loc 1 267 18 view .LVU689
 3012 0008 8FEF      		ldi r24,lo8(-1)
 3013               	.LVL198:
 267:quantum/rgblight.c ****     if (mode < 1) {
 3014               		.loc 1 267 18 view .LVU690
 3015 000a 890F      		add r24,r25
 3016               	.LVL199:
 268:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 3017               		.loc 1 268 5 is_stmt 1 view .LVU691
 268:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 3018               		.loc 1 268 8 is_stmt 0 view .LVU692
 3019 000c 01F4      		brne .L144
 269:quantum/rgblight.c ****     }
 3020               		.loc 1 269 14 view .LVU693
 3021 000e 89E1      		ldi r24,lo8(25)
 3022               	.LVL200:
 3023               	.L144:
 271:quantum/rgblight.c **** }
 3024               		.loc 1 271 5 is_stmt 1 view .LVU694
 3025 0010 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3026               	.LVL201:
 271:quantum/rgblight.c **** }
 3027               		.loc 1 271 5 is_stmt 0 view .LVU695
 3028               		.cfi_endproc
 3029               	.LFE101:
 3031               		.section	.text.rgblight_step_reverse_noeeprom,"ax",@progbits
 3032               	.global	rgblight_step_reverse_noeeprom
 3034               	rgblight_step_reverse_noeeprom:
 3035               	.LFB102:
 273:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 3036               		.loc 1 273 43 is_stmt 1 view -0
 3037               		.cfi_startproc
 3038               	/* prologue: function */
 3039               	/* frame size = 0 */
 3040               	/* stack size = 0 */
 3041               	.L__stack_usage = 0
 273:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 3042               		.loc 1 273 45 view .LVU697
 3043 0000 80E0      		ldi r24,0
 3044 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 3045               	.LVL202:
 3046               		.cfi_endproc
 3047               	.LFE102:
 3049               		.section	.text.rgblight_step_reverse,"ax",@progbits
 3050               	.global	rgblight_step_reverse
 3052               	rgblight_step_reverse:
 3053               	.LFB103:
 274:quantum/rgblight.c **** 
 3054               		.loc 1 274 34 view -0
 3055               		.cfi_startproc
 3056               	/* prologue: function */
 3057               	/* frame size = 0 */
 3058               	/* stack size = 0 */
 3059               	.L__stack_usage = 0
 274:quantum/rgblight.c **** 
 3060               		.loc 1 274 36 view .LVU699
 3061 0000 81E0      		ldi r24,lo8(1)
 3062 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 3063               	.LVL203:
 3064               		.cfi_endproc
 3065               	.LFE103:
 3067               		.section	.text.rgblight_mode,"ax",@progbits
 3068               	.global	rgblight_mode
 3070               	rgblight_mode:
 3071               	.LVL204:
 3072               	.LFB106:
 317:quantum/rgblight.c **** 
 3073               		.loc 1 317 34 view -0
 3074               		.cfi_startproc
 3075               	/* prologue: function */
 3076               	/* frame size = 0 */
 3077               	/* stack size = 0 */
 3078               	.L__stack_usage = 0
 317:quantum/rgblight.c **** 
 3079               		.loc 1 317 36 view .LVU701
 3080 0000 61E0      		ldi r22,lo8(1)
 3081 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3082               	.LVL205:
 317:quantum/rgblight.c **** 
 3083               		.loc 1 317 36 is_stmt 0 view .LVU702
 3084               		.cfi_endproc
 3085               	.LFE106:
 3087               		.section	.text.rgblight_increase,"ax",@progbits
 3088               	.global	rgblight_increase
 3090               	rgblight_increase:
 3091               	.LFB96:
 240:quantum/rgblight.c ****     uint8_t mode = 0;
 3092               		.loc 1 240 30 is_stmt 1 view -0
 3093               		.cfi_startproc
 3094               	/* prologue: function */
 3095               	/* frame size = 0 */
 3096               	/* stack size = 0 */
 3097               	.L__stack_usage = 0
 241:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 3098               		.loc 1 241 5 view .LVU704
 3099               	.LVL206:
 242:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 3100               		.loc 1 242 5 view .LVU705
 242:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 3101               		.loc 1 242 24 is_stmt 0 view .LVU706
 3102 0000 8091 0000 		lds r24,rgblight_config
 3103 0004 8695      		lsr r24
 242:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 3104               		.loc 1 242 8 view .LVU707
 3105 0006 8931      		cpi r24,lo8(25)
 3106 0008 00F4      		brsh .L150
 243:quantum/rgblight.c ****     }
 3107               		.loc 1 243 9 is_stmt 1 view .LVU708
 243:quantum/rgblight.c ****     }
 3108               		.loc 1 243 14 is_stmt 0 view .LVU709
 3109 000a 8F5F      		subi r24,lo8(-(1))
 3110               	.LVL207:
 3111               	.L149:
 245:quantum/rgblight.c **** }
 3112               		.loc 1 245 5 is_stmt 1 view .LVU710
 3113 000c 0C94 0000 		jmp rgblight_mode
 3114               	.LVL208:
 3115               	.L150:
 241:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 3116               		.loc 1 241 13 is_stmt 0 view .LVU711
 3117 0010 80E0      		ldi r24,0
 3118 0012 00C0      		rjmp .L149
 3119               		.cfi_endproc
 3120               	.LFE96:
 3122               		.section	.text.rgblight_decrease,"ax",@progbits
 3123               	.global	rgblight_decrease
 3125               	rgblight_decrease:
 3126               	.LFB97:
 247:quantum/rgblight.c ****     uint8_t mode = 0;
 3127               		.loc 1 247 30 is_stmt 1 view -0
 3128               		.cfi_startproc
 3129               	/* prologue: function */
 3130               	/* frame size = 0 */
 3131               	/* stack size = 0 */
 3132               	.L__stack_usage = 0
 248:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 3133               		.loc 1 248 5 view .LVU713
 3134               	.LVL209:
 250:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 3135               		.loc 1 250 5 view .LVU714
 250:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 3136               		.loc 1 250 24 is_stmt 0 view .LVU715
 3137 0000 8091 0000 		lds r24,rgblight_config
 3138 0004 8695      		lsr r24
 250:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 3139               		.loc 1 250 8 view .LVU716
 3140 0006 8230      		cpi r24,lo8(2)
 3141 0008 00F0      		brlo .L153
 251:quantum/rgblight.c ****     }
 3142               		.loc 1 251 9 is_stmt 1 view .LVU717
 251:quantum/rgblight.c ****     }
 3143               		.loc 1 251 14 is_stmt 0 view .LVU718
 3144 000a 8150      		subi r24,lo8(-(-1))
 3145               	.LVL210:
 3146               	.L152:
 253:quantum/rgblight.c **** }
 3147               		.loc 1 253 5 is_stmt 1 view .LVU719
 3148 000c 0C94 0000 		jmp rgblight_mode
 3149               	.LVL211:
 3150               	.L153:
 248:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 3151               		.loc 1 248 13 is_stmt 0 view .LVU720
 3152 0010 80E0      		ldi r24,0
 3153 0012 00C0      		rjmp .L152
 3154               		.cfi_endproc
 3155               	.LFE97:
 3157               		.section	.text.rgblight_enable,"ax",@progbits
 3158               	.global	rgblight_enable
 3160               	rgblight_enable:
 3161               	.LFB110:
 339:quantum/rgblight.c ****     rgblight_config.enable = 1;
 3162               		.loc 1 339 28 is_stmt 1 view -0
 3163               		.cfi_startproc
 3164               	/* prologue: function */
 3165               	/* frame size = 0 */
 3166               	/* stack size = 0 */
 3167               	.L__stack_usage = 0
 340:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 3168               		.loc 1 340 5 view .LVU722
 340:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 3169               		.loc 1 340 28 is_stmt 0 view .LVU723
 3170 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3171 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3172 0004 8081      		ld r24,Z
 3173 0006 8160      		ori r24,lo8(1<<0)
 3174 0008 8083      		st Z,r24
 343:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 3175               		.loc 1 343 95 is_stmt 1 view .LVU724
 344:quantum/rgblight.c **** }
 3176               		.loc 1 344 5 view .LVU725
 3177 000a 8695      		lsr r24
 3178 000c 0C94 0000 		jmp rgblight_mode
 3179               	.LVL212:
 3180               		.cfi_endproc
 3181               	.LFE110:
 3183               		.section	.text.rgblight_toggle,"ax",@progbits
 3184               	.global	rgblight_toggle
 3186               	rgblight_toggle:
 3187               	.LFB108:
 321:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 3188               		.loc 1 321 28 view -0
 3189               		.cfi_startproc
 3190               	/* prologue: function */
 3191               	/* frame size = 0 */
 3192               	/* stack size = 0 */
 3193               	.L__stack_usage = 0
 322:quantum/rgblight.c ****     if (rgblight_config.enable) {
 3194               		.loc 1 322 96 view .LVU727
 323:quantum/rgblight.c ****         rgblight_disable();
 3195               		.loc 1 323 5 view .LVU728
 323:quantum/rgblight.c ****         rgblight_disable();
 3196               		.loc 1 323 9 is_stmt 0 view .LVU729
 3197 0000 8091 0000 		lds r24,rgblight_config
 323:quantum/rgblight.c ****         rgblight_disable();
 3198               		.loc 1 323 8 view .LVU730
 3199 0004 80FD      		sbrc r24,0
 324:quantum/rgblight.c ****     } else {
 3200               		.loc 1 324 9 is_stmt 1 view .LVU731
 3201 0006 0C94 0000 		jmp rgblight_disable
 3202               	.LVL213:
 3203               	.L156:
 326:quantum/rgblight.c ****     }
 3204               		.loc 1 326 9 view .LVU732
 3205 000a 0C94 0000 		jmp rgblight_enable
 3206               	.LVL214:
 3207               		.cfi_endproc
 3208               	.LFE108:
 3210               		.section	.text.rgblight_mode_noeeprom,"ax",@progbits
 3211               	.global	rgblight_mode_noeeprom
 3213               	rgblight_mode_noeeprom:
 3214               	.LVL215:
 3215               	.LFB107:
 319:quantum/rgblight.c **** 
 3216               		.loc 1 319 43 view -0
 3217               		.cfi_startproc
 3218               	/* prologue: function */
 3219               	/* frame size = 0 */
 3220               	/* stack size = 0 */
 3221               	.L__stack_usage = 0
 319:quantum/rgblight.c **** 
 3222               		.loc 1 319 45 view .LVU734
 3223 0000 60E0      		ldi r22,0
 3224 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3225               	.LVL216:
 319:quantum/rgblight.c **** 
 3226               		.loc 1 319 45 is_stmt 0 view .LVU735
 3227               		.cfi_endproc
 3228               	.LFE107:
 3230               		.section	.text.rgblight_init,"ax",@progbits
 3231               	.global	rgblight_init
 3233               	rgblight_init:
 3234               	.LFB93:
 188:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 3235               		.loc 1 188 26 is_stmt 1 view -0
 3236               		.cfi_startproc
 3237               	/* prologue: function */
 3238               	/* frame size = 0 */
 3239               	/* stack size = 0 */
 3240               	.L__stack_usage = 0
 192:quantum/rgblight.c ****         return;
 3241               		.loc 1 192 5 view .LVU737
 192:quantum/rgblight.c ****         return;
 3242               		.loc 1 192 8 is_stmt 0 view .LVU738
 3243 0000 8091 0000 		lds r24,is_rgblight_initialized
 3244 0004 8111      		cpse r24,__zero_reg__
 3245 0006 00C0      		rjmp .L158
 196:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 3246               		.loc 1 196 39 is_stmt 1 view .LVU739
 197:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 3247               		.loc 1 197 38 view .LVU740
 198:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 3248               		.loc 1 198 5 view .LVU741
 198:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 3249               		.loc 1 198 10 is_stmt 0 view .LVU742
 3250 0008 0E94 0000 		call eeconfig_is_enabled
 3251               	.LVL217:
 198:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 3252               		.loc 1 198 8 view .LVU743
 3253 000c 8111      		cpse r24,__zero_reg__
 3254 000e 00C0      		rjmp .L160
 199:quantum/rgblight.c ****         eeconfig_init();
 3255               		.loc 1 199 60 is_stmt 1 view .LVU744
 200:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 3256               		.loc 1 200 9 view .LVU745
 3257 0010 0E94 0000 		call eeconfig_init
 3258               	.LVL218:
 201:quantum/rgblight.c ****     }
 3259               		.loc 1 201 9 view .LVU746
 3260 0014 0E94 0000 		call eeconfig_update_rgblight_default
 3261               	.LVL219:
 3262               	.L160:
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3263               		.loc 1 203 5 view .LVU747
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3264               		.loc 1 203 27 is_stmt 0 view .LVU748
 3265 0018 0E94 0000 		call eeconfig_read_rgblight
 3266               	.LVL220:
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3267               		.loc 1 203 25 view .LVU749
 3268 001c 6093 0000 		sts rgblight_config,r22
 3269 0020 7093 0000 		sts rgblight_config+1,r23
 3270 0024 8093 0000 		sts rgblight_config+2,r24
 3271 0028 9093 0000 		sts rgblight_config+3,r25
 204:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 3272               		.loc 1 204 39 is_stmt 1 view .LVU750
 205:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3273               		.loc 1 205 5 view .LVU751
 205:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3274               		.loc 1 205 9 is_stmt 0 view .LVU752
 3275 002c 6E7F      		andi r22,lo8(-2)
 205:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3276               		.loc 1 205 8 view .LVU753
 3277 002e 01F4      		brne .L161
 206:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 3278               		.loc 1 206 93 is_stmt 1 view .LVU754
 207:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 3279               		.loc 1 207 9 view .LVU755
 3280 0030 0E94 0000 		call eeconfig_update_rgblight_default
 3281               	.LVL221:
 208:quantum/rgblight.c ****     }
 3282               		.loc 1 208 9 view .LVU756
 208:quantum/rgblight.c ****     }
 3283               		.loc 1 208 31 is_stmt 0 view .LVU757
 3284 0034 0E94 0000 		call eeconfig_read_rgblight
 3285               	.LVL222:
 208:quantum/rgblight.c ****     }
 3286               		.loc 1 208 29 view .LVU758
 3287 0038 6093 0000 		sts rgblight_config,r22
 3288 003c 7093 0000 		sts rgblight_config+1,r23
 3289 0040 8093 0000 		sts rgblight_config+2,r24
 3290 0044 9093 0000 		sts rgblight_config+3,r25
 3291               	.L161:
 210:quantum/rgblight.c **** 
 3292               		.loc 1 210 5 is_stmt 1 view .LVU759
 3293 0048 0E94 0000 		call rgblight_check_config
 3294               	.LVL223:
 212:quantum/rgblight.c **** 
 3295               		.loc 1 212 5 view .LVU760
 215:quantum/rgblight.c **** #endif
 3296               		.loc 1 215 5 view .LVU761
 3297               	.LBB128:
 3298               	.LBI128:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3299               		.loc 1 701 6 view .LVU762
 3300               	.LBB129:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3301               		.loc 1 718 5 view .LVU763
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3302               		.loc 1 718 35 is_stmt 0 view .LVU764
 3303 004c 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 3304               		.loc 1 719 43 is_stmt 1 view .LVU765
 3305               	.LBE129:
 3306               	.LBE128:
 218:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3307               		.loc 1 218 5 view .LVU766
 218:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3308               		.loc 1 218 9 is_stmt 0 view .LVU767
 3309 0050 8091 0000 		lds r24,rgblight_config
 218:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3310               		.loc 1 218 8 view .LVU768
 3311 0054 80FF      		sbrs r24,0
 3312 0056 00C0      		rjmp .L162
 219:quantum/rgblight.c ****     }
 3313               		.loc 1 219 9 is_stmt 1 view .LVU769
 3314 0058 8695      		lsr r24
 3315 005a 0E94 0000 		call rgblight_mode_noeeprom
 3316               	.LVL224:
 3317               	.L162:
 222:quantum/rgblight.c **** }
 3318               		.loc 1 222 5 view .LVU770
 222:quantum/rgblight.c **** }
 3319               		.loc 1 222 29 is_stmt 0 view .LVU771
 3320 005e 81E0      		ldi r24,lo8(1)
 3321 0060 8093 0000 		sts is_rgblight_initialized,r24
 3322               	.L158:
 3323               	/* epilogue start */
 223:quantum/rgblight.c **** 
 3324               		.loc 1 223 1 view .LVU772
 3325 0064 0895      		ret
 3326               		.cfi_endproc
 3327               	.LFE93:
 3329               		.section	.text.rgblight_enable_noeeprom,"ax",@progbits
 3330               	.global	rgblight_enable_noeeprom
 3332               	rgblight_enable_noeeprom:
 3333               	.LFB111:
 347:quantum/rgblight.c ****     rgblight_config.enable = 1;
 3334               		.loc 1 347 37 is_stmt 1 view -0
 3335               		.cfi_startproc
 3336               	/* prologue: function */
 3337               	/* frame size = 0 */
 3338               	/* stack size = 0 */
 3339               	.L__stack_usage = 0
 348:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3340               		.loc 1 348 5 view .LVU774
 348:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3341               		.loc 1 348 28 is_stmt 0 view .LVU775
 3342 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3343 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3344 0004 8081      		ld r24,Z
 3345 0006 8160      		ori r24,lo8(1<<0)
 3346 0008 8083      		st Z,r24
 349:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 3347               		.loc 1 349 97 is_stmt 1 view .LVU776
 350:quantum/rgblight.c **** }
 3348               		.loc 1 350 5 view .LVU777
 3349 000a 8695      		lsr r24
 3350 000c 0C94 0000 		jmp rgblight_mode_noeeprom
 3351               	.LVL225:
 3352               		.cfi_endproc
 3353               	.LFE111:
 3355               		.section	.text.rgblight_toggle_noeeprom,"ax",@progbits
 3356               	.global	rgblight_toggle_noeeprom
 3358               	rgblight_toggle_noeeprom:
 3359               	.LFB109:
 330:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 3360               		.loc 1 330 37 view -0
 3361               		.cfi_startproc
 3362               	/* prologue: function */
 3363               	/* frame size = 0 */
 3364               	/* stack size = 0 */
 3365               	.L__stack_usage = 0
 331:quantum/rgblight.c ****     if (rgblight_config.enable) {
 3366               		.loc 1 331 98 view .LVU779
 332:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 3367               		.loc 1 332 5 view .LVU780
 332:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 3368               		.loc 1 332 9 is_stmt 0 view .LVU781
 3369 0000 8091 0000 		lds r24,rgblight_config
 332:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 3370               		.loc 1 332 8 view .LVU782
 3371 0004 80FD      		sbrc r24,0
 333:quantum/rgblight.c ****     } else {
 3372               		.loc 1 333 9 is_stmt 1 view .LVU783
 3373 0006 0C94 0000 		jmp rgblight_disable_noeeprom
 3374               	.LVL226:
 3375               	.L168:
 335:quantum/rgblight.c ****     }
 3376               		.loc 1 335 9 view .LVU784
 3377 000a 0C94 0000 		jmp rgblight_enable_noeeprom
 3378               	.LVL227:
 3379               		.cfi_endproc
 3380               	.LFE109:
 3382               		.section	.text.rgblight_update_dword,"ax",@progbits
 3383               	.global	rgblight_update_dword
 3385               	rgblight_update_dword:
 3386               	.LVL228:
 3387               	.LFB95:
 227:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3388               		.loc 1 227 44 view -0
 3389               		.cfi_startproc
 3390               	/* prologue: function */
 3391               	/* frame size = 0 */
 3392               	/* stack size = 0 */
 3393               	.L__stack_usage = 0
 228:quantum/rgblight.c ****     rgblight_config.raw = dword;
 3394               		.loc 1 228 39 view .LVU786
 229:quantum/rgblight.c ****     if (rgblight_config.enable)
 3395               		.loc 1 229 5 view .LVU787
 229:quantum/rgblight.c ****     if (rgblight_config.enable)
 3396               		.loc 1 229 25 is_stmt 0 view .LVU788
 3397 0000 6093 0000 		sts rgblight_config,r22
 3398 0004 7093 0000 		sts rgblight_config+1,r23
 3399 0008 8093 0000 		sts rgblight_config+2,r24
 3400 000c 9093 0000 		sts rgblight_config+3,r25
 230:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3401               		.loc 1 230 5 is_stmt 1 view .LVU789
 230:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3402               		.loc 1 230 8 is_stmt 0 view .LVU790
 3403 0010 60FF      		sbrs r22,0
 3404 0012 00C0      		rjmp .L170
 231:quantum/rgblight.c ****     else {
 3405               		.loc 1 231 9 is_stmt 1 view .LVU791
 3406 0014 862F      		mov r24,r22
 3407 0016 8695      		lsr r24
 3408 0018 0C94 0000 		jmp rgblight_mode_noeeprom
 3409               	.LVL229:
 3410               	.L170:
 234:quantum/rgblight.c **** #endif
 3411               		.loc 1 234 9 view .LVU792
 3412               	.LBB132:
 3413               	.LBI132:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3414               		.loc 1 701 6 view .LVU793
 3415               	.LBB133:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3416               		.loc 1 718 5 view .LVU794
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3417               		.loc 1 718 35 is_stmt 0 view .LVU795
 3418 001c 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 3419               		.loc 1 719 43 is_stmt 1 view .LVU796
 3420               	.LBE133:
 3421               	.LBE132:
 236:quantum/rgblight.c ****     }
 3422               		.loc 1 236 9 view .LVU797
 3423 0020 0C94 0000 		jmp rgblight_set
 3424               	.LVL230:
 236:quantum/rgblight.c ****     }
 3425               		.loc 1 236 9 is_stmt 0 view .LVU798
 3426               		.cfi_endproc
 3427               	.LFE95:
 3429               		.section	.text.rgblight_timer_disable,"ax",@progbits
 3430               	.global	rgblight_timer_disable
 3432               	rgblight_timer_disable:
 3433               	.LFB169:
 3434               		.cfi_startproc
 3435               	/* prologue: function */
 3436               	/* frame size = 0 */
 3437               	/* stack size = 0 */
 3438               	.L__stack_usage = 0
 3439 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 3440               	/* epilogue start */
 3441 0004 0895      		ret
 3442               		.cfi_endproc
 3443               	.LFE169:
 3445               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 3446               	.global	rgblight_timer_toggle
 3448               	rgblight_timer_toggle:
 3449               	.LFB159:
 734:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 3450               		.loc 1 734 34 is_stmt 1 view -0
 3451               		.cfi_startproc
 3452               	/* prologue: function */
 3453               	/* frame size = 0 */
 3454               	/* stack size = 0 */
 3455               	.L__stack_usage = 0
 735:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 3456               		.loc 1 735 40 view .LVU800
 736:quantum/rgblight.c ****         rgblight_timer_disable();
 3457               		.loc 1 736 5 view .LVU801
 736:quantum/rgblight.c ****         rgblight_timer_disable();
 3458               		.loc 1 736 8 is_stmt 0 view .LVU802
 3459 0000 8091 0000 		lds r24,rgblight_status+1
 3460 0004 8823      		tst r24
 3461 0006 01F0      		breq .L173
 737:quantum/rgblight.c ****     } else {
 3462               		.loc 1 737 9 is_stmt 1 view .LVU803
 3463               	.LBB136:
 3464               	.LBI136:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3465               		.loc 1 701 6 view .LVU804
 3466               	.LBB137:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3467               		.loc 1 718 5 view .LVU805
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3468               		.loc 1 718 35 is_stmt 0 view .LVU806
 3469 0008 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 3470               		.loc 1 719 43 is_stmt 1 view .LVU807
 3471               	/* epilogue start */
 3472               	.LBE137:
 3473               	.LBE136:
 741:quantum/rgblight.c **** 
 3474               		.loc 1 741 1 is_stmt 0 view .LVU808
 3475 000c 0895      		ret
 3476               	.L173:
 739:quantum/rgblight.c ****     }
 3477               		.loc 1 739 9 is_stmt 1 view .LVU809
 3478 000e 0C94 0000 		jmp rgblight_timer_enable
 3479               	.LVL231:
 3480               		.cfi_endproc
 3481               	.LFE159:
 3483               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 3484               	.global	rgblight_show_solid_color
 3486               	rgblight_show_solid_color:
 3487               	.LVL232:
 3488               	.LFB160:
 743:quantum/rgblight.c ****     rgblight_enable();
 3489               		.loc 1 743 65 view -0
 3490               		.cfi_startproc
 743:quantum/rgblight.c ****     rgblight_enable();
 3491               		.loc 1 743 65 is_stmt 0 view .LVU811
 3492 0000 1F93      		push r17
 3493               	.LCFI51:
 3494               		.cfi_def_cfa_offset 3
 3495               		.cfi_offset 17, -2
 3496 0002 CF93      		push r28
 3497               	.LCFI52:
 3498               		.cfi_def_cfa_offset 4
 3499               		.cfi_offset 28, -3
 3500 0004 DF93      		push r29
 3501               	.LCFI53:
 3502               		.cfi_def_cfa_offset 5
 3503               		.cfi_offset 29, -4
 3504               	/* prologue: function */
 3505               	/* frame size = 0 */
 3506               	/* stack size = 3 */
 3507               	.L__stack_usage = 3
 3508 0006 C82F      		mov r28,r24
 3509 0008 D62F      		mov r29,r22
 3510 000a 142F      		mov r17,r20
 744:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 3511               		.loc 1 744 5 is_stmt 1 view .LVU812
 3512 000c 0E94 0000 		call rgblight_enable
 3513               	.LVL233:
 745:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 3514               		.loc 1 745 5 view .LVU813
 3515 0010 81E0      		ldi r24,lo8(1)
 3516 0012 0E94 0000 		call rgblight_mode
 3517               	.LVL234:
 746:quantum/rgblight.c **** }
 3518               		.loc 1 746 5 view .LVU814
 3519 0016 412F      		mov r20,r17
 3520 0018 6D2F      		mov r22,r29
 3521 001a 8C2F      		mov r24,r28
 3522               	/* epilogue start */
 747:quantum/rgblight.c **** 
 3523               		.loc 1 747 1 is_stmt 0 view .LVU815
 3524 001c DF91      		pop r29
 3525               	.LVL235:
 747:quantum/rgblight.c **** 
 3526               		.loc 1 747 1 view .LVU816
 3527 001e CF91      		pop r28
 3528               	.LVL236:
 747:quantum/rgblight.c **** 
 3529               		.loc 1 747 1 view .LVU817
 3530 0020 1F91      		pop r17
 3531               	.LVL237:
 746:quantum/rgblight.c **** }
 3532               		.loc 1 746 5 view .LVU818
 3533 0022 0C94 0000 		jmp rgblight_setrgb
 3534               	.LVL238:
 746:quantum/rgblight.c **** }
 3535               		.loc 1 746 5 view .LVU819
 3536               		.cfi_endproc
 3537               	.LFE160:
 3539               		.section	.text.rgblight_task,"ax",@progbits
 3540               	.global	rgblight_task
 3542               	rgblight_task:
 3543               	.LFB162:
 761:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 3544               		.loc 1 761 26 is_stmt 1 view -0
 3545               		.cfi_startproc
 3546 0000 0F93      		push r16
 3547               	.LCFI54:
 3548               		.cfi_def_cfa_offset 3
 3549               		.cfi_offset 16, -2
 3550 0002 1F93      		push r17
 3551               	.LCFI55:
 3552               		.cfi_def_cfa_offset 4
 3553               		.cfi_offset 17, -3
 3554 0004 CF93      		push r28
 3555               	.LCFI56:
 3556               		.cfi_def_cfa_offset 5
 3557               		.cfi_offset 28, -4
 3558 0006 DF93      		push r29
 3559               	.LCFI57:
 3560               		.cfi_def_cfa_offset 6
 3561               		.cfi_offset 29, -5
 3562               	/* prologue: function */
 3563               	/* frame size = 0 */
 3564               	/* stack size = 4 */
 3565               	.L__stack_usage = 4
 762:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 3566               		.loc 1 762 5 view .LVU821
 762:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 3567               		.loc 1 762 8 is_stmt 0 view .LVU822
 3568 0008 8091 0000 		lds r24,rgblight_status+1
 3569 000c 8823      		tst r24
 3570 000e 01F4      		brne .+2
 3571 0010 00C0      		rjmp .L177
 3572               	.LBB148:
 763:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 3573               		.loc 1 763 9 is_stmt 1 view .LVU823
 3574               	.LVL239:
 764:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 3575               		.loc 1 764 9 view .LVU824
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 3576               		.loc 1 765 9 view .LVU825
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 3577               		.loc 1 765 77 is_stmt 0 view .LVU826
 3578 0012 8091 0000 		lds r24,rgblight_status
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 3579               		.loc 1 765 54 view .LVU827
 3580 0016 E091 0000 		lds r30,rgblight_config
 3581 001a E695      		lsr r30
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 3582               		.loc 1 765 23 view .LVU828
 3583 001c E81B      		sub r30,r24
 3584               	.LVL240:
 766:quantum/rgblight.c **** 
 3585               		.loc 1 766 9 is_stmt 1 view .LVU829
 766:quantum/rgblight.c **** 
 3586               		.loc 1 766 37 is_stmt 0 view .LVU830
 3587 001e E093 0000 		sts animation_status+2,r30
 769:quantum/rgblight.c ****         }
 3588               		.loc 1 769 9 is_stmt 1 view .LVU831
 772:quantum/rgblight.c ****             // breathing mode
 3589               		.loc 1 772 14 view .LVU832
 772:quantum/rgblight.c ****             // breathing mode
 3590               		.loc 1 772 17 is_stmt 0 view .LVU833
 3591 0022 8230      		cpi r24,lo8(2)
 3592 0024 01F4      		brne .L180
 774:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 3593               		.loc 1 774 13 is_stmt 1 view .LVU834
 3594               	.LVL241:
 3595               	.LBB149:
 3596               	.LBI149:
 572:quantum/rgblight.c ****     return
 3597               		.loc 1 572 16 view .LVU835
 572:quantum/rgblight.c ****     return
 3598               		.loc 1 572 16 is_stmt 0 view .LVU836
 3599               	.LBE149:
 3600               	.LBE148:
 573:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 3601               		.loc 1 573 5 is_stmt 1 view .LVU837
 3602               	.LBB164:
 3603               	.LBB152:
 3604               	.LBB150:
 577:quantum/rgblight.c **** }
 3605               		.loc 1 577 29 view .LVU838
 577:quantum/rgblight.c **** }
 3606               		.loc 1 577 29 view .LVU839
 577:quantum/rgblight.c **** }
 3607               		.loc 1 577 29 view .LVU840
 3608               	.LBE150:
 3609               	.LBE152:
 774:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 3610               		.loc 1 774 29 is_stmt 0 view .LVU841
 3611 0026 F0E0      		ldi r31,0
 3612 0028 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 3613 002a F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 3614               	.LVL242:
 3615               	.LBB153:
 3616               	.LBB151:
 577:quantum/rgblight.c **** }
 3617               		.loc 1 577 29 view .LVU842
 3618               	/* #APP */
 3619               	 ;  577 "quantum/rgblight.c" 1
 3620 002c E491      		lpm r30, Z
 3621               		
 3622               	 ;  0 "" 2
 3623               	.LVL243:
 577:quantum/rgblight.c **** }
 3624               		.loc 1 577 29 is_stmt 1 view .LVU843
 577:quantum/rgblight.c **** }
 3625               		.loc 1 577 29 is_stmt 0 view .LVU844
 3626               	/* #NOAPP */
 3627               	.LBE151:
 3628               	.LBE153:
 774:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 3629               		.loc 1 774 27 view .LVU845
 3630 002e CE2F      		mov r28,r30
 3631 0030 D0E0      		ldi r29,0
 3632               	.LVL244:
 775:quantum/rgblight.c ****         }
 3633               		.loc 1 775 13 is_stmt 1 view .LVU846
 775:quantum/rgblight.c ****         }
 3634               		.loc 1 775 27 is_stmt 0 view .LVU847
 3635 0032 00E0      		ldi r16,lo8(gs(rgblight_effect_breathing))
 3636 0034 10E0      		ldi r17,hi8(gs(rgblight_effect_breathing))
 3637               	.LVL245:
 3638               	.L181:
 826:quantum/rgblight.c ****             animation_status.restart    = false;
 3639               		.loc 1 826 9 is_stmt 1 view .LVU848
 826:quantum/rgblight.c ****             animation_status.restart    = false;
 3640               		.loc 1 826 12 is_stmt 0 view .LVU849
 3641 0036 8091 0000 		lds r24,animation_status+3
 3642 003a 8823      		tst r24
 3643 003c 01F0      		breq .L184
 827:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 3644               		.loc 1 827 13 is_stmt 1 view .LVU850
 827:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 3645               		.loc 1 827 41 is_stmt 0 view .LVU851
 3646 003e 1092 0000 		sts animation_status+3,__zero_reg__
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 3647               		.loc 1 828 13 is_stmt 1 view .LVU852
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 3648               		.loc 1 828 43 is_stmt 0 view .LVU853
 3649 0042 0E94 0000 		call timer_read
 3650               	.LVL246:
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 3651               		.loc 1 828 72 view .LVU854
 3652 0046 9E01      		movw r18,r28
 3653 0048 2095      		com r18
 3654 004a 3095      		com r19
 3655 004c 820F      		add r24,r18
 3656 004e 931F      		adc r25,r19
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 3657               		.loc 1 828 41 view .LVU855
 3658 0050 9093 0000 		sts animation_status+1,r25
 3659 0054 8093 0000 		sts animation_status,r24
 829:quantum/rgblight.c ****         }
 3660               		.loc 1 829 13 is_stmt 1 view .LVU856
 829:quantum/rgblight.c ****         }
 3661               		.loc 1 829 41 is_stmt 0 view .LVU857
 3662 0058 1092 0000 		sts animation_status+4+1,__zero_reg__
 3663 005c 1092 0000 		sts animation_status+4,__zero_reg__
 3664               	.L184:
 831:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3665               		.loc 1 831 9 is_stmt 1 view .LVU858
 831:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3666               		.loc 1 831 13 is_stmt 0 view .LVU859
 3667 0060 8091 0000 		lds r24,animation_status
 3668 0064 9091 0000 		lds r25,animation_status+1
 3669 0068 0E94 0000 		call timer_elapsed
 3670               	.LVL247:
 831:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3671               		.loc 1 831 12 view .LVU860
 3672 006c 8C17      		cp r24,r28
 3673 006e 9D07      		cpc r25,r29
 3674 0070 00F0      		brlo .L177
 846:quantum/rgblight.c ****             effect_func(&animation_status);
 3675               		.loc 1 846 13 is_stmt 1 view .LVU861
 846:quantum/rgblight.c ****             effect_func(&animation_status);
 3676               		.loc 1 846 41 is_stmt 0 view .LVU862
 3677 0072 E091 0000 		lds r30,animation_status
 3678 0076 F091 0000 		lds r31,animation_status+1
 3679 007a CE0F      		add r28,r30
 3680 007c DF1F      		adc r29,r31
 3681               	.LVL248:
 846:quantum/rgblight.c ****             effect_func(&animation_status);
 3682               		.loc 1 846 41 view .LVU863
 3683 007e D093 0000 		sts animation_status+1,r29
 3684 0082 C093 0000 		sts animation_status,r28
 847:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3685               		.loc 1 847 13 is_stmt 1 view .LVU864
 3686 0086 80E0      		ldi r24,lo8(animation_status)
 3687 0088 90E0      		ldi r25,hi8(animation_status)
 3688 008a F801      		movw r30,r16
 3689               	/* epilogue start */
 3690               	.LBE164:
 855:quantum/rgblight.c **** 
 3691               		.loc 1 855 1 is_stmt 0 view .LVU865
 3692 008c DF91      		pop r29
 3693 008e CF91      		pop r28
 3694 0090 1F91      		pop r17
 3695 0092 0F91      		pop r16
 3696               	.LVL249:
 3697               	.LBB165:
 847:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3698               		.loc 1 847 13 view .LVU866
 3699 0094 0994      		ijmp
 3700               	.LVL250:
 3701               	.L180:
 779:quantum/rgblight.c ****             // rainbow mood mode
 3702               		.loc 1 779 14 is_stmt 1 view .LVU867
 779:quantum/rgblight.c ****             // rainbow mood mode
 3703               		.loc 1 779 17 is_stmt 0 view .LVU868
 3704 0096 8630      		cpi r24,lo8(6)
 3705 0098 01F4      		brne .L182
 781:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 3706               		.loc 1 781 13 is_stmt 1 view .LVU869
 3707               	.LVL251:
 3708               	.LBB154:
 3709               	.LBI154:
 572:quantum/rgblight.c ****     return
 3710               		.loc 1 572 16 view .LVU870
 572:quantum/rgblight.c ****     return
 3711               		.loc 1 572 16 is_stmt 0 view .LVU871
 3712               	.LBE154:
 3713               	.LBE165:
 573:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 3714               		.loc 1 573 5 is_stmt 1 view .LVU872
 3715               	.LBB166:
 3716               	.LBB157:
 3717               	.LBB155:
 577:quantum/rgblight.c **** }
 3718               		.loc 1 577 29 view .LVU873
 577:quantum/rgblight.c **** }
 3719               		.loc 1 577 29 view .LVU874
 577:quantum/rgblight.c **** }
 3720               		.loc 1 577 29 view .LVU875
 3721               	.LBE155:
 3722               	.LBE157:
 781:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 3723               		.loc 1 781 29 is_stmt 0 view .LVU876
 3724 009a F0E0      		ldi r31,0
 3725 009c E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 3726 009e F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 3727               	.LVL252:
 3728               	.LBB158:
 3729               	.LBB156:
 577:quantum/rgblight.c **** }
 3730               		.loc 1 577 29 view .LVU877
 3731               	/* #APP */
 3732               	 ;  577 "quantum/rgblight.c" 1
 3733 00a0 E491      		lpm r30, Z
 3734               		
 3735               	 ;  0 "" 2
 3736               	.LVL253:
 577:quantum/rgblight.c **** }
 3737               		.loc 1 577 29 is_stmt 1 view .LVU878
 577:quantum/rgblight.c **** }
 3738               		.loc 1 577 29 is_stmt 0 view .LVU879
 3739               	/* #NOAPP */
 3740               	.LBE156:
 3741               	.LBE158:
 781:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 3742               		.loc 1 781 27 view .LVU880
 3743 00a2 CE2F      		mov r28,r30
 3744 00a4 D0E0      		ldi r29,0
 3745               	.LVL254:
 782:quantum/rgblight.c ****         }
 3746               		.loc 1 782 13 is_stmt 1 view .LVU881
 782:quantum/rgblight.c ****         }
 3747               		.loc 1 782 27 is_stmt 0 view .LVU882
 3748 00a6 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_mood))
 3749 00a8 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_mood))
 3750 00aa 00C0      		rjmp .L181
 3751               	.LVL255:
 3752               	.L182:
 786:quantum/rgblight.c ****             // rainbow swirl mode
 3753               		.loc 1 786 14 is_stmt 1 view .LVU883
 786:quantum/rgblight.c ****             // rainbow swirl mode
 3754               		.loc 1 786 17 is_stmt 0 view .LVU884
 3755 00ac 8930      		cpi r24,lo8(9)
 3756 00ae 01F4      		brne .L183
 788:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 3757               		.loc 1 788 13 is_stmt 1 view .LVU885
 3758               	.LVL256:
 3759               	.LBB159:
 3760               	.LBI159:
 572:quantum/rgblight.c ****     return
 3761               		.loc 1 572 16 view .LVU886
 572:quantum/rgblight.c ****     return
 3762               		.loc 1 572 16 is_stmt 0 view .LVU887
 3763               	.LBE159:
 3764               	.LBE166:
 573:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 3765               		.loc 1 573 5 is_stmt 1 view .LVU888
 3766               	.LBB167:
 3767               	.LBB162:
 3768               	.LBB160:
 577:quantum/rgblight.c **** }
 3769               		.loc 1 577 29 view .LVU889
 577:quantum/rgblight.c **** }
 3770               		.loc 1 577 29 view .LVU890
 577:quantum/rgblight.c **** }
 3771               		.loc 1 577 29 view .LVU891
 3772               	.LBE160:
 3773               	.LBE162:
 788:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 3774               		.loc 1 788 85 is_stmt 0 view .LVU892
 3775 00b0 E695      		lsr r30
 3776               	.LVL257:
 788:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 3777               		.loc 1 788 29 view .LVU893
 3778 00b2 F0E0      		ldi r31,0
 3779 00b4 E050      		subi r30,lo8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 3780 00b6 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 3781               	.LBB163:
 3782               	.LBB161:
 577:quantum/rgblight.c **** }
 3783               		.loc 1 577 29 view .LVU894
 3784               	/* #APP */
 3785               	 ;  577 "quantum/rgblight.c" 1
 3786 00b8 E491      		lpm r30, Z
 3787               		
 3788               	 ;  0 "" 2
 3789               	.LVL258:
 577:quantum/rgblight.c **** }
 3790               		.loc 1 577 29 is_stmt 1 view .LVU895
 577:quantum/rgblight.c **** }
 3791               		.loc 1 577 29 is_stmt 0 view .LVU896
 3792               	/* #NOAPP */
 3793               	.LBE161:
 3794               	.LBE163:
 788:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 3795               		.loc 1 788 27 view .LVU897
 3796 00ba CE2F      		mov r28,r30
 3797 00bc D0E0      		ldi r29,0
 3798               	.LVL259:
 789:quantum/rgblight.c ****         }
 3799               		.loc 1 789 13 is_stmt 1 view .LVU898
 789:quantum/rgblight.c ****         }
 3800               		.loc 1 789 27 is_stmt 0 view .LVU899
 3801 00be 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_swirl))
 3802 00c0 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_swirl))
 3803 00c2 00C0      		rjmp .L181
 3804               	.LVL260:
 3805               	.L183:
 807:quantum/rgblight.c ****             // christmas mode
 3806               		.loc 1 807 14 is_stmt 1 view .LVU900
 809:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 3807               		.loc 1 809 27 is_stmt 0 view .LVU901
 3808 00c4 C8EE      		ldi r28,lo8(-24)
 3809 00c6 D3E0      		ldi r29,lo8(3)
 810:quantum/rgblight.c ****         }
 3810               		.loc 1 810 27 view .LVU902
 3811 00c8 00E0      		ldi r16,lo8(gs(rgblight_effect_christmas))
 3812 00ca 10E0      		ldi r17,hi8(gs(rgblight_effect_christmas))
 807:quantum/rgblight.c ****             // christmas mode
 3813               		.loc 1 807 17 view .LVU903
 3814 00cc 8F30      		cpi r24,lo8(15)
 3815 00ce 01F4      		brne .+2
 3816 00d0 00C0      		rjmp .L181
 764:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 3817               		.loc 1 764 23 view .LVU904
 3818 00d2 C0ED      		ldi r28,lo8(-48)
 3819 00d4 D7E0      		ldi r29,lo8(7)
 763:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 3820               		.loc 1 763 23 view .LVU905
 3821 00d6 00E0      		ldi r16,lo8(gs(rgblight_effect_dummy))
 3822 00d8 10E0      		ldi r17,hi8(gs(rgblight_effect_dummy))
 3823 00da 00C0      		rjmp .L181
 3824               	.LVL261:
 3825               	.L177:
 3826               	/* epilogue start */
 763:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 3827               		.loc 1 763 23 view .LVU906
 3828               	.LBE167:
 855:quantum/rgblight.c **** 
 3829               		.loc 1 855 1 view .LVU907
 3830 00dc DF91      		pop r29
 3831 00de CF91      		pop r28
 3832 00e0 1F91      		pop r17
 3833 00e2 0F91      		pop r16
 3834 00e4 0895      		ret
 3835               		.cfi_endproc
 3836               	.LFE162:
 3838               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 3839               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a"
 3842               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 3843 0000 64        		.byte	100
 3844 0001 32        		.byte	50
 3845 0002 14        		.byte	20
 3846               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 3847               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a"
 3850               	RGBLED_RAINBOW_MOOD_INTERVALS:
 3851 0000 78        		.byte	120
 3852 0001 3C        		.byte	60
 3853 0002 1E        		.byte	30
 3854               		.weak	RGBLED_BREATHING_INTERVALS
 3855               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a"
 3858               	RGBLED_BREATHING_INTERVALS:
 3859 0000 1E        		.byte	30
 3860 0001 14        		.byte	20
 3861 0002 0A        		.byte	10
 3862 0003 05        		.byte	5
 3863               	.global	rgblight_effect_breathe_table
 3864               		.section	.progmem.data.rgblight_effect_breathe_table,"a"
 3867               	rgblight_effect_breathe_table:
 3868 0000 22        		.byte	34
 3869 0001 23        		.byte	35
 3870 0002 25        		.byte	37
 3871 0003 26        		.byte	38
 3872 0004 28        		.byte	40
 3873 0005 29        		.byte	41
 3874 0006 2A        		.byte	42
 3875 0007 2C        		.byte	44
 3876 0008 2D        		.byte	45
 3877 0009 2F        		.byte	47
 3878 000a 30        		.byte	48
 3879 000b 32        		.byte	50
 3880 000c 33        		.byte	51
 3881 000d 35        		.byte	53
 3882 000e 36        		.byte	54
 3883 000f 38        		.byte	56
 3884 0010 3A        		.byte	58
 3885 0011 3B        		.byte	59
 3886 0012 3D        		.byte	61
 3887 0013 3E        		.byte	62
 3888 0014 40        		.byte	64
 3889 0015 42        		.byte	66
 3890 0016 43        		.byte	67
 3891 0017 45        		.byte	69
 3892 0018 47        		.byte	71
 3893 0019 49        		.byte	73
 3894 001a 4A        		.byte	74
 3895 001b 4C        		.byte	76
 3896 001c 4E        		.byte	78
 3897 001d 50        		.byte	80
 3898 001e 51        		.byte	81
 3899 001f 53        		.byte	83
 3900 0020 55        		.byte	85
 3901 0021 57        		.byte	87
 3902 0022 59        		.byte	89
 3903 0023 5A        		.byte	90
 3904 0024 5C        		.byte	92
 3905 0025 5E        		.byte	94
 3906 0026 60        		.byte	96
 3907 0027 62        		.byte	98
 3908 0028 64        		.byte	100
 3909 0029 66        		.byte	102
 3910 002a 68        		.byte	104
 3911 002b 69        		.byte	105
 3912 002c 6B        		.byte	107
 3913 002d 6D        		.byte	109
 3914 002e 6F        		.byte	111
 3915 002f 71        		.byte	113
 3916 0030 73        		.byte	115
 3917 0031 75        		.byte	117
 3918 0032 77        		.byte	119
 3919 0033 79        		.byte	121
 3920 0034 7B        		.byte	123
 3921 0035 7D        		.byte	125
 3922 0036 7F        		.byte	127
 3923 0037 81        		.byte	-127
 3924 0038 83        		.byte	-125
 3925 0039 85        		.byte	-123
 3926 003a 87        		.byte	-121
 3927 003b 89        		.byte	-119
 3928 003c 8A        		.byte	-118
 3929 003d 8C        		.byte	-116
 3930 003e 8E        		.byte	-114
 3931 003f 90        		.byte	-112
 3932 0040 92        		.byte	-110
 3933 0041 94        		.byte	-108
 3934 0042 96        		.byte	-106
 3935 0043 98        		.byte	-104
 3936 0044 9A        		.byte	-102
 3937 0045 9C        		.byte	-100
 3938 0046 9E        		.byte	-98
 3939 0047 9F        		.byte	-97
 3940 0048 A1        		.byte	-95
 3941 0049 A3        		.byte	-93
 3942 004a A5        		.byte	-91
 3943 004b A7        		.byte	-89
 3944 004c A8        		.byte	-88
 3945 004d AA        		.byte	-86
 3946 004e AC        		.byte	-84
 3947 004f AE        		.byte	-82
 3948 0050 AF        		.byte	-81
 3949 0051 B1        		.byte	-79
 3950 0052 B3        		.byte	-77
 3951 0053 B4        		.byte	-76
 3952 0054 B6        		.byte	-74
 3953 0055 B8        		.byte	-72
 3954 0056 B9        		.byte	-71
 3955 0057 BB        		.byte	-69
 3956 0058 BC        		.byte	-68
 3957 0059 BE        		.byte	-66
 3958 005a BF        		.byte	-65
 3959 005b C1        		.byte	-63
 3960 005c C2        		.byte	-62
 3961 005d C3        		.byte	-61
 3962 005e C5        		.byte	-59
 3963 005f C6        		.byte	-58
 3964 0060 C7        		.byte	-57
 3965 0061 C9        		.byte	-55
 3966 0062 CA        		.byte	-54
 3967 0063 CB        		.byte	-53
 3968 0064 CC        		.byte	-52
 3969 0065 CD        		.byte	-51
 3970 0066 CE        		.byte	-50
 3971 0067 D0        		.byte	-48
 3972 0068 D1        		.byte	-47
 3973 0069 D2        		.byte	-46
 3974 006a D2        		.byte	-46
 3975 006b D3        		.byte	-45
 3976 006c D4        		.byte	-44
 3977 006d D5        		.byte	-43
 3978 006e D6        		.byte	-42
 3979 006f D7        		.byte	-41
 3980 0070 D7        		.byte	-41
 3981 0071 D8        		.byte	-40
 3982 0072 D9        		.byte	-39
 3983 0073 D9        		.byte	-39
 3984 0074 DA        		.byte	-38
 3985 0075 DA        		.byte	-38
 3986 0076 DB        		.byte	-37
 3987 0077 DB        		.byte	-37
 3988 0078 DB        		.byte	-37
 3989 0079 DC        		.byte	-36
 3990 007a DC        		.byte	-36
 3991 007b DC        		.byte	-36
 3992 007c DC        		.byte	-36
 3993 007d DC        		.byte	-36
 3994 007e DD        		.byte	-35
 3995 007f DD        		.byte	-35
 3996 0080 DD        		.byte	-35
 3997 0081 DD        		.byte	-35
 3998 0082 DC        		.byte	-36
 3999 0083 DC        		.byte	-36
 4000 0084 DC        		.byte	-36
 4001 0085 DC        		.byte	-36
 4002 0086 DC        		.byte	-36
 4003 0087 DB        		.byte	-37
 4004 0088 DB        		.byte	-37
 4005 0089 DB        		.byte	-37
 4006 008a DA        		.byte	-38
 4007 008b DA        		.byte	-38
 4008 008c D9        		.byte	-39
 4009 008d D9        		.byte	-39
 4010 008e D8        		.byte	-40
 4011 008f D7        		.byte	-41
 4012 0090 D7        		.byte	-41
 4013 0091 D6        		.byte	-42
 4014 0092 D5        		.byte	-43
 4015 0093 D4        		.byte	-44
 4016 0094 D3        		.byte	-45
 4017 0095 D2        		.byte	-46
 4018 0096 D2        		.byte	-46
 4019 0097 D1        		.byte	-47
 4020 0098 D0        		.byte	-48
 4021 0099 CE        		.byte	-50
 4022 009a CD        		.byte	-51
 4023 009b CC        		.byte	-52
 4024 009c CB        		.byte	-53
 4025 009d CA        		.byte	-54
 4026 009e C9        		.byte	-55
 4027 009f C7        		.byte	-57
 4028 00a0 C6        		.byte	-58
 4029 00a1 C5        		.byte	-59
 4030 00a2 C3        		.byte	-61
 4031 00a3 C2        		.byte	-62
 4032 00a4 C1        		.byte	-63
 4033 00a5 BF        		.byte	-65
 4034 00a6 BE        		.byte	-66
 4035 00a7 BC        		.byte	-68
 4036 00a8 BB        		.byte	-69
 4037 00a9 B9        		.byte	-71
 4038 00aa B8        		.byte	-72
 4039 00ab B6        		.byte	-74
 4040 00ac B4        		.byte	-76
 4041 00ad B3        		.byte	-77
 4042 00ae B1        		.byte	-79
 4043 00af AF        		.byte	-81
 4044 00b0 AE        		.byte	-82
 4045 00b1 AC        		.byte	-84
 4046 00b2 AA        		.byte	-86
 4047 00b3 A8        		.byte	-88
 4048 00b4 A7        		.byte	-89
 4049 00b5 A5        		.byte	-91
 4050 00b6 A3        		.byte	-93
 4051 00b7 A1        		.byte	-95
 4052 00b8 9F        		.byte	-97
 4053 00b9 9E        		.byte	-98
 4054 00ba 9C        		.byte	-100
 4055 00bb 9A        		.byte	-102
 4056 00bc 98        		.byte	-104
 4057 00bd 96        		.byte	-106
 4058 00be 94        		.byte	-108
 4059 00bf 92        		.byte	-110
 4060 00c0 90        		.byte	-112
 4061 00c1 8E        		.byte	-114
 4062 00c2 8C        		.byte	-116
 4063 00c3 8A        		.byte	-118
 4064 00c4 89        		.byte	-119
 4065 00c5 87        		.byte	-121
 4066 00c6 85        		.byte	-123
 4067 00c7 83        		.byte	-125
 4068 00c8 81        		.byte	-127
 4069 00c9 7F        		.byte	127
 4070 00ca 7D        		.byte	125
 4071 00cb 7B        		.byte	123
 4072 00cc 79        		.byte	121
 4073 00cd 77        		.byte	119
 4074 00ce 75        		.byte	117
 4075 00cf 73        		.byte	115
 4076 00d0 71        		.byte	113
 4077 00d1 6F        		.byte	111
 4078 00d2 6D        		.byte	109
 4079 00d3 6B        		.byte	107
 4080 00d4 69        		.byte	105
 4081 00d5 68        		.byte	104
 4082 00d6 66        		.byte	102
 4083 00d7 64        		.byte	100
 4084 00d8 62        		.byte	98
 4085 00d9 60        		.byte	96
 4086 00da 5E        		.byte	94
 4087 00db 5C        		.byte	92
 4088 00dc 5A        		.byte	90
 4089 00dd 59        		.byte	89
 4090 00de 57        		.byte	87
 4091 00df 55        		.byte	85
 4092 00e0 53        		.byte	83
 4093 00e1 51        		.byte	81
 4094 00e2 50        		.byte	80
 4095 00e3 4E        		.byte	78
 4096 00e4 4C        		.byte	76
 4097 00e5 4A        		.byte	74
 4098 00e6 49        		.byte	73
 4099 00e7 47        		.byte	71
 4100 00e8 45        		.byte	69
 4101 00e9 43        		.byte	67
 4102 00ea 42        		.byte	66
 4103 00eb 40        		.byte	64
 4104 00ec 3E        		.byte	62
 4105 00ed 3D        		.byte	61
 4106 00ee 3B        		.byte	59
 4107 00ef 3A        		.byte	58
 4108 00f0 38        		.byte	56
 4109 00f1 36        		.byte	54
 4110 00f2 35        		.byte	53
 4111 00f3 33        		.byte	51
 4112 00f4 32        		.byte	50
 4113 00f5 30        		.byte	48
 4114 00f6 2F        		.byte	47
 4115 00f7 2D        		.byte	45
 4116 00f8 2C        		.byte	44
 4117 00f9 2A        		.byte	42
 4118 00fa 29        		.byte	41
 4119 00fb 28        		.byte	40
 4120 00fc 26        		.byte	38
 4121 00fd 25        		.byte	37
 4122 00fe 23        		.byte	35
 4123 00ff 22        		.byte	34
 4124               		.section	.data.effect_num_leds,"aw"
 4127               	effect_num_leds:
 4128 0000 10        		.byte	16
 4129               		.section	.data.effect_end_pos,"aw"
 4132               	effect_end_pos:
 4133 0000 10        		.byte	16
 4134               		.section	.bss.effect_start_pos,"aw",@nobits
 4137               	effect_start_pos:
 4138 0000 00        		.zero	1
 4139               		.section	.data.clipping_num_leds,"aw"
 4142               	clipping_num_leds:
 4143 0000 10        		.byte	16
 4144               		.section	.bss.clipping_start_pos,"aw",@nobits
 4147               	clipping_start_pos:
 4148 0000 00        		.zero	1
 4149               		.comm	led,48,1
 4150               	.global	animation_status
 4151               		.section	.bss.animation_status,"aw",@nobits
 4154               	animation_status:
 4155 0000 0000 0000 		.zero	6
 4155      0000 
 4156               	.global	is_rgblight_initialized
 4157               		.section	.bss.is_rgblight_initialized,"aw",@nobits
 4160               	is_rgblight_initialized:
 4161 0000 00        		.zero	1
 4162               	.global	rgblight_status
 4163               		.section	.bss.rgblight_status,"aw",@nobits
 4166               	rgblight_status:
 4167 0000 0000      		.zero	2
 4168               		.comm	rgblight_config,5,1
 4169               		.weak	RGBLED_GRADIENT_RANGES
 4170               		.section	.progmem.data.RGBLED_GRADIENT_RANGES,"a"
 4173               	RGBLED_GRADIENT_RANGES:
 4174 0000 FF        		.byte	-1
 4175 0001 AA        		.byte	-86
 4176 0002 7F        		.byte	127
 4177 0003 55        		.byte	85
 4178 0004 40        		.byte	64
 4179               		.section	.rodata.mode_base_table,"a"
 4182               	mode_base_table:
 4183 0000 00        		.byte	0
 4184 0001 01        		.byte	1
 4185 0002 02        		.byte	2
 4186 0003 02        		.byte	2
 4187 0004 02        		.byte	2
 4188 0005 02        		.byte	2
 4189 0006 06        		.byte	6
 4190 0007 06        		.byte	6
 4191 0008 06        		.byte	6
 4192 0009 09        		.byte	9
 4193 000a 09        		.byte	9
 4194 000b 09        		.byte	9
 4195 000c 09        		.byte	9
 4196 000d 09        		.byte	9
 4197 000e 09        		.byte	9
 4198 000f 0F        		.byte	15
 4199 0010 10        		.byte	16
 4200 0011 10        		.byte	16
 4201 0012 10        		.byte	16
 4202 0013 10        		.byte	16
 4203 0014 10        		.byte	16
 4204 0015 10        		.byte	16
 4205 0016 10        		.byte	16
 4206 0017 10        		.byte	16
 4207 0018 10        		.byte	16
 4208 0019 10        		.byte	16
 4209               		.section	.data.static_effect_table,"aw"
 4212               	static_effect_table:
 4213 0000 01        		.byte	1
 4214 0001 10        		.byte	16
 4215 0002 11        		.byte	17
 4216 0003 12        		.byte	18
 4217 0004 13        		.byte	19
 4218 0005 14        		.byte	20
 4219 0006 15        		.byte	21
 4220 0007 16        		.byte	22
 4221 0008 17        		.byte	23
 4222 0009 18        		.byte	24
 4223 000a 19        		.byte	25
 4224               		.text
 4225               	.Letext0:
 4226               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdint.h"
 4227               		.file 5 "./quantum/color.h"
 4228               		.file 6 "tmk_core/common/timer.h"
 4229               		.file 7 "quantum/rgblight.h"
 4230               		.file 8 "tmk_core/common/debug.h"
 4231               		.file 9 "quantum/led_tables.h"
 4232               		.file 10 "./lib/lib8tion/random8.h"
 4233               		.file 11 "./lib/lib8tion/trig8.h"
 4234               		.file 12 "quantum/rgblight_breathe_table.h"
 4235               		.file 13 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/string.h"
 4236               		.file 14 "drivers/avr/ws2812.h"
 4237               		.file 15 "tmk_core/common/eeconfig.h"
 4238               		.file 16 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/avr/eeprom.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgblight.c
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4      *ABS*:000000000000003f __SREG__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:12     .text.rgblight_effect_dummy:0000000000000000 rgblight_effect_dummy
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:31     .text.rgblight_set_clipping_range:0000000000000000 rgblight_set_clipping_range
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4147   .bss.clipping_start_pos:0000000000000000 clipping_start_pos
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4142   .data.clipping_num_leds:0000000000000000 clipping_num_leds
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:55     .text.rgblight_set_effect_range:0000000000000000 rgblight_set_effect_range
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4137   .bss.effect_start_pos:0000000000000000 effect_start_pos
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4132   .data.effect_end_pos:0000000000000000 effect_end_pos
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4127   .data.effect_num_leds:0000000000000000 effect_num_leds
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:101    .text.sethsv_raw:0000000000000000 sethsv_raw
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:163    .text.sethsv:0000000000000000 sethsv
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:182    .text.setrgb:0000000000000000 setrgb
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:211    .text.rgblight_check_config:0000000000000000 rgblight_check_config
                            *COM*:0000000000000005 rgblight_config
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:254    .text.eeconfig_read_rgblight:0000000000000000 eeconfig_read_rgblight
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:274    .text.eeconfig_update_rgblight:0000000000000000 eeconfig_update_rgblight
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:325    .text.eeconfig_update_rgblight_current:0000000000000000 eeconfig_update_rgblight_current
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:346    .text.eeconfig_update_rgblight_default:0000000000000000 eeconfig_update_rgblight_default
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:388    .text.eeconfig_debug_rgblight:0000000000000000 eeconfig_debug_rgblight
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:412    .text.rgblight_read_dword:0000000000000000 rgblight_read_dword
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:435    .text.rgblight_get_mode:0000000000000000 rgblight_get_mode
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:465    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:497    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:529    .text.rgblight_get_speed:0000000000000000 rgblight_get_speed
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:548    .text.rgblight_set_speed_eeprom_helper:0000000000000000 rgblight_set_speed_eeprom_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:583    .text.rgblight_set_speed:0000000000000000 rgblight_set_speed
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:603    .text.rgblight_set_speed_noeeprom:0000000000000000 rgblight_set_speed_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:623    .text.rgblight_get_hue:0000000000000000 rgblight_get_hue
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:642    .text.rgblight_get_sat:0000000000000000 rgblight_get_sat
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:661    .text.rgblight_get_val:0000000000000000 rgblight_get_val
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:680    .text.rgblight_set:0000000000000000 rgblight_set
                            *COM*:0000000000000030 led
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:756    .text.rgblight_setrgb:0000000000000000 rgblight_setrgb
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:824    .text.rgblight_sethsv_noeeprom_old:0000000000000000 rgblight_sethsv_noeeprom_old
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:895    .text.rgblight_effect_breathing:0000000000000000 rgblight_effect_breathing
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3867   .progmem.data.rgblight_effect_breathe_table:0000000000000000 rgblight_effect_breathe_table
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:963    .text.rgblight_effect_rainbow_mood:0000000000000000 rgblight_effect_rainbow_mood
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1010   .text.rgblight_sethsv_eeprom_helper:0000000000000000 rgblight_sethsv_eeprom_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4182   .rodata.mode_base_table:0000000000000000 mode_base_table
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4166   .bss.rgblight_status:0000000000000000 rgblight_status
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4173   .progmem.data.RGBLED_GRADIENT_RANGES:0000000000000000 RGBLED_GRADIENT_RANGES
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1349   .text.rgblight_increase_hue_helper:0000000000000000 rgblight_increase_hue_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1383   .text.rgblight_increase_hue_noeeprom:0000000000000000 rgblight_increase_hue_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1401   .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1419   .text.rgblight_decrease_hue_helper:0000000000000000 rgblight_decrease_hue_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1453   .text.rgblight_decrease_hue_noeeprom:0000000000000000 rgblight_decrease_hue_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1471   .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1489   .text.rgblight_increase_sat_helper:0000000000000000 rgblight_increase_sat_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1520   .text.rgblight_increase_sat_helper:000000000000000e L_1182
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1543   .text.rgblight_increase_sat_noeeprom:0000000000000000 rgblight_increase_sat_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1561   .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1579   .text.rgblight_decrease_sat_helper:0000000000000000 rgblight_decrease_sat_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1609   .text.rgblight_decrease_sat_helper:000000000000000e L_1238
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1632   .text.rgblight_decrease_sat_noeeprom:0000000000000000 rgblight_decrease_sat_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1650   .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1668   .text.rgblight_increase_val_helper:0000000000000000 rgblight_increase_val_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1698   .text.rgblight_increase_val_helper:000000000000000e L_1294
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1721   .text.rgblight_increase_val_noeeprom:0000000000000000 rgblight_increase_val_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1739   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1757   .text.rgblight_decrease_val_helper:0000000000000000 rgblight_decrease_val_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1787   .text.rgblight_decrease_val_helper:000000000000000e L_1350
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1810   .text.rgblight_decrease_val_noeeprom:0000000000000000 rgblight_decrease_val_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1828   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1846   .text.rgblight_sethsv:0000000000000000 rgblight_sethsv
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1866   .text.rgblight_sethsv_noeeprom:0000000000000000 rgblight_sethsv_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1886   .text.rgblight_setrgb_at:0000000000000000 rgblight_setrgb_at
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:1935   .text.rgblight_sethsv_at:0000000000000000 rgblight_sethsv_at
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2015   .text.rgblight_setrgb_range:0000000000000000 rgblight_setrgb_range
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2107   .text.rgblight_sethsv_range:0000000000000000 rgblight_sethsv_range
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2194   .text.rgblight_sethsv_master:0000000000000000 rgblight_sethsv_master
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2223   .text.rgblight_sethsv_slave:0000000000000000 rgblight_sethsv_slave
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2252   .text.rgblight_setrgb_master:0000000000000000 rgblight_setrgb_master
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2281   .text.rgblight_setrgb_slave:0000000000000000 rgblight_setrgb_slave
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2310   .text.rgblight_effect_rainbow_swirl:0000000000000000 rgblight_effect_rainbow_swirl
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2450   .text.rgblight_effect_christmas:0000000000000000 rgblight_effect_christmas
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2579   .text.rgblight_disable:0000000000000000 rgblight_disable
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2648   .text.rgblight_disable_noeeprom:0000000000000000 rgblight_disable_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2710   .text.rgblight_timer_init:0000000000000000 rgblight_timer_init
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2731   .text.rgblight_timer_enable:0000000000000000 rgblight_timer_enable
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4212   .data.static_effect_table:0000000000000000 static_effect_table
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4154   .bss.animation_status:0000000000000000 animation_status
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2790   .text.rgblight_mode_eeprom_helper:0000000000000000 rgblight_mode_eeprom_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2917   .text.rgblight_step_helper:0000000000000000 rgblight_step_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2958   .text.rgblight_step_noeeprom:0000000000000000 rgblight_step_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2976   .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:2994   .text.rgblight_step_reverse_helper:0000000000000000 rgblight_step_reverse_helper
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3034   .text.rgblight_step_reverse_noeeprom:0000000000000000 rgblight_step_reverse_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3052   .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3070   .text.rgblight_mode:0000000000000000 rgblight_mode
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3090   .text.rgblight_increase:0000000000000000 rgblight_increase
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3125   .text.rgblight_decrease:0000000000000000 rgblight_decrease
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3160   .text.rgblight_enable:0000000000000000 rgblight_enable
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3186   .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3213   .text.rgblight_mode_noeeprom:0000000000000000 rgblight_mode_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3233   .text.rgblight_init:0000000000000000 rgblight_init
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:4160   .bss.is_rgblight_initialized:0000000000000000 is_rgblight_initialized
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3332   .text.rgblight_enable_noeeprom:0000000000000000 rgblight_enable_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3358   .text.rgblight_toggle_noeeprom:0000000000000000 rgblight_toggle_noeeprom
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3385   .text.rgblight_update_dword:0000000000000000 rgblight_update_dword
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3432   .text.rgblight_timer_disable:0000000000000000 rgblight_timer_disable
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3448   .text.rgblight_timer_toggle:0000000000000000 rgblight_timer_toggle
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3486   .text.rgblight_show_solid_color:0000000000000000 rgblight_show_solid_color
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3542   .text.rgblight_task:0000000000000000 rgblight_task
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3858   .progmem.data.RGBLED_BREATHING_INTERVALS:0000000000000000 RGBLED_BREATHING_INTERVALS
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3850   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:0000000000000000 RGBLED_RAINBOW_MOOD_INTERVALS
/var/folders/q5/h5z_knjn13j9zmrblvrgn32h0000gp/T//cc6F02qL.s:3842   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:0000000000000000 RGBLED_RAINBOW_SWIRL_INTERVALS

UNDEFINED SYMBOLS
hsv_to_rgb
eeprom_read_dword
eeprom_update_dword
ws2812_setleds
__udivmodhi4
__divmodhi4
memchr
timer_read
eeconfig_is_enabled
eeconfig_init
timer_elapsed
__do_copy_data
__do_clear_bss
